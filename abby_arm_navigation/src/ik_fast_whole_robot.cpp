/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-01-28 10:43:08.974765
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[0]);
x6=IKcos(j[3]);
x7=IKsin(j[3]);
x8=IKsin(j[5]);
x9=IKcos(j[4]);
x10=IKsin(j[4]);
x11=IKcos(j[5]);
x12=((IkReal(0.000315200000000000))*(x6));
x13=((IkReal(0.00151567000000000))*(x7));
x14=((IkReal(0.0720009000000000))*(x3));
x15=((IkReal(1.00000000000000))*(x9));
x16=((IkReal(0.00151567000000000))*(x4));
x17=((IkReal(1.00000000000000))*(x10));
x18=((IkReal(1.00000000000000))*(x3));
x19=((IkReal(1.00000000000000))*(x7));
x20=((IkReal(0.270000000000000))*(x3));
x21=((IkReal(0.0701403000000000))*(x4));
x22=((IkReal(0.0720009000000000))*(x6));
x23=((IkReal(0.302000000000000))*(x2));
x24=((IkReal(1.00000000000000))*(x6));
x25=((IkReal(1.00000000000000))*(x5));
x26=((IkReal(0.302000000000000))*(x3));
x27=((IkReal(0.000315200000000000))*(x3));
x28=((IkReal(0.0720009000000000))*(x7));
x29=((x0)*(x1));
x30=((x10)*(x6));
x31=((x1)*(x2));
x32=((x1)*(x4));
x33=((x0)*(x2));
x34=((x4)*(x5));
x35=((x0)*(x4));
x36=((IkReal(1.00000000000000))*(x31));
x37=((x18)*(x4));
x38=((x2)*(x3)*(x5));
x39=((x18)*(x34));
x40=((x25)*(x31));
x41=((x37)+(((IkReal(-1.00000000000000))*(x36))));
x42=((x36)+(((IkReal(-1.00000000000000))*(x37))));
x43=((((IkReal(-1.00000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x18)*(x2))));
x44=((((IkReal(1.00000000000000))*(x32)))+(((x18)*(x2))));
x45=((x42)*(x6));
x46=((x41)*(x7));
x47=((((IkReal(-1.00000000000000))*(x18)*(x35)))+(((IkReal(1.00000000000000))*(x2)*(x29))));
x48=((x40)+(((IkReal(-1.00000000000000))*(x39))));
x49=((((x18)*(x33)))+(((IkReal(1.00000000000000))*(x29)*(x4))));
x50=((IkReal(-1.00000000000000))*(x49));
x51=((((x18)*(x2)*(x5)))+(((x25)*(x32))));
x52=((IkReal(-1.00000000000000))*(x51));
x53=((x10)*(x47));
x54=((x50)*(x6));
x55=((((x49)*(x7)))+(((x5)*(x6))));
x56=((((IkReal(-1.00000000000000))*(x24)*(x52)))+(((x0)*(x19))));
x57=((((IkReal(-1.00000000000000))*(x19)*(x51)))+(((x0)*(x24))));
x58=((((IkReal(-1.00000000000000))*(x19)*(x5)))+(((IkReal(-1.00000000000000))*(x24)*(x50))));
eerot[0]=((((x11)*(((((IkReal(-1.00000000000000))*(x17)*(x47)))+(((IkReal(-1.00000000000000))*(x15)*(x58)))))))+(((x55)*(x8))));
eerot[1]=((((x11)*(x55)))+(((x8)*(((x53)+(((x58)*(x9))))))));
eerot[2]=((((x47)*(x9)))+(((x10)*(((x54)+(((x5)*(x7))))))));
IkReal x59=((x3)*(x33));
IkReal x60=((IkReal(1.00000000000000))*(x35));
eetrans[0]=((IkReal(0.0460000000000000))+(((x0)*(x20)))+(((IkReal(-1.00000000000000))*(x26)*(x60)))+(((x23)*(x29)))+(((x7)*(((((IkReal(0.000315200000000000))*(x29)*(x4)))+(((x27)*(x33)))))))+(((x10)*(((((x22)*(x50)))+(((x28)*(x5)))))))+(((x12)*(x5)))+(((x6)*(((((IkReal(0.00151567000000000))*(x59)))+(((x16)*(x29)))))))+(((IkReal(-1.00000000000000))*(x13)*(x5)))+(((x9)*(((((IkReal(0.0720009000000000))*(x2)*(x29)))+(((IkReal(-1.00000000000000))*(x14)*(x60)))))))+(((x21)*(x29)))+(((IkReal(0.0701403000000000))*(x59)))+(((IkReal(-0.0100933000000000))*(x5))));
eerot[3]=((((x46)*(x8)))+(((x11)*(((((x45)*(x9)))+(((x10)*(x43))))))));
eerot[4]=((((x11)*(x46)))+(((x8)*(((((IkReal(-1.00000000000000))*(x15)*(x45)))+(((IkReal(-1.00000000000000))*(x17)*(x43))))))));
eerot[5]=((((x30)*(x42)))+(((x44)*(x9))));
eetrans[1]=((IkReal(-0.760360400000000))+(((x7)*(((((IkReal(-0.000315200000000000))*(x31)))+(((x27)*(x4)))))))+(((IkReal(-0.270000000000000))*(x1)))+(((x6)*(((((x16)*(x3)))+(((IkReal(-0.00151567000000000))*(x31)))))))+(((x9)*(((((x14)*(x2)))+(((IkReal(0.0720009000000000))*(x32)))))))+(((IkReal(0.302000000000000))*(x32)))+(((x21)*(x3)))+(((IkReal(-0.0701403000000000))*(x31)))+(((x30)*(((((IkReal(0.0720009000000000))*(x31)))+(((IkReal(-1.00000000000000))*(x14)*(x4)))))))+(((x23)*(x3))));
eerot[6]=((((x11)*(((((x10)*(x48)))+(((x56)*(x9)))))))+(((x57)*(x8))));
eerot[7]=((((x8)*(((((IkReal(-1.00000000000000))*(x15)*(x56)))+(((IkReal(-1.00000000000000))*(x17)*(x48)))))))+(((x11)*(x57))));
eerot[8]=((((x9)*(((x39)+(((IkReal(-1.00000000000000))*(x40)))))))+(((x10)*(x56))));
IkReal x61=((IkReal(1.00000000000000))*(x5));
IkReal x62=((x1)*(x61));
eetrans[2]=((IkReal(0.707960500000000))+(((x26)*(x34)))+(((IkReal(-1.00000000000000))*(x0)*(x13)))+(((IkReal(-0.0701403000000000))*(x38)))+(((x6)*(((((IkReal(-0.00151567000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x16)*(x62)))))))+(((IkReal(-1.00000000000000))*(x21)*(x62)))+(((x7)*(((((IkReal(-0.000315200000000000))*(x32)*(x5)))+(((IkReal(-1.00000000000000))*(x2)*(x27)*(x61)))))))+(((x0)*(x12)))+(((IkReal(-0.0100933000000000))*(x0)))+(((IkReal(-1.00000000000000))*(x20)*(x61)))+(((x10)*(((((x0)*(x28)))+(((IkReal(-1.00000000000000))*(x22)*(x52)))))))+(((x9)*(((((x14)*(x34)))+(((IkReal(-0.0720009000000000))*(x31)*(x5)))))))+(((IkReal(-1.00000000000000))*(x23)*(x62))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8,_ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r21));
new_r01=r20;
new_r02=((IkReal(-1.00000000000000))*(r22));
new_px=((IkReal(0.707960500000000))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0720009000000000))*(r22))));
new_r10=r01;
new_r11=((IkReal(-1.00000000000000))*(r00));
new_r12=r02;
new_py=((IkReal(-0.0460000000000000))+(((IkReal(-0.0720009000000000))*(r02)))+(px));
new_r20=((IkReal(-1.00000000000000))*(r11));
new_r21=r10;
new_r22=((IkReal(-1.00000000000000))*(r12));
new_pz=((IkReal(-0.760360400000000))+(((IkReal(0.0720009000000000))*(r12)))+(((IkReal(-1.00000000000000))*(py))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[162], zeror[48];
int numroots;
IkReal x63=((IkReal(0.000315200000000000))*(r10));
IkReal x64=((IkReal(0.00501877483443709))*(rxp0_1));
IkReal x65=((IkReal(0.00135506920529801))*(r00));
IkReal x66=((IkReal(0.00271013841059603))*(r01));
IkReal x67=((IkReal(0.000630400000000000))*(r11));
IkReal x68=((IkReal(0.0100375496688742))*(rxp1_1));
IkReal x69=((IkReal(0.270000000000000))*(r20));
IkReal x70=((IkReal(0.232252649006623))*(rxp0_1));
IkReal x71=((IkReal(0.0627082152317881))*(r00));
IkReal x72=((IkReal(0.0100933000000000))*(r10));
IkReal x73=((IkReal(0.540000000000000))*(r00));
IkReal x74=((IkReal(0.125416430463576))*(r20));
IkReal x75=((IkReal(0.464505298013245))*(rxp1_1));
IkReal x76=((IkReal(2.00000000000000))*(npy));
IkReal x77=((IkReal(0.540000000000000))*(r21));
IkReal x78=((IkReal(0.125416430463576))*(r01));
IkReal x79=((IkReal(0.0201866000000000))*(r11));
IkReal x80=((IkReal(1.00000000000000))*(npx));
IkReal x81=((IkReal(0.0201866000000000))*(npz));
IkReal x82=((IkReal(0.000630400000000000))*(rxp1_1));
IkReal x83=((IkReal(0.000170208000000000))*(r01));
IkReal x84=((IkReal(0.0233231397823911))*(r12));
IkReal x85=((IkReal(0.000915464680000000))*(r11));
IkReal x86=((IkReal(0.540000000000000))*(rxp2_0));
IkReal x87=((IkReal(0.00545038200000000))*(r22));
IkReal x88=((IkReal(0.0109007640000000))*(r02));
IkReal x89=((IkReal(0.000340416000000000))*(r21));
IkReal x90=((IkReal(1.08000000000000))*(rxp2_2));
IkReal x91=((IkReal(0.000340416000000000))*(r00));
IkReal x92=((IkReal(0.00126080000000000))*(rxp0_1));
IkReal x93=((IkReal(0.00183092936000000))*(r10));
IkReal x94=((IkReal(0.101000800000000))*(npx));
IkReal x95=((IkReal(0.0221436384351489))*(r10));
IkReal x96=((IkReal(0.00743227067472318))*(r00));
IkReal x97=((IkReal(0.0272702160000000))*(r20));
IkReal x98=((IkReal(0.540000000000000))*(rxp0_0));
IkReal x99=((IkReal(0.0275269284249007))*(rxp0_1));
IkReal x100=((IkReal(0.124000400000000))*(py));
IkReal x101=((IkReal(0.0545404320000000))*(r00));
IkReal x102=((IkReal(1.08000000000000))*(rxp1_0));
IkReal x103=((IkReal(0.0148645413494464))*(r01));
IkReal x104=((IkReal(0.0545404320000000))*(r21));
IkReal x105=((IkReal(0.202001600000000))*(npy));
IkReal x106=((IkReal(0.0442872768702978))*(r11));
IkReal x107=((IkReal(0.0550538568498013))*(rxp1_1));
IkReal x108=((pp)*(r10));
IkReal x109=((IkReal(0.540000000000000))*(rxp1_0));
IkReal x110=((IkReal(0.0201866000000000))*(npy));
IkReal x111=((IkReal(0.0233231397823911))*(r11));
IkReal x112=((IkReal(0.000630400000000000))*(rxp2_1));
IkReal x113=((IkReal(0.000170208000000000))*(r02));
IkReal x114=((IkReal(0.00545038200000000))*(r21));
IkReal x115=((IkReal(0.000915464680000000))*(r12));
IkReal x116=((IkReal(0.000340416000000000))*(r22));
IkReal x117=((IkReal(1.08000000000000))*(rxp1_2));
IkReal x118=((IkReal(0.0109007640000000))*(r01));
IkReal x119=((pp)*(r11));
IkReal x120=((IkReal(1.08000000000000))*(rxp0_0));
IkReal x121=((IkReal(0.0466462795647822))*(r10));
IkReal x122=((IkReal(0.0109007640000000))*(r20));
IkReal x123=((IkReal(0.0403732000000000))*(npx));
IkReal x124=((IkReal(0.0334801080000000))*(r20));
IkReal x125=((IkReal(0.0280447970345762))*(rxp0_1));
IkReal x126=((IkReal(0.540000000000000))*(pz));
IkReal x127=((IkReal(0.00757209519933556))*(r00));
IkReal x128=((IkReal(0.101000800000000))*(py));
IkReal x129=((IkReal(1.00000000000000))*(pp));
IkReal x130=((IkReal(0.124000400000000))*(npx));
IkReal x131=((IkReal(0.00142599406584200))*(r10));
IkReal x132=((IkReal(1.08000000000000))*(px));
IkReal x133=((IkReal(0.0669602160000000))*(r00));
IkReal x134=((IkReal(0.0151441903986711))*(r20));
IkReal x135=((IkReal(0.0560895940691523))*(rxp1_1));
IkReal x136=((IkReal(0.0151441903986711))*(r01));
IkReal x137=((IkReal(0.00285198813168400))*(r11));
IkReal x138=((IkReal(0.248000800000000))*(npy));
IkReal x139=((IkReal(0.0669602160000000))*(r21));
IkReal x140=((IkReal(0.0100375496688742))*(rxp0_0));
IkReal x141=((IkReal(0.000630400000000000))*(r00));
IkReal x142=((IkReal(2.00000000000000))*(px));
IkReal x143=((IkReal(0.00271013841059603))*(r10));
IkReal x144=((IkReal(0.0200750993377483))*(rxp1_0));
IkReal x145=((IkReal(0.00542027682119205))*(r11));
IkReal x146=((IkReal(0.00126080000000000))*(r01));
IkReal x147=((IkReal(0.464505298013245))*(rxp0_0));
IkReal x148=((IkReal(0.125416430463576))*(r10));
IkReal x149=((IkReal(0.0201866000000000))*(r00));
IkReal x150=((IkReal(0.0403732000000000))*(r01));
IkReal x151=((IkReal(0.250832860927152))*(r11));
IkReal x152=((IkReal(0.929010596026490))*(rxp1_0));
IkReal x153=((IkReal(1.08000000000000))*(rxp2_1));
IkReal x154=((IkReal(0.000340416000000000))*(r11));
IkReal x155=((IkReal(0.0466462795647822))*(r02));
IkReal x156=((IkReal(0.00126080000000000))*(rxp1_0));
IkReal x157=((IkReal(0.00183092936000000))*(r01));
IkReal x158=((IkReal(0.00252160000000000))*(rxp0_0));
IkReal x159=((IkReal(0.000680832000000000))*(r10));
IkReal x160=((IkReal(0.00366185872000000))*(r00));
IkReal x161=((IkReal(0.0550538568498013))*(rxp0_0));
IkReal x162=((IkReal(0.248000800000000))*(px));
IkReal x163=((IkReal(0.0442872768702978))*(r00));
IkReal x164=((IkReal(1.08000000000000))*(rxp0_1));
IkReal x165=((IkReal(0.0148645413494464))*(r10));
IkReal x166=((IkReal(0.0885745537405956))*(r01));
IkReal x167=((IkReal(0.0297290826988927))*(r11));
IkReal x168=((IkReal(0.110107713699603))*(rxp1_0));
IkReal x169=((IkReal(2.16000000000000))*(rxp1_1));
IkReal x170=((IkReal(0.00126080000000000))*(rxp2_0));
IkReal x171=((IkReal(1.08000000000000))*(rxp1_1));
IkReal x172=((IkReal(0.00183092936000000))*(r02));
IkReal x173=((IkReal(0.0466462795647822))*(r01));
IkReal x174=((IkReal(0.000340416000000000))*(r12));
IkReal x175=((IkReal(0.0932925591295644))*(r00));
IkReal x176=((IkReal(2.16000000000000))*(rxp0_1));
IkReal x177=((IkReal(0.00285198813168400))*(r00));
IkReal x178=((IkReal(0.0151441903986711))*(r10));
IkReal x179=((IkReal(0.202001600000000))*(px));
IkReal x180=((IkReal(0.0560895940691523))*(rxp0_0));
IkReal x181=((IkReal(2.16000000000000))*(py));
IkReal x182=((IkReal(0.133920432000000))*(r10));
IkReal x183=((IkReal(0.00570397626336800))*(r01));
IkReal x184=((IkReal(0.0302883807973423))*(r11));
IkReal x185=((IkReal(0.112179188138305))*(rxp1_0));
IkReal x186=((IkReal(1.00000000000000))*(py));
IkReal x187=((IkReal(0.00542027682119205))*(r21));
IkReal x188=((IkReal(0.00271013841059603))*(r20));
IkReal x189=((IkReal(1.08000000000000))*(r01));
IkReal x190=((IkReal(0.250832860927152))*(r21));
IkReal x191=((pp)*(r12));
IkReal x192=((IkReal(0.000680832000000000))*(r20));
IkReal x193=((IkReal(1.08000000000000))*(rxp0_2));
IkReal x194=((IkReal(0.0148645413494464))*(r20));
IkReal x195=((IkReal(2.16000000000000))*(rxp1_2));
IkReal x196=((IkReal(0.0297290826988927))*(r21));
IkReal x197=((IkReal(0.109080864000000))*(r01));
IkReal x198=((IkReal(2.16000000000000))*(rxp0_2));
IkReal x199=((IkReal(0.0218015280000000))*(r00));
IkReal x200=((IkReal(0.133920432000000))*(r01));
IkReal x201=((IkReal(0.0302883807973423))*(r21));
IkReal x202=((IkReal(4.00000000000000))*(px));
IkReal x203=((IkReal(2.00000000000000))*(pp));
IkReal x204=((IkReal(2.00000000000000))*(py));
IkReal x205=((IkReal(4.00000000000000))*(py));
IkReal x206=((IkReal(4.00000000000000))*(pp));
IkReal x207=((IkReal(8.00000000000000))*(px));
IkReal x208=((npz)*(x204));
IkReal x209=((r12)*(x129));
IkReal x210=((npx)*(x204));
IkReal x211=((IkReal(1.00000000000000))*(x108));
IkReal x212=((IkReal(2.00000000000000))*(x119));
IkReal x213=((npy)*(x205));
IkReal x214=((py)*(x76));
IkReal x215=((IkReal(2.00000000000000))*(x108));
IkReal x216=((npx)*(x205));
IkReal x217=((IkReal(1.00000000000000))*(x119));
IkReal x218=((r02)*(x203));
IkReal x219=((npz)*(x202));
IkReal x220=((IkReal(-0.0218015280000000))*(r12));
IkReal x221=((npx)*(x202));
IkReal x222=((r00)*(x203));
IkReal x223=((npy)*(x207));
IkReal x224=((r01)*(x206));
IkReal x225=((r01)*(x203));
IkReal x226=((npy)*(x202));
IkReal x227=((npx)*(x207));
IkReal x228=((r00)*(x206));
IkReal x229=((IkReal(-0.00271013841059603))*(r20));
IkReal x230=((IkReal(-0.00100075587183800))+(x94));
IkReal x231=((IkReal(-0.00100075587183800))+(x97));
IkReal x232=((IkReal(0.0100933000000000))+(x63));
IkReal x233=((IkReal(0.0100933000000000))+(x64));
IkReal x234=((npx)+(x72));
IkReal x235=((IkReal(0.0243082794441289))+(x128));
IkReal x236=((IkReal(-0.000315200000000000))+(x70));
IkReal x237=((x65)+(py));
IkReal x238=((x193)+(x194));
IkReal x239=((x148)+(x149));
IkReal x240=((x147)+(x148));
IkReal x241=((x66)+(x68));
IkReal x242=((x66)+(x67));
IkReal x243=((x74)+(x73));
IkReal x244=((x93)+(x92));
IkReal x245=((x179)+(x177));
IkReal x246=((x164)+(x165));
IkReal x247=((x109)+(x110));
IkReal x248=((x112)+(x115));
IkReal x249=((x127)+(x130));
IkReal x250=((x191)+(x81));
IkReal x251=((x108)+(x100));
IkReal x252=((x98)+(x96));
IkReal x253=((x72)+(x80));
IkReal x254=((x136)+(x139));
IkReal x255=((x102)+(x103));
IkReal x256=((x137)+(x138));
IkReal x257=((x134)+(x132));
IkReal x258=((x114)+(x119));
IkReal x259=((x127)+(x129));
IkReal x260=((x124)+(x125));
IkReal x261=((x126)+(x131));
IkReal x262=((x77)+(x75));
IkReal x263=((x82)+(x85));
IkReal x264=((x169)+(x167));
IkReal x265=((x170)+(x172));
IkReal x266=((x88)+(x89));
IkReal x267=((x141)+(x142));
IkReal x268=((x113)+(x114));
IkReal x269=((x100)+(x94));
IkReal x270=((x64)+(x186));
IkReal x271=((x117)+(x118));
IkReal x272=((x69)+(x70));
IkReal x273=((x140)+(x143));
IkReal x274=((x100)+(x97));
IkReal x275=((x113)+(x119));
IkReal x276=((x129)+(x130));
IkReal x277=((x63)+(x65));
IkReal x278=((x158)+(x160));
IkReal x279=((x81)+(x86));
IkReal x280=((x157)+(x156));
IkReal x281=((x178)+(x180));
IkReal x282=((x196)+(x195));
IkReal x283=((x86)+(x87));
IkReal x284=((x126)+(x125));
IkReal x285=((x81)+(x87));
IkReal x286=((x69)+(x72));
IkReal x287=((x76)+(x79));
IkReal x288=((x72)+(x71));
IkReal x289=((x135)+(x138));
IkReal x290=((x155)+(x219));
IkReal x291=((x209)+(x87));
IkReal x292=((x162)+(x222));
IkReal x293=((x214)+(x111));
IkReal x294=((x215)+(x123));
IkReal x295=((IkReal(-0.000315200000000000))+(x69)+(x71));
IkReal x296=((x211)+(x97));
IkReal x297=((x209)+(x86));
IkReal x298=((x173)+(x226));
IkReal x299=((x212)+(x105));
IkReal x300=((x208)+(x84));
IkReal x301=((x154)+(x218));
IkReal x302=((x216)+(x121));
IkReal x303=((x174)+(x225));
IkReal x304=((x175)+(x227));
IkReal x305=((x244)+(x91));
IkReal x306=((x238)+(x101));
IkReal x307=((x124)+(x128)+(x131));
IkReal x308=((x283)+(x83));
IkReal x309=((x302)+(x120));
IkReal x310=((x163)+(x161)+(x221));
IkReal x311=((x168)+(x166)+(x223));
IkReal x312=((x213)+(x106)+(x107));
IkReal x313=((x210)+(x99)+(x95));
IkReal x314=((x312)+(x104));
IkReal x315=((x252)+(x313));
op[0]=((x233)+(x237)+(((IkReal(-1.00000000000000))*(x63))));
op[1]=((x67)+(((IkReal(-1.00000000000000))*(x241))));
op[2]=((x232)+(py)+(((IkReal(-1.00000000000000))*(x64)))+(((IkReal(-1.00000000000000))*(x65))));
op[3]=x229;
op[4]=x187;
op[5]=x188;
op[6]=((x233)+(((IkReal(-1.00000000000000))*(x277)))+(py));
op[7]=((x242)+(((IkReal(-1.00000000000000))*(x68))));
op[8]=((x232)+(x237)+(((IkReal(-1.00000000000000))*(x64))));
op[9]=((IkReal(-0.000315200000000000))+(x234)+(((IkReal(-1.00000000000000))*(x272)))+(((IkReal(-1.00000000000000))*(x71))));
op[10]=((((IkReal(-1.00000000000000))*(x287)))+(x78)+(x262));
op[11]=((x69)+(x236)+(x71)+(((IkReal(-1.00000000000000))*(x253))));
op[12]=((x74)+(((IkReal(-1.00000000000000))*(x73))));
op[13]=((x189)+(((IkReal(-1.00000000000000))*(x190))));
op[14]=((((IkReal(-1.00000000000000))*(x74)))+(x73));
op[15]=((((IkReal(-1.00000000000000))*(x70)))+(x234)+(x295));
op[16]=((((IkReal(-1.00000000000000))*(x287)))+(((IkReal(-1.00000000000000))*(x77)))+(x75)+(((IkReal(-1.00000000000000))*(x78))));
op[17]=((x236)+(((IkReal(-1.00000000000000))*(x253)))+(((IkReal(-1.00000000000000))*(x69)))+(((IkReal(-1.00000000000000))*(x71))));
op[18]=((((IkReal(-1.00000000000000))*(x291)))+(x300)+(((IkReal(-1.00000000000000))*(x263)))+(x279)+(((IkReal(-1.00000000000000))*(x83))));
op[19]=((IkReal(-1.00000000000000))*(x305));
op[20]=((((IkReal(-1.00000000000000))*(x291)))+(x300)+(x279)+(x263)+(x83));
op[21]=((((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x90)))+(x89));
op[22]=x192;
op[23]=((((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x266))));
op[24]=((x285)+(x300)+(((IkReal(-1.00000000000000))*(x263)))+(((IkReal(-1.00000000000000))*(x297)))+(x83));
op[25]=((((IkReal(-1.00000000000000))*(x244)))+(x91));
op[26]=((x285)+(x300)+(((IkReal(-1.00000000000000))*(x297)))+(((IkReal(-1.00000000000000))*(x83)))+(x263));
op[27]=((x231)+(((IkReal(-1.00000000000000))*(x269)))+(x315)+(((IkReal(-1.00000000000000))*(x211))));
op[28]=((((IkReal(-1.00000000000000))*(x255)))+(((IkReal(-1.00000000000000))*(x314)))+(x299));
op[29]=((x230)+(((IkReal(-1.00000000000000))*(x315)))+(((IkReal(-1.00000000000000))*(x274)))+(x108));
op[30]=((((IkReal(-1.00000000000000))*(x238)))+(x101));
op[31]=((x282)+(((IkReal(-1.00000000000000))*(x197))));
op[32]=((((IkReal(-1.00000000000000))*(x101)))+(x238));
op[33]=((IkReal(-0.00100075587183800))+(((IkReal(-1.00000000000000))*(x269)))+(((IkReal(-1.00000000000000))*(x252)))+(x313)+(((IkReal(-1.00000000000000))*(x296))));
op[34]=((((IkReal(-1.00000000000000))*(x312)))+(x255)+(x299)+(x104));
op[35]=((x230)+(x252)+(x108)+(((IkReal(-1.00000000000000))*(x313)))+(((IkReal(-1.00000000000000))*(x100)))+(x97));
op[36]=((((IkReal(-1.00000000000000))*(x247)))+(((IkReal(-1.00000000000000))*(x293)))+(x258)+(((IkReal(-1.00000000000000))*(x248)))+(((IkReal(-1.00000000000000))*(x113))));
op[37]=((x215)+(x122)+(((IkReal(-1.00000000000000))*(x309)))+(((IkReal(-1.00000000000000))*(x123))));
op[38]=((((IkReal(-1.00000000000000))*(x217)))+(x293)+(((IkReal(-1.00000000000000))*(x248)))+(((IkReal(-1.00000000000000))*(x268)))+(x247));
op[39]=((x271)+(x116));
op[40]=((x199)+(x198));
op[41]=((((IkReal(-1.00000000000000))*(x271)))+(x116));
op[42]=((((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x293)))+(((IkReal(-1.00000000000000))*(x248)))+(x275)+(x109)+(((IkReal(-1.00000000000000))*(x110))));
op[43]=((((IkReal(-1.00000000000000))*(x302)))+(x215)+(x120)+(((IkReal(-1.00000000000000))*(x122)))+(((IkReal(-1.00000000000000))*(x123))));
op[44]=((((IkReal(-1.00000000000000))*(x217)))+(x293)+(((IkReal(-1.00000000000000))*(x248)))+(((IkReal(-1.00000000000000))*(x109)))+(x110)+(x268));
op[45]=((((IkReal(-1.00000000000000))*(x260)))+(x235)+(((IkReal(-1.00000000000000))*(x259)))+(x130)+(x261));
op[46]=((((IkReal(-1.00000000000000))*(x256)))+(x254)+(x135));
op[47]=((x235)+(((IkReal(-1.00000000000000))*(x131)))+(x126)+(x127)+(((IkReal(-1.00000000000000))*(x276)))+(x260));
op[48]=((x257)+(((IkReal(-1.00000000000000))*(x133))));
op[49]=((x200)+(((IkReal(-1.00000000000000))*(x201))));
op[50]=((((IkReal(-1.00000000000000))*(x134)))+(x133)+(x132));
op[51]=((x235)+(((IkReal(-1.00000000000000))*(x129)))+(x124)+(x249)+(x131)+(((IkReal(-1.00000000000000))*(x284))));
op[52]=((((IkReal(-1.00000000000000))*(x256)))+(((IkReal(-1.00000000000000))*(x254)))+(x135));
op[53]=((((IkReal(-1.00000000000000))*(x249)))+(x235)+(((IkReal(-1.00000000000000))*(x129)))+(x125)+(((IkReal(-1.00000000000000))*(x124)))+(((IkReal(-1.00000000000000))*(x261))));
op[54]=((((IkReal(-1.00000000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x140)))+(x141)+(x143));
op[55]=((((IkReal(-1.00000000000000))*(x145)))+(((IkReal(-1.00000000000000))*(x146)))+(x144));
op[56]=((((IkReal(-1.00000000000000))*(x267)))+(x140)+(((IkReal(-1.00000000000000))*(x143))));
op[57]=IkReal(0);
op[58]=IkReal(0);
op[59]=IkReal(0);
op[60]=((((IkReal(-1.00000000000000))*(x142)))+(x141)+(((IkReal(-1.00000000000000))*(x273))));
op[61]=((((IkReal(-1.00000000000000))*(x146)))+(x144)+(x145));
op[62]=((((IkReal(-1.00000000000000))*(x267)))+(x273));
op[63]=((((IkReal(-1.00000000000000))*(x239)))+(x147));
op[64]=((x151)+(x150)+(((IkReal(-1.00000000000000))*(x152))));
op[65]=((x239)+(((IkReal(-1.00000000000000))*(x147))));
op[66]=((IkReal(-1.08000000000000))*(r10));
op[67]=((IkReal(2.16000000000000))*(r11));
op[68]=((IkReal(1.08000000000000))*(r10));
op[69]=((x240)+(((IkReal(-1.00000000000000))*(x149))));
op[70]=((x150)+(((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x151))));
op[71]=((((IkReal(-1.00000000000000))*(x240)))+(x149));
op[72]=((((IkReal(-1.00000000000000))*(x290)))+(((IkReal(-1.00000000000000))*(x154)))+(x153)+(x280)+(x218));
op[73]=((((IkReal(-1.00000000000000))*(x159)))+(x278));
op[74]=((((IkReal(-1.00000000000000))*(x290)))+(x153)+(x301)+(((IkReal(-1.00000000000000))*(x280))));
op[75]=x220;
op[76]=IkReal(0);
op[77]=x220;
op[78]=((((IkReal(-1.00000000000000))*(x290)))+(x280)+(x301)+(((IkReal(-1.00000000000000))*(x153))));
op[79]=((x159)+(x278));
op[80]=((((IkReal(-1.00000000000000))*(x290)))+(((IkReal(-1.00000000000000))*(x154)))+(x218)+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x280))));
op[81]=((x292)+(((IkReal(-1.00000000000000))*(x310)))+(x246));
op[82]=((((IkReal(-1.00000000000000))*(x224)))+(x311)+(((IkReal(-1.00000000000000))*(x264))));
op[83]=((x310)+(x162)+(((IkReal(-1.00000000000000))*(x222)))+(((IkReal(-1.00000000000000))*(x246))));
op[84]=((IkReal(0.109080864000000))*(r10));
op[85]=((IkReal(-0.218161728000000))*(r11));
op[86]=((IkReal(-0.109080864000000))*(r10));
op[87]=((x292)+(((IkReal(-1.00000000000000))*(x310)))+(((IkReal(-1.00000000000000))*(x246))));
op[88]=((((IkReal(-1.00000000000000))*(x224)))+(x311)+(x264));
op[89]=((x310)+(x162)+(((IkReal(-1.00000000000000))*(x222)))+(x246));
op[90]=((x298)+(((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-1.00000000000000))*(x303)))+(x265));
op[91]=((x304)+(((IkReal(-1.00000000000000))*(x228)))+(((IkReal(-1.00000000000000))*(x176))));
op[92]=((x171)+(((IkReal(-1.00000000000000))*(x298)))+(x225)+(((IkReal(-1.00000000000000))*(x174)))+(x265));
op[93]=((IkReal(0.0218015280000000))*(r11));
op[94]=((IkReal(0.0436030560000000))*(r10));
op[95]=((IkReal(-0.0218015280000000))*(r11));
op[96]=((x171)+(x174)+(((IkReal(-1.00000000000000))*(x225)))+(x298)+(x265));
op[97]=((x176)+(x304)+(((IkReal(-1.00000000000000))*(x228))));
op[98]=((x303)+(((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-1.00000000000000))*(x298)))+(x265));
op[99]=((((IkReal(-1.00000000000000))*(x178)))+(x180)+(((IkReal(-1.00000000000000))*(x245))));
op[100]=((((IkReal(-1.00000000000000))*(x185)))+(x184)+(x183));
op[101]=((((IkReal(-1.00000000000000))*(x179)))+(x178)+(x177)+(((IkReal(-1.00000000000000))*(x180))));
op[102]=((x181)+(((IkReal(-1.00000000000000))*(x182))));
op[103]=((IkReal(0.267840864000000))*(r11));
op[104]=((x181)+(x182));
op[105]=((x281)+(((IkReal(-1.00000000000000))*(x245))));
op[106]=((((IkReal(-1.00000000000000))*(x185)))+(x183)+(((IkReal(-1.00000000000000))*(x184))));
op[107]=((((IkReal(-1.00000000000000))*(x179)))+(x177)+(((IkReal(-1.00000000000000))*(x281))));
op[108]=((x232)+(((IkReal(-1.00000000000000))*(x270)))+(((IkReal(-1.00000000000000))*(x65))));
op[109]=((((IkReal(-1.00000000000000))*(x67)))+(x241));
op[110]=((x65)+(x233)+(((IkReal(-1.00000000000000))*(x63)))+(((IkReal(-1.00000000000000))*(x186))));
op[111]=x229;
op[112]=x187;
op[113]=x188;
op[114]=((x65)+(x232)+(((IkReal(-1.00000000000000))*(x270))));
op[115]=((x68)+(((IkReal(-1.00000000000000))*(x242))));
op[116]=((x233)+(((IkReal(-1.00000000000000))*(x277)))+(((IkReal(-1.00000000000000))*(x186))));
op[117]=((x236)+(npx)+(x71)+(((IkReal(-1.00000000000000))*(x286))));
op[118]=((((IkReal(-1.00000000000000))*(x76)))+(((IkReal(-1.00000000000000))*(x75)))+(x77)+(x79)+(((IkReal(-1.00000000000000))*(x78))));
op[119]=((IkReal(-0.000315200000000000))+(x286)+(((IkReal(-1.00000000000000))*(x70)))+(((IkReal(-1.00000000000000))*(x80)))+(((IkReal(-1.00000000000000))*(x71))));
op[120]=x243;
op[121]=((((IkReal(-1.00000000000000))*(x189)))+(((IkReal(-1.00000000000000))*(x190))));
op[122]=((IkReal(-1.00000000000000))*(x243));
op[123]=((((IkReal(-1.00000000000000))*(x288)))+(x69)+(x236)+(npx));
op[124]=((((IkReal(-1.00000000000000))*(x76)))+(x79)+(x78)+(((IkReal(-1.00000000000000))*(x262))));
op[125]=((IkReal(-0.000315200000000000))+(x288)+(((IkReal(-1.00000000000000))*(x272)))+(((IkReal(-1.00000000000000))*(x80))));
op[126]=((x250)+(((IkReal(-1.00000000000000))*(x300)))+(((IkReal(-1.00000000000000))*(x283)))+(x263)+(x83));
op[127]=x305;
op[128]=((x250)+(((IkReal(-1.00000000000000))*(x308)))+(((IkReal(-1.00000000000000))*(x263)))+(((IkReal(-1.00000000000000))*(x300))));
op[129]=((((IkReal(-1.00000000000000))*(x90)))+(x266));
op[130]=x192;
op[131]=((((IkReal(-1.00000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(x90)))+(x88));
op[132]=((x283)+(x250)+(((IkReal(-1.00000000000000))*(x83)))+(((IkReal(-1.00000000000000))*(x300)))+(x263));
op[133]=((x244)+(((IkReal(-1.00000000000000))*(x91))));
op[134]=((x308)+(x250)+(((IkReal(-1.00000000000000))*(x263)))+(((IkReal(-1.00000000000000))*(x300))));
op[135]=((((IkReal(-1.00000000000000))*(x94)))+(x231)+(x251)+(((IkReal(-1.00000000000000))*(x315))));
op[136]=((((IkReal(-1.00000000000000))*(x212)))+(x255)+(x312)+(((IkReal(-1.00000000000000))*(x104)))+(x105));
op[137]=((x230)+(x315)+(((IkReal(-1.00000000000000))*(x296)))+(x100));
op[138]=((IkReal(-1.00000000000000))*(x306));
op[139]=((x282)+(x197));
op[140]=x306;
op[141]=((IkReal(-0.00100075587183800))+(((IkReal(-1.00000000000000))*(x94)))+(x251)+(x252)+(((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-1.00000000000000))*(x313))));
op[142]=((((IkReal(-1.00000000000000))*(x255)))+(((IkReal(-1.00000000000000))*(x212)))+(x314)+(x105));
op[143]=((x230)+(((IkReal(-1.00000000000000))*(x252)))+(x313)+(x274)+(((IkReal(-1.00000000000000))*(x211))));
op[144]=((((IkReal(-1.00000000000000))*(x217)))+(x293)+(x248)+(x109)+(((IkReal(-1.00000000000000))*(x110)))+(x268));
op[145]=((x309)+(x122)+(((IkReal(-1.00000000000000))*(x294))));
op[146]=((((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x293)))+(x275)+(x248)+(((IkReal(-1.00000000000000))*(x109)))+(x110));
op[147]=((((IkReal(-1.00000000000000))*(x118)))+(x117)+(x116));
op[148]=((x198)+(((IkReal(-1.00000000000000))*(x199))));
op[149]=((((IkReal(-1.00000000000000))*(x117)))+(x116)+(x118));
op[150]=((((IkReal(-1.00000000000000))*(x217)))+(((IkReal(-1.00000000000000))*(x247)))+(x293)+(((IkReal(-1.00000000000000))*(x268)))+(x248));
op[151]=((x302)+(((IkReal(-1.00000000000000))*(x122)))+(((IkReal(-1.00000000000000))*(x120)))+(((IkReal(-1.00000000000000))*(x294))));
op[152]=((((IkReal(-1.00000000000000))*(x293)))+(x258)+(x247)+(x248)+(((IkReal(-1.00000000000000))*(x113))));
op[153]=((IkReal(0.0243082794441289))+(x284)+(((IkReal(-1.00000000000000))*(x129)))+(((IkReal(-1.00000000000000))*(x307)))+(x249));
op[154]=((((IkReal(-1.00000000000000))*(x289)))+(((IkReal(-1.00000000000000))*(x136)))+(x137)+(x139));
op[155]=((IkReal(0.0243082794441289))+(((IkReal(-1.00000000000000))*(x249)))+(((IkReal(-1.00000000000000))*(x128)))+(((IkReal(-1.00000000000000))*(x129)))+(x124)+(((IkReal(-1.00000000000000))*(x125)))+(x261));
op[156]=((((IkReal(-1.00000000000000))*(x132)))+(x134)+(x133));
op[157]=((((IkReal(-1.00000000000000))*(x200)))+(((IkReal(-1.00000000000000))*(x201))));
op[158]=((((IkReal(-1.00000000000000))*(x257)))+(((IkReal(-1.00000000000000))*(x133))));
op[159]=((IkReal(0.0243082794441289))+(((IkReal(-1.00000000000000))*(x128)))+(((IkReal(-1.00000000000000))*(x259)))+(((IkReal(-1.00000000000000))*(x261)))+(x130)+(x260));
op[160]=((((IkReal(-1.00000000000000))*(x289)))+(((IkReal(-1.00000000000000))*(x139)))+(x137)+(x136));
op[161]=((IkReal(0.0243082794441289))+(((IkReal(-1.00000000000000))*(x260)))+(((IkReal(-1.00000000000000))*(x128)))+(((IkReal(-1.00000000000000))*(x126)))+(x127)+(((IkReal(-1.00000000000000))*(x276)))+(x131));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j6array[16], cj6array[16], sj6array[16], j7array[16], cj7array[16], sj7array[16], j11array[16], cj11array[16], sj11array[16];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ij6 += 3)
{
IkReal htj6 = zeror[ij6+0], htj7 = zeror[ij6+1], htj11 = zeror[ij6+2];
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
j7array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj7)));
j11array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj11)));
IkReal x316=(htj6)*(htj6);
IkReal x317=(htj7)*(htj7);
IkReal x318=(htj11)*(htj11);
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x316))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x316)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x316))))));
cj7array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x317))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x317)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x317))))));
cj11array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x318))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x318)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x318))))));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
sj7array[numsolutions]=((IkReal(2.00000000000000))*(htj7)*(((IKabs(((IkReal(1.00000000000000))+((htj7)*(htj7)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj7)*(htj7))))):(IkReal)1.0e30)));
sj11array[numsolutions]=((IkReal(2.00000000000000))*(htj11)*(((IKabs(((IkReal(1.00000000000000))+((htj11)*(htj11)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj11)*(htj11))))):(IkReal)1.0e30)));
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
if( j11array[numsolutions] > IKPI )
{
    j11array[numsolutions]-=IK2PI;
}
else if( j11array[numsolutions] < -IKPI )
{
    j11array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j6valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj6 = 16;
_nj7 = 1;
_nj11 = 1;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
_ij7[0] = 0; _ij7[1] = -1;
_ij11[0] = 0; _ij11[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( !j6valid[iij6] ) { continue; }
if( IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(cj7array[ij6]-cj7array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij6]-sj7array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(cj11array[ij6]-cj11array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij6]-sj11array[iij6]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j6valid[iij6]=false; _ij6[1] = iij6; _ij7[1] = 0; _ij11[1] = 0;  break; 
}
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

    j7 = j7array[ij6]; cj7 = cj7array[ij6]; sj7 = sj7array[ij6];

    j11 = j11array[ij6]; cj11 = cj11array[ij6]; sj11 = sj11array[ij6];

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x319=((cj11)*(r00)*(sj6));
IkReal x320=((r01)*(sj11)*(sj6));
IkReal x321=((cj11)*(cj6)*(r10));
IkReal x322=((cj6)*(r11)*(sj11));
if( IKabs(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x321)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(0.207960835801989))*(x320)))+(((IkReal(-0.207960835801989))*(x319)))+(((IkReal(-0.207960835801989))*(x322)))+(((IkReal(659.774225260116))*(px)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x319)))+(x320)+(x321)+(((IkReal(-1.00000000000000))*(x322))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x321)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(0.207960835801989))*(x320)))+(((IkReal(-0.207960835801989))*(x319)))+(((IkReal(-0.207960835801989))*(x322)))+(((IkReal(659.774225260116))*(px)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(x319)))+(x320)+(x321)+(((IkReal(-1.00000000000000))*(x322)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j9array[0]=IKatan2(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x321)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(0.207960835801989))*(x320)))+(((IkReal(-0.207960835801989))*(x319)))+(((IkReal(-0.207960835801989))*(x322)))+(((IkReal(659.774225260116))*(px)*(sj6)))), ((((IkReal(-1.00000000000000))*(x319)))+(x320)+(x321)+(((IkReal(-1.00000000000000))*(x322)))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[2];
IkReal x323=IKcos(j9);
IkReal x324=((IkReal(0.0620002000000000))*(sj11));
IkReal x325=((r01)*(sj6));
IkReal x326=((cj6)*(r11));
IkReal x327=((cj11)*(cj6)*(r10));
IkReal x328=((cj11)*(r00)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x327)))+(((IkReal(-1.00000000000000))*(sj11)*(x325)))+(((sj11)*(x326)))+(x323)+(x328));
evalcond[1]=((IkReal(-0.0100933000000000))+(((IkReal(0.0620002000000000))*(x327)))+(((IkReal(-0.0620002000000000))*(x328)))+(((IkReal(-0.0616850000000000))*(x323)))+(((x324)*(x325)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x324)*(x326)))+(((IkReal(-1.00000000000000))*(cj6)*(py)))+(((IkReal(-0.00151567000000000))*(IKsin(j9)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=((((IkReal(-46.2767620920121))*(sj9)))+(((IkReal(40.6981730851703))*((sj9)*(sj9))))+(((IkReal(-1.00000000000000))*(cj9)*(sj9))));
dummyeval[1]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x329=((IkReal(1.00000000000000))*(cj11));
IkReal x330=((r01)*(sj6));
IkReal x331=((cj6)*(sj7));
IkReal x332=((r01)*(sj11));
IkReal x333=((IkReal(1.00000000000000))*(cj6));
IkReal x334=((IkReal(0.0620002000000000))*(sj11));
IkReal x335=((cj11)*(r10));
IkReal x336=((r11)*(sj11));
IkReal x337=((sj6)*(sj7));
IkReal x338=((r21)*(sj11));
IkReal x339=((r00)*(sj6));
IkReal x340=((cj7)*(sj6));
IkReal x341=((cj6)*(r10));
IkReal x342=((IkReal(1.00000000000000))*(sj11));
IkReal x343=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x333))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj11)*(x339)))+(((IkReal(-1.00000000000000))*(x329)*(x341)))+(((IkReal(-1.00000000000000))*(x330)*(x342)))+(((cj6)*(x336))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x339)*(x342)))+(((r11)*(x343)))+(((IkReal(-1.00000000000000))*(x329)*(x330)))+(((sj11)*(x341))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(0.0620002000000000))*(cj6)*(x335)))+(((x330)*(x334)))+(((IkReal(-1.00000000000000))*(py)*(x333)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x334)))+(((px)*(sj6)))+(((IkReal(-0.0620002000000000))*(cj11)*(x339))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x329)*(x337)))+(((x331)*(x332)))+(((cj7)*(x338)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x329)))+(((IkReal(-1.00000000000000))*(r00)*(x329)*(x331)))+(((x336)*(x337))));
evalcond[6]=((((x335)*(x340)))+(((cj7)*(r00)*(x343)))+(((IkReal(-1.00000000000000))*(cj7)*(x332)*(x333)))+(((IkReal(-1.00000000000000))*(x336)*(x340)))+(((sj7)*(x338)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x329))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x344=((IkReal(0.0461153212112420))*(cj11));
IkReal x345=((cj6)*(sj7));
IkReal x346=((cj7)*(r20));
IkReal x347=((IkReal(3.13477742929877))*(px));
IkReal x348=((IkReal(0.194356827572010))*(cj11));
IkReal x349=((IkReal(3.13477742929877))*(pz));
IkReal x350=((py)*(sj6));
IkReal x351=((IkReal(0.743793104074535))*(sj7));
IkReal x352=((r11)*(sj6));
IkReal x353=((r20)*(sj7));
IkReal x354=((cj6)*(r01));
IkReal x355=((cj6)*(cj7));
IkReal x356=((IkReal(0.743793104074535))*(px));
IkReal x357=((IkReal(0.743793104074535))*(cj7));
IkReal x358=((r10)*(sj6));
IkReal x359=((IkReal(0.194356827572010))*(sj11));
IkReal x360=((IkReal(0.0461153212112420))*(sj11));
IkReal x361=((r00)*(x355));
IkReal x362=((cj7)*(x359));
IkReal x363=((cj7)*(x360));
IkReal x364=((r21)*(sj11)*(sj7));
if( IKabs(((IkReal(0.846389905910668))+(((IkReal(-1.00000000000000))*(sj7)*(x352)*(x359)))+(((x346)*(x348)))+(((IkReal(-1.00000000000000))*(cj7)*(x344)*(x358)))+(((x350)*(x357)))+(((x355)*(x356)))+(((x352)*(x363)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x360)))+(((x354)*(x363)))+(((IkReal(-1.00000000000000))*(pz)*(x351)))+(((IkReal(-1.00000000000000))*(r21)*(x362)))+(((x344)*(x353)))+(((r00)*(x345)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x347)))+(((IkReal(-3.13477742929877))*(sj7)*(x350)))+(((sj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(x344)*(x361)))+(((IkReal(-1.00000000000000))*(cj7)*(x349)))+(((IkReal(-1.00000000000000))*(r01)*(x345)*(x359))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.200824138100125))+(((sj7)*(x352)*(x360)))+(((r01)*(x345)*(x360)))+(((pz)*(x357)))+(((IkReal(-1.00000000000000))*(x344)*(x346)))+(((IkReal(-1.00000000000000))*(x348)*(x361)))+(((x345)*(x356)))+(((x352)*(x362)))+(((IkReal(-1.00000000000000))*(cj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x359)))+(((IkReal(3.13477742929877))*(cj7)*(x350)))+(((IkReal(-1.00000000000000))*(sj7)*(x349)))+(((x348)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x344)*(x358)))+(((x350)*(x351)))+(((x347)*(x355)))+(((IkReal(-1.00000000000000))*(r00)*(x344)*(x345)))+(((x354)*(x362)))+(((r21)*(x363))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.846389905910668))+(((IkReal(-1.00000000000000))*(sj7)*(x352)*(x359)))+(((x346)*(x348)))+(((IkReal(-1.00000000000000))*(cj7)*(x344)*(x358)))+(((x350)*(x357)))+(((x355)*(x356)))+(((x352)*(x363)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x360)))+(((x354)*(x363)))+(((IkReal(-1.00000000000000))*(pz)*(x351)))+(((IkReal(-1.00000000000000))*(r21)*(x362)))+(((x344)*(x353)))+(((r00)*(x345)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x347)))+(((IkReal(-3.13477742929877))*(sj7)*(x350)))+(((sj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(x344)*(x361)))+(((IkReal(-1.00000000000000))*(cj7)*(x349)))+(((IkReal(-1.00000000000000))*(r01)*(x345)*(x359)))))+IKsqr(((IkReal(-0.200824138100125))+(((sj7)*(x352)*(x360)))+(((r01)*(x345)*(x360)))+(((pz)*(x357)))+(((IkReal(-1.00000000000000))*(x344)*(x346)))+(((IkReal(-1.00000000000000))*(x348)*(x361)))+(((x345)*(x356)))+(((x352)*(x362)))+(((IkReal(-1.00000000000000))*(cj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x359)))+(((IkReal(3.13477742929877))*(cj7)*(x350)))+(((IkReal(-1.00000000000000))*(sj7)*(x349)))+(((x348)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x344)*(x358)))+(((x350)*(x351)))+(((x347)*(x355)))+(((IkReal(-1.00000000000000))*(r00)*(x344)*(x345)))+(((x354)*(x362)))+(((r21)*(x363)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(0.846389905910668))+(((IkReal(-1.00000000000000))*(sj7)*(x352)*(x359)))+(((x346)*(x348)))+(((IkReal(-1.00000000000000))*(cj7)*(x344)*(x358)))+(((x350)*(x357)))+(((x355)*(x356)))+(((x352)*(x363)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x360)))+(((x354)*(x363)))+(((IkReal(-1.00000000000000))*(pz)*(x351)))+(((IkReal(-1.00000000000000))*(r21)*(x362)))+(((x344)*(x353)))+(((r00)*(x345)*(x348)))+(((IkReal(-1.00000000000000))*(x345)*(x347)))+(((IkReal(-3.13477742929877))*(sj7)*(x350)))+(((sj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(x344)*(x361)))+(((IkReal(-1.00000000000000))*(cj7)*(x349)))+(((IkReal(-1.00000000000000))*(r01)*(x345)*(x359)))), ((IkReal(-0.200824138100125))+(((sj7)*(x352)*(x360)))+(((r01)*(x345)*(x360)))+(((pz)*(x357)))+(((IkReal(-1.00000000000000))*(x344)*(x346)))+(((IkReal(-1.00000000000000))*(x348)*(x361)))+(((x345)*(x356)))+(((x352)*(x362)))+(((IkReal(-1.00000000000000))*(cj7)*(x348)*(x358)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x359)))+(((IkReal(3.13477742929877))*(cj7)*(x350)))+(((IkReal(-1.00000000000000))*(sj7)*(x349)))+(((x348)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x344)*(x358)))+(((x350)*(x351)))+(((x347)*(x355)))+(((IkReal(-1.00000000000000))*(r00)*(x344)*(x345)))+(((x354)*(x362)))+(((r21)*(x363)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[2];
IkReal x365=IKcos(j8);
IkReal x366=IKsin(j8);
IkReal x367=((IkReal(0.0620002000000000))*(sj11));
IkReal x368=((cj6)*(sj7));
IkReal x369=((IkReal(0.0620002000000000))*(cj11));
IkReal x370=((cj7)*(sj6));
IkReal x371=((IkReal(1.00000000000000))*(pz));
IkReal x372=((sj6)*(sj7));
IkReal x373=((cj6)*(cj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj7)*(x367)))+(((r11)*(x367)*(x370)))+(((px)*(x373)))+(((IkReal(-0.0716559700000000))*(x366)))+(((py)*(x370)))+(((r20)*(sj7)*(x369)))+(((IkReal(-1.00000000000000))*(r10)*(x369)*(x370)))+(((IkReal(-1.00000000000000))*(r00)*(x369)*(x373)))+(((IkReal(-1.00000000000000))*(sj7)*(x371)))+(((IkReal(-0.302000000000000))*(x365)))+(((r01)*(x367)*(x373))));
evalcond[1]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(x368)))+(((IkReal(-1.00000000000000))*(r11)*(x367)*(x372)))+(((r00)*(x368)*(x369)))+(((cj7)*(r20)*(x369)))+(((IkReal(-1.00000000000000))*(cj7)*(x371)))+(((r10)*(x369)*(x372)))+(((IkReal(-1.00000000000000))*(r01)*(x367)*(x368)))+(((IkReal(-0.302000000000000))*(x366)))+(((IkReal(0.0716559700000000))*(x365)))+(((IkReal(-1.00000000000000))*(py)*(x372)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x367))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x374=((sj7)*(sj8));
IkReal x375=((cj11)*(r21));
IkReal x376=((cj6)*(r00));
IkReal x377=((cj8)*(sj7));
IkReal x378=((r10)*(sj6));
IkReal x379=((IkReal(1.00000000000000))*(cj8));
IkReal x380=((cj7)*(sj11));
IkReal x381=((r20)*(sj11));
IkReal x382=((cj6)*(cj7));
IkReal x383=((cj11)*(r01));
IkReal x384=((IkReal(1.00000000000000))*(sj8));
IkReal x385=((cj7)*(r12)*(sj6));
IkReal x386=((x380)*(x384));
IkReal x387=((cj11)*(cj7)*(r11)*(sj6));
if( IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x379)*(x387)))+(((IkReal(-1.00000000000000))*(x376)*(x379)*(x380)))+(((x375)*(x377)))+(((IkReal(-1.00000000000000))*(x379)*(x382)*(x383)))+(((r02)*(sj8)*(x382)))+(((IkReal(-1.00000000000000))*(r22)*(x374)))+(((x377)*(x381)))+(((sj8)*(x385)))+(((IkReal(-1.00000000000000))*(x378)*(x379)*(x380))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x379)*(x385)))+(((x374)*(x375)))+(((IkReal(-1.00000000000000))*(x384)*(x387)))+(((IkReal(-1.00000000000000))*(x378)*(x386)))+(((IkReal(-1.00000000000000))*(r02)*(x379)*(x382)))+(((IkReal(-1.00000000000000))*(x376)*(x386)))+(((x374)*(x381)))+(((r22)*(x377)))+(((IkReal(-1.00000000000000))*(x382)*(x383)*(x384))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst19)*(((((IkReal(-1.00000000000000))*(x379)*(x387)))+(((IkReal(-1.00000000000000))*(x376)*(x379)*(x380)))+(((x375)*(x377)))+(((IkReal(-1.00000000000000))*(x379)*(x382)*(x383)))+(((r02)*(sj8)*(x382)))+(((IkReal(-1.00000000000000))*(r22)*(x374)))+(((x377)*(x381)))+(((sj8)*(x385)))+(((IkReal(-1.00000000000000))*(x378)*(x379)*(x380)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(x379)*(x385)))+(((x374)*(x375)))+(((IkReal(-1.00000000000000))*(x384)*(x387)))+(((IkReal(-1.00000000000000))*(x378)*(x386)))+(((IkReal(-1.00000000000000))*(r02)*(x379)*(x382)))+(((IkReal(-1.00000000000000))*(x376)*(x386)))+(((x374)*(x381)))+(((r22)*(x377)))+(((IkReal(-1.00000000000000))*(x382)*(x383)*(x384)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x388=IKcos(j10);
IkReal x389=IKsin(j10);
IkReal x390=((IkReal(1.00000000000000))*(cj7));
IkReal x391=((cj6)*(r02));
IkReal x392=((IkReal(1.00000000000000))*(sj7));
IkReal x393=((r20)*(sj11));
IkReal x394=((cj11)*(r21));
IkReal x395=((r12)*(sj6));
IkReal x396=((sj8)*(x389));
IkReal x397=((cj8)*(x389));
IkReal x398=((r10)*(sj11)*(sj6));
IkReal x399=((IkReal(1.00000000000000))*(x388));
IkReal x400=((cj11)*(cj6)*(r01));
IkReal x401=((cj11)*(r11)*(sj6));
IkReal x402=((cj6)*(r00)*(sj11));
IkReal x403=((cj8)*(x399));
evalcond[0]=((((IkReal(-1.00000000000000))*(x403)))+(((IkReal(-1.00000000000000))*(r22)*(x392)))+(((cj7)*(x395)))+(((cj7)*(x391)))+(x396));
evalcond[1]=((((IkReal(-1.00000000000000))*(x391)*(x392)))+(((IkReal(-1.00000000000000))*(sj8)*(x399)))+(((IkReal(-1.00000000000000))*(r22)*(x390)))+(((IkReal(-1.00000000000000))*(x392)*(x395)))+(((IkReal(-1.00000000000000))*(x397))));
evalcond[2]=((((cj7)*(x393)))+(((IkReal(-1.00000000000000))*(x403)))+(((sj7)*(x398)))+(((cj7)*(x394)))+(((sj7)*(x401)))+(x396)+(((sj7)*(x400)))+(((sj7)*(x402))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x390)*(x400)))+(((sj7)*(x393)))+(((IkReal(-1.00000000000000))*(x390)*(x402)))+(((IkReal(-1.00000000000000))*(x390)*(x398)))+(((sj8)*(x388)))+(((sj7)*(x394)))+(((IkReal(-1.00000000000000))*(x390)*(x401)))+(x397));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x404=((cj7)*(cj8));
IkReal x405=((r12)*(sj6));
IkReal x406=((cj6)*(r02));
IkReal x407=((IkReal(1.00000000000000))*(r22));
IkReal x408=((sj7)*(sj8));
IkReal x409=((cj7)*(sj8));
IkReal x410=((IkReal(1.00000000000000))*(cj8)*(sj7));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(x405)*(x409)))+(((IkReal(-1.00000000000000))*(x406)*(x409)))+(((r22)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x407)))+(((IkReal(-1.00000000000000))*(x406)*(x410)))+(((IkReal(-1.00000000000000))*(x405)*(x410))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((x404)*(x405)))+(((x404)*(x406)))+(((IkReal(-1.00000000000000))*(x407)*(x409)))+(((IkReal(-1.00000000000000))*(cj8)*(sj7)*(x407)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((IkReal(-1.00000000000000))*(x405)*(x408))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(x405)*(x409)))+(((IkReal(-1.00000000000000))*(x406)*(x409)))+(((r22)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x407)))+(((IkReal(-1.00000000000000))*(x406)*(x410)))+(((IkReal(-1.00000000000000))*(x405)*(x410)))))), ((gconst18)*(((((x404)*(x405)))+(((x404)*(x406)))+(((IkReal(-1.00000000000000))*(x407)*(x409)))+(((IkReal(-1.00000000000000))*(cj8)*(sj7)*(x407)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((IkReal(-1.00000000000000))*(x405)*(x408)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x411=IKcos(j10);
IkReal x412=IKsin(j10);
IkReal x413=((IkReal(1.00000000000000))*(cj7));
IkReal x414=((cj6)*(r02));
IkReal x415=((IkReal(1.00000000000000))*(sj7));
IkReal x416=((r20)*(sj11));
IkReal x417=((cj11)*(r21));
IkReal x418=((r12)*(sj6));
IkReal x419=((sj8)*(x412));
IkReal x420=((cj8)*(x412));
IkReal x421=((r10)*(sj11)*(sj6));
IkReal x422=((IkReal(1.00000000000000))*(x411));
IkReal x423=((cj11)*(cj6)*(r01));
IkReal x424=((cj11)*(r11)*(sj6));
IkReal x425=((cj6)*(r00)*(sj11));
IkReal x426=((cj8)*(x422));
evalcond[0]=((((IkReal(-1.00000000000000))*(x426)))+(((cj7)*(x418)))+(((IkReal(-1.00000000000000))*(r22)*(x415)))+(x419)+(((cj7)*(x414))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x413)))+(((IkReal(-1.00000000000000))*(sj8)*(x422)))+(((IkReal(-1.00000000000000))*(x414)*(x415)))+(((IkReal(-1.00000000000000))*(x420)))+(((IkReal(-1.00000000000000))*(x415)*(x418))));
evalcond[2]=((((sj7)*(x424)))+(((IkReal(-1.00000000000000))*(x426)))+(((sj7)*(x421)))+(((cj7)*(x416)))+(((sj7)*(x423)))+(((sj7)*(x425)))+(x419)+(((cj7)*(x417))));
evalcond[3]=((x420)+(((IkReal(-1.00000000000000))*(x413)*(x424)))+(((sj7)*(x416)))+(((IkReal(-1.00000000000000))*(x413)*(x421)))+(((sj8)*(x411)))+(((IkReal(-1.00000000000000))*(x413)*(x425)))+(((sj7)*(x417)))+(((IkReal(-1.00000000000000))*(x413)*(x423))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x427=((IkReal(1.00000000000000))*(cj11));
IkReal x428=((r01)*(sj6));
IkReal x429=((cj6)*(sj7));
IkReal x430=((r01)*(sj11));
IkReal x431=((IkReal(1.00000000000000))*(cj6));
IkReal x432=((IkReal(0.0620002000000000))*(sj11));
IkReal x433=((cj11)*(r10));
IkReal x434=((r11)*(sj11));
IkReal x435=((sj6)*(sj7));
IkReal x436=((r21)*(sj11));
IkReal x437=((r00)*(sj6));
IkReal x438=((cj7)*(sj6));
IkReal x439=((cj6)*(r10));
IkReal x440=((IkReal(1.00000000000000))*(sj11));
IkReal x441=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x431)))+(((r02)*(sj6))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x427)*(x439)))+(((cj11)*(x437)))+(((cj6)*(x434)))+(((IkReal(-1.00000000000000))*(x428)*(x440))));
evalcond[3]=((((r11)*(x441)))+(((sj11)*(x439)))+(((IkReal(-1.00000000000000))*(x427)*(x428)))+(((IkReal(-1.00000000000000))*(x437)*(x440))));
evalcond[4]=((IkReal(0.0515917000000000))+(((px)*(sj6)))+(((IkReal(-0.0620002000000000))*(cj11)*(x437)))+(((x428)*(x432)))+(((IkReal(0.0620002000000000))*(cj6)*(x433)))+(((IkReal(-1.00000000000000))*(py)*(x431)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x432))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x427)))+(((IkReal(-1.00000000000000))*(r00)*(x427)*(x429)))+(((IkReal(-1.00000000000000))*(r10)*(x427)*(x435)))+(((x429)*(x430)))+(((x434)*(x435)))+(((cj7)*(x436))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x430)*(x431)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x427)))+(((sj7)*(x436)))+(((IkReal(-1.00000000000000))*(x434)*(x438)))+(((x433)*(x438)))+(((cj7)*(r00)*(x441))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x442=((cj6)*(sj7));
IkReal x443=((cj11)*(cj7));
IkReal x444=((IkReal(0.0443602609595982))*(r20));
IkReal x445=((IkReal(0.715485771974900))*(px));
IkReal x446=((cj6)*(cj7));
IkReal x447=((pz)*(sj7));
IkReal x448=((IkReal(3.14867567426476))*(cj7));
IkReal x449=((py)*(sj6));
IkReal x450=((IkReal(0.195218521539550))*(sj11));
IkReal x451=((r11)*(sj6));
IkReal x452=((IkReal(3.14867567426476))*(px));
IkReal x453=((IkReal(0.195218521539550))*(r00));
IkReal x454=((IkReal(0.715485771974900))*(cj7));
IkReal x455=((IkReal(0.0443602609595982))*(sj7));
IkReal x456=((r21)*(sj11));
IkReal x457=((r10)*(sj6));
IkReal x458=((IkReal(0.0443602609595982))*(r00));
IkReal x459=((IkReal(0.0443602609595982))*(cj7));
IkReal x460=((IkReal(0.0443602609595982))*(r01)*(sj11));
IkReal x461=((IkReal(0.195218521539550))*(cj11)*(sj7));
if( IKabs(((IkReal(0.850142432051486))+(((cj11)*(x442)*(x453)))+(((x445)*(x446)))+(((sj11)*(x451)*(x459)))+(((IkReal(-3.14867567426476))*(sj7)*(x449)))+(((IkReal(-1.00000000000000))*(r01)*(x442)*(x450)))+(((x446)*(x460)))+(((x457)*(x461)))+(((cj11)*(sj7)*(x444)))+(((IkReal(-1.00000000000000))*(sj7)*(x450)*(x451)))+(((IkReal(-1.00000000000000))*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x450)))+(((IkReal(-1.00000000000000))*(pz)*(x448)))+(((IkReal(0.195218521539550))*(r20)*(x443)))+(((IkReal(-0.0443602609595982))*(x443)*(x457)))+(((x449)*(x454)))+(((IkReal(-1.00000000000000))*(x442)*(x452)))+(((IkReal(-0.715485771974900))*(x447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.193181158433223))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x453)))+(((cj7)*(x450)*(x451)))+(((IkReal(0.715485771974900))*(sj7)*(x449)))+(((r01)*(x446)*(x450)))+(((IkReal(-1.00000000000000))*(cj11)*(x455)*(x457)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x450)))+(((IkReal(-3.14867567426476))*(x447)))+(((x442)*(x445)))+(((IkReal(-0.195218521539550))*(x443)*(x457)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x446)*(x452)))+(((x448)*(x449)))+(((x442)*(x460)))+(((IkReal(-1.00000000000000))*(cj11)*(x442)*(x458)))+(((x456)*(x459)))+(((pz)*(x454)))+(((sj11)*(x451)*(x455)))+(((r20)*(x461))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.850142432051486))+(((cj11)*(x442)*(x453)))+(((x445)*(x446)))+(((sj11)*(x451)*(x459)))+(((IkReal(-3.14867567426476))*(sj7)*(x449)))+(((IkReal(-1.00000000000000))*(r01)*(x442)*(x450)))+(((x446)*(x460)))+(((x457)*(x461)))+(((cj11)*(sj7)*(x444)))+(((IkReal(-1.00000000000000))*(sj7)*(x450)*(x451)))+(((IkReal(-1.00000000000000))*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x450)))+(((IkReal(-1.00000000000000))*(pz)*(x448)))+(((IkReal(0.195218521539550))*(r20)*(x443)))+(((IkReal(-0.0443602609595982))*(x443)*(x457)))+(((x449)*(x454)))+(((IkReal(-1.00000000000000))*(x442)*(x452)))+(((IkReal(-0.715485771974900))*(x447)))))+IKsqr(((IkReal(-0.193181158433223))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x453)))+(((cj7)*(x450)*(x451)))+(((IkReal(0.715485771974900))*(sj7)*(x449)))+(((r01)*(x446)*(x450)))+(((IkReal(-1.00000000000000))*(cj11)*(x455)*(x457)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x450)))+(((IkReal(-3.14867567426476))*(x447)))+(((x442)*(x445)))+(((IkReal(-0.195218521539550))*(x443)*(x457)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x446)*(x452)))+(((x448)*(x449)))+(((x442)*(x460)))+(((IkReal(-1.00000000000000))*(cj11)*(x442)*(x458)))+(((x456)*(x459)))+(((pz)*(x454)))+(((sj11)*(x451)*(x455)))+(((r20)*(x461)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(0.850142432051486))+(((cj11)*(x442)*(x453)))+(((x445)*(x446)))+(((sj11)*(x451)*(x459)))+(((IkReal(-3.14867567426476))*(sj7)*(x449)))+(((IkReal(-1.00000000000000))*(r01)*(x442)*(x450)))+(((x446)*(x460)))+(((x457)*(x461)))+(((cj11)*(sj7)*(x444)))+(((IkReal(-1.00000000000000))*(sj7)*(x450)*(x451)))+(((IkReal(-1.00000000000000))*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x450)))+(((IkReal(-1.00000000000000))*(pz)*(x448)))+(((IkReal(0.195218521539550))*(r20)*(x443)))+(((IkReal(-0.0443602609595982))*(x443)*(x457)))+(((x449)*(x454)))+(((IkReal(-1.00000000000000))*(x442)*(x452)))+(((IkReal(-0.715485771974900))*(x447)))), ((IkReal(-0.193181158433223))+(((IkReal(-1.00000000000000))*(cj6)*(x443)*(x453)))+(((cj7)*(x450)*(x451)))+(((IkReal(0.715485771974900))*(sj7)*(x449)))+(((r01)*(x446)*(x450)))+(((IkReal(-1.00000000000000))*(cj11)*(x455)*(x457)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x450)))+(((IkReal(-3.14867567426476))*(x447)))+(((x442)*(x445)))+(((IkReal(-0.195218521539550))*(x443)*(x457)))+(((IkReal(-1.00000000000000))*(x443)*(x444)))+(((x446)*(x452)))+(((x448)*(x449)))+(((x442)*(x460)))+(((IkReal(-1.00000000000000))*(cj11)*(x442)*(x458)))+(((x456)*(x459)))+(((pz)*(x454)))+(((sj11)*(x451)*(x455)))+(((r20)*(x461)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[2];
IkReal x462=IKcos(j8);
IkReal x463=IKsin(j8);
IkReal x464=((IkReal(0.0620002000000000))*(sj11));
IkReal x465=((cj6)*(sj7));
IkReal x466=((IkReal(0.0620002000000000))*(cj11));
IkReal x467=((cj7)*(sj6));
IkReal x468=((IkReal(1.00000000000000))*(pz));
IkReal x469=((sj6)*(sj7));
IkReal x470=((cj6)*(cj7));
evalcond[0]=((((r20)*(sj7)*(x466)))+(((px)*(x470)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x464)))+(((r11)*(x464)*(x467)))+(((py)*(x467)))+(((IkReal(-1.00000000000000))*(r00)*(x466)*(x470)))+(((IkReal(-1.00000000000000))*(sj7)*(x468)))+(((IkReal(-0.0686246300000000))*(x463)))+(((r01)*(x464)*(x470)))+(((IkReal(-0.302000000000000))*(x462)))+(((IkReal(-1.00000000000000))*(r10)*(x466)*(x467))));
evalcond[1]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(x465)))+(((IkReal(-1.00000000000000))*(py)*(x469)))+(((r10)*(x466)*(x469)))+(((IkReal(-1.00000000000000))*(cj7)*(x468)))+(((IkReal(-1.00000000000000))*(r11)*(x464)*(x469)))+(((IkReal(-0.302000000000000))*(x463)))+(((IkReal(-1.00000000000000))*(r01)*(x464)*(x465)))+(((IkReal(0.0686246300000000))*(x462)))+(((cj7)*(r20)*(x466)))+(((r00)*(x465)*(x466)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x464))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x471=((IkReal(1.00000000000000))*(cj8));
IkReal x472=((cj6)*(sj7));
IkReal x473=((r10)*(sj11));
IkReal x474=((cj7)*(r22));
IkReal x475=((cj8)*(sj11));
IkReal x476=((cj11)*(r01));
IkReal x477=((cj7)*(r20));
IkReal x478=((cj11)*(r11));
IkReal x479=((sj6)*(sj7));
IkReal x480=((sj11)*(sj8));
IkReal x481=((cj11)*(cj7)*(r21));
IkReal x482=((sj8)*(x479));
if( IKabs(((gconst21)*(((((sj8)*(x472)*(x476)))+(((IkReal(-1.00000000000000))*(x471)*(x474)))+(((x473)*(x482)))+(((r00)*(x472)*(x480)))+(((sj8)*(x481)))+(((IkReal(-1.00000000000000))*(r02)*(x471)*(x472)))+(((x478)*(x482)))+(((x477)*(x480)))+(((IkReal(-1.00000000000000))*(r12)*(x471)*(x479))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((cj8)*(x473)*(x479)))+(((cj8)*(x472)*(x476)))+(((sj8)*(x474)))+(((cj8)*(x481)))+(((r12)*(x482)))+(((r02)*(sj8)*(x472)))+(((x475)*(x477)))+(((r00)*(x472)*(x475)))+(((cj8)*(x478)*(x479))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj8)*(x472)*(x476)))+(((IkReal(-1.00000000000000))*(x471)*(x474)))+(((x473)*(x482)))+(((r00)*(x472)*(x480)))+(((sj8)*(x481)))+(((IkReal(-1.00000000000000))*(r02)*(x471)*(x472)))+(((x478)*(x482)))+(((x477)*(x480)))+(((IkReal(-1.00000000000000))*(r12)*(x471)*(x479)))))), ((gconst21)*(((((cj8)*(x473)*(x479)))+(((cj8)*(x472)*(x476)))+(((sj8)*(x474)))+(((cj8)*(x481)))+(((r12)*(x482)))+(((r02)*(sj8)*(x472)))+(((x475)*(x477)))+(((r00)*(x472)*(x475)))+(((cj8)*(x478)*(x479)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x483=IKsin(j10);
IkReal x484=IKcos(j10);
IkReal x485=((IkReal(1.00000000000000))*(cj7));
IkReal x486=((cj6)*(r02));
IkReal x487=((IkReal(1.00000000000000))*(sj7));
IkReal x488=((r20)*(sj11));
IkReal x489=((cj11)*(r21));
IkReal x490=((r12)*(sj6));
IkReal x491=((cj8)*(x483));
IkReal x492=((r10)*(sj11)*(sj6));
IkReal x493=((IkReal(1.00000000000000))*(x484));
IkReal x494=((cj11)*(cj6)*(r01));
IkReal x495=((sj8)*(x483));
IkReal x496=((cj11)*(r11)*(sj6));
IkReal x497=((cj6)*(r00)*(sj11));
IkReal x498=((sj8)*(x493));
evalcond[0]=((((IkReal(-1.00000000000000))*(x495)))+(((cj7)*(x486)))+(((cj7)*(x490)))+(((IkReal(-1.00000000000000))*(r22)*(x487)))+(((IkReal(-1.00000000000000))*(cj8)*(x493))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x487)*(x490)))+(((IkReal(-1.00000000000000))*(x486)*(x487)))+(x491)+(((IkReal(-1.00000000000000))*(x498)))+(((IkReal(-1.00000000000000))*(r22)*(x485))));
evalcond[2]=((((cj7)*(x488)))+(((sj7)*(x492)))+(((cj7)*(x489)))+(((cj8)*(x484)))+(((sj7)*(x494)))+(x495)+(((sj7)*(x497)))+(((sj7)*(x496))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x485)*(x492)))+(((IkReal(-1.00000000000000))*(x485)*(x497)))+(x491)+(((IkReal(-1.00000000000000))*(x498)))+(((IkReal(-1.00000000000000))*(x485)*(x496)))+(((IkReal(-1.00000000000000))*(x485)*(x494)))+(((sj7)*(x489)))+(((sj7)*(x488))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x499=((r12)*(sj6));
IkReal x500=((cj7)*(cj8));
IkReal x501=((cj6)*(r02));
IkReal x502=((cj8)*(sj7));
IkReal x503=((cj7)*(sj8));
IkReal x504=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x505=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst20)*(((((x499)*(x502)))+(((IkReal(-1.00000000000000))*(sj8)*(x504)))+(((r22)*(x500)))+(((x499)*(x503)))+(((x501)*(x502)))+(((x501)*(x503))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((x500)*(x501)))+(((IkReal(-1.00000000000000))*(r22)*(x502)))+(((IkReal(-1.00000000000000))*(x501)*(x505)))+(((x499)*(x500)))+(((IkReal(-1.00000000000000))*(x499)*(x505)))+(((IkReal(-1.00000000000000))*(r22)*(x503))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst20)*(((((x499)*(x502)))+(((IkReal(-1.00000000000000))*(sj8)*(x504)))+(((r22)*(x500)))+(((x499)*(x503)))+(((x501)*(x502)))+(((x501)*(x503)))))), ((gconst20)*(((((x500)*(x501)))+(((IkReal(-1.00000000000000))*(r22)*(x502)))+(((IkReal(-1.00000000000000))*(x501)*(x505)))+(((x499)*(x500)))+(((IkReal(-1.00000000000000))*(x499)*(x505)))+(((IkReal(-1.00000000000000))*(r22)*(x503)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x506=IKsin(j10);
IkReal x507=IKcos(j10);
IkReal x508=((IkReal(1.00000000000000))*(cj7));
IkReal x509=((cj6)*(r02));
IkReal x510=((IkReal(1.00000000000000))*(sj7));
IkReal x511=((r20)*(sj11));
IkReal x512=((cj11)*(r21));
IkReal x513=((r12)*(sj6));
IkReal x514=((cj8)*(x506));
IkReal x515=((r10)*(sj11)*(sj6));
IkReal x516=((IkReal(1.00000000000000))*(x507));
IkReal x517=((cj11)*(cj6)*(r01));
IkReal x518=((sj8)*(x506));
IkReal x519=((cj11)*(r11)*(sj6));
IkReal x520=((cj6)*(r00)*(sj11));
IkReal x521=((sj8)*(x516));
evalcond[0]=((((cj7)*(x513)))+(((IkReal(-1.00000000000000))*(x518)))+(((cj7)*(x509)))+(((IkReal(-1.00000000000000))*(cj8)*(x516)))+(((IkReal(-1.00000000000000))*(r22)*(x510))));
evalcond[1]=((x514)+(((IkReal(-1.00000000000000))*(x509)*(x510)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(x510)*(x513)))+(((IkReal(-1.00000000000000))*(r22)*(x508))));
evalcond[2]=((x518)+(((cj8)*(x507)))+(((sj7)*(x519)))+(((cj7)*(x512)))+(((cj7)*(x511)))+(((sj7)*(x515)))+(((sj7)*(x520)))+(((sj7)*(x517))));
evalcond[3]=((x514)+(((IkReal(-1.00000000000000))*(x508)*(x520)))+(((IkReal(-1.00000000000000))*(x508)*(x519)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(x508)*(x517)))+(((IkReal(-1.00000000000000))*(x508)*(x515)))+(((sj7)*(x511)))+(((sj7)*(x512))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x522=((IkReal(500.000000000000))*(sj9));
IkReal x523=((cj11)*(cj7));
IkReal x524=((r10)*(sj6));
IkReal x525=((cj11)*(sj7));
IkReal x526=((IkReal(31.0001000000000))*(sj9));
IkReal x527=((cj6)*(r00));
IkReal x528=((sj11)*(sj7));
IkReal x529=((cj6)*(r01));
IkReal x530=((cj7)*(sj6));
IkReal x531=((cj7)*(sj11));
IkReal x532=((r11)*(sj6));
if( IKabs(((((IKabs(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(cj7)*(px)*(x522)))+(((pz)*(sj7)*(x522)))+(((x523)*(x526)*(x527)))+(((IkReal(-151.000000000000))*(x528)*(x532)))+(((IkReal(151.000000000000))*(x524)*(x525)))+(((x523)*(x524)*(x526)))+(((IkReal(151.000000000000))*(x525)*(x527)))+(((IkReal(-1.00000000000000))*(py)*(x522)*(x530)))+(((IkReal(151.000000000000))*(r20)*(x523)))+(((IkReal(-151.000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(r20)*(x525)*(x526)))+(((IkReal(-151.000000000000))*(x528)*(x529)))+(((IkReal(-1.00000000000000))*(x526)*(x529)*(x531)))+(((r21)*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(r11)*(sj11)*(x526)*(x530))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((r20)*(x523)))+(((IkReal(-1.00000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(x528)*(x532)))+(((x525)*(x527)))+(((x524)*(x525)))+(((IkReal(-1.00000000000000))*(x528)*(x529))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(cj7)*(px)*(x522)))+(((pz)*(sj7)*(x522)))+(((x523)*(x526)*(x527)))+(((IkReal(-151.000000000000))*(x528)*(x532)))+(((IkReal(151.000000000000))*(x524)*(x525)))+(((x523)*(x524)*(x526)))+(((IkReal(151.000000000000))*(x525)*(x527)))+(((IkReal(-1.00000000000000))*(py)*(x522)*(x530)))+(((IkReal(151.000000000000))*(r20)*(x523)))+(((IkReal(-151.000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(r20)*(x525)*(x526)))+(((IkReal(-151.000000000000))*(x528)*(x529)))+(((IkReal(-1.00000000000000))*(x526)*(x529)*(x531)))+(((r21)*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(r11)*(sj11)*(x526)*(x530)))))))+IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((r20)*(x523)))+(((IkReal(-1.00000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(x528)*(x532)))+(((x525)*(x527)))+(((x524)*(x525)))+(((IkReal(-1.00000000000000))*(x528)*(x529)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(30.8425000000000))*((sj9)*(sj9))))+(((IkReal(-35.0701500000000))*(sj9)))+(((IkReal(-0.757835000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(cj7)*(px)*(x522)))+(((pz)*(sj7)*(x522)))+(((x523)*(x526)*(x527)))+(((IkReal(-151.000000000000))*(x528)*(x532)))+(((IkReal(151.000000000000))*(x524)*(x525)))+(((x523)*(x524)*(x526)))+(((IkReal(151.000000000000))*(x525)*(x527)))+(((IkReal(-1.00000000000000))*(py)*(x522)*(x530)))+(((IkReal(151.000000000000))*(r20)*(x523)))+(((IkReal(-151.000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(r20)*(x525)*(x526)))+(((IkReal(-151.000000000000))*(x528)*(x529)))+(((IkReal(-1.00000000000000))*(x526)*(x529)*(x531)))+(((r21)*(x526)*(x528)))+(((IkReal(-1.00000000000000))*(r11)*(sj11)*(x526)*(x530)))))), ((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((r20)*(x523)))+(((IkReal(-1.00000000000000))*(r21)*(x531)))+(((IkReal(-1.00000000000000))*(x528)*(x532)))+(((x525)*(x527)))+(((x524)*(x525)))+(((IkReal(-1.00000000000000))*(x528)*(x529)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x533=IKsin(j8);
IkReal x534=IKcos(j8);
IkReal x535=((IkReal(0.0620002000000000))*(sj11));
IkReal x536=((cj7)*(r21));
IkReal x537=((IkReal(1.00000000000000))*(cj11));
IkReal x538=((cj7)*(r20));
IkReal x539=((IkReal(0.00151567000000000))*(cj9));
IkReal x540=((r21)*(sj7));
IkReal x541=((IkReal(1.00000000000000))*(cj7));
IkReal x542=((cj7)*(sj6));
IkReal x543=((IkReal(0.0620002000000000))*(cj11));
IkReal x544=((IkReal(1.00000000000000))*(sj7));
IkReal x545=((cj6)*(px));
IkReal x546=((cj6)*(r01));
IkReal x547=((cj11)*(r20)*(sj7));
IkReal x548=((sj7)*(x546));
IkReal x549=((sj9)*(x534));
IkReal x550=((cj6)*(r00)*(sj7));
IkReal x551=((r11)*(sj6)*(sj7));
IkReal x552=((sj9)*(x533));
IkReal x553=((r10)*(sj6)*(sj7));
IkReal x554=((cj6)*(cj7)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(x537)*(x538)))+(((IkReal(-1.00000000000000))*(x537)*(x550)))+(x549)+(((sj11)*(x548)))+(((sj11)*(x551)))+(((sj11)*(x536)))+(((IkReal(-1.00000000000000))*(x537)*(x553))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj11)*(sj6)*(x541)))+(((sj11)*(x540)))+(((cj11)*(x554)))+(((IkReal(-1.00000000000000))*(sj11)*(x541)*(x546)))+(((cj11)*(r10)*(x542)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x537)))+(((IkReal(-1.00000000000000))*(x552))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x535)*(x540)))+(((r20)*(sj7)*(x543)))+(((IkReal(-0.302000000000000))*(x534)))+(((cj7)*(x545)))+(((IkReal(-1.00000000000000))*(x533)*(x539)))+(((IkReal(-1.00000000000000))*(pz)*(x544)))+(((cj7)*(x535)*(x546)))+(((IkReal(-1.00000000000000))*(x543)*(x554)))+(((r11)*(x535)*(x542)))+(((py)*(x542)))+(((IkReal(-1.00000000000000))*(r10)*(x542)*(x543)))+(((IkReal(0.0616850000000000))*(x552)))+(((IkReal(-0.0701403000000000))*(x533))));
evalcond[3]=((IkReal(0.270000000000000))+(((IkReal(-0.302000000000000))*(x533)))+(((x543)*(x550)))+(((IkReal(-1.00000000000000))*(pz)*(x541)))+(((IkReal(0.0701403000000000))*(x534)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x544)))+(((x543)*(x553)))+(((IkReal(-0.0616850000000000))*(x549)))+(((IkReal(-1.00000000000000))*(x544)*(x545)))+(((x534)*(x539)))+(((IkReal(-1.00000000000000))*(x535)*(x536)))+(((IkReal(-1.00000000000000))*(x535)*(x551)))+(((x538)*(x543)))+(((IkReal(-1.00000000000000))*(x535)*(x548))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x555=((IkReal(0.0620002000000000))*(cj7));
IkReal x556=((r21)*(sj11));
IkReal x557=((IkReal(1.00000000000000))*(cj11));
IkReal x558=((r01)*(sj6));
IkReal x559=((r20)*(sj7));
IkReal x560=((IkReal(1.00000000000000))*(cj6));
IkReal x561=((IkReal(0.0620002000000000))*(cj11));
IkReal x562=((IkReal(1.00000000000000))*(sj7));
IkReal x563=((IkReal(0.0620002000000000))*(sj11));
IkReal x564=((cj6)*(r10));
IkReal x565=((IkReal(1.00000000000000))*(cj7));
IkReal x566=((cj7)*(sj6));
IkReal x567=((r00)*(sj6));
IkReal x568=((r11)*(sj11));
IkReal x569=((IkReal(0.0620002000000000))*(sj7));
IkReal x570=((cj11)*(r10));
IkReal x571=((IkReal(1.00000000000000))*(sj11));
IkReal x572=((cj6)*(r11));
IkReal x573=((r01)*(sj11));
IkReal x574=((cj11)*(cj6)*(r00));
IkReal x575=((r11)*(sj6)*(sj7));
IkReal x576=((r10)*(sj6)*(sj7));
IkReal x577=((cj6)*(sj7)*(x573));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x560))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x557)*(x564)))+(((cj11)*(x567)))+(((cj6)*(x568)))+(((IkReal(-1.00000000000000))*(x558)*(x571))));
evalcond[3]=((((cj11)*(x572)))+(((IkReal(-1.00000000000000))*(x557)*(x558)))+(((sj11)*(x564)))+(((IkReal(-1.00000000000000))*(x567)*(x571))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(x563)*(x572)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x560)))+(((x561)*(x564)))+(((IkReal(-1.00000000000000))*(x561)*(x567)))+(((x558)*(x563))));
evalcond[5]=((x577)+(((sj6)*(sj7)*(x568)))+(((IkReal(-1.00000000000000))*(x557)*(x576)))+(((cj7)*(x556)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x557)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x557))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj6)*(x565)*(x568)))+(((IkReal(-1.00000000000000))*(x557)*(x559)))+(((x566)*(x570)))+(((sj7)*(x556)))+(((IkReal(-1.00000000000000))*(cj7)*(x560)*(x573)))+(((cj7)*(x574))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x555)*(x574)))+(((IkReal(-0.302000000000000))*(cj8)))+(((IkReal(-0.0716559700000000))*(sj8)))+(((cj6)*(cj7)*(px)))+(((cj6)*(x555)*(x573)))+(((py)*(x566)))+(((x559)*(x561)))+(((sj6)*(x555)*(x568)))+(((IkReal(-1.00000000000000))*(sj6)*(x555)*(x570)))+(((IkReal(-1.00000000000000))*(pz)*(x562)))+(((IkReal(-1.00000000000000))*(x556)*(x569))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x563)))+(((IkReal(-1.00000000000000))*(pz)*(x565)))+(((IkReal(0.0716559700000000))*(cj8)))+(((IkReal(-1.00000000000000))*(x555)*(x556)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x562)))+(((IkReal(-1.00000000000000))*(x563)*(x575)))+(((cj6)*(r00)*(sj7)*(x561)))+(((cj11)*(r20)*(x555)))+(((IkReal(-0.302000000000000))*(sj8)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x560)))+(((x561)*(x576))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x578=((sj7)*(sj8));
IkReal x579=((cj11)*(r21));
IkReal x580=((r20)*(sj11));
IkReal x581=((cj8)*(sj7));
IkReal x582=((IkReal(1.00000000000000))*(sj11));
IkReal x583=((IkReal(1.00000000000000))*(cj11));
IkReal x584=((cj7)*(sj6)*(sj8));
IkReal x585=((cj6)*(cj7)*(sj8));
IkReal x586=((cj7)*(cj8)*(sj6));
IkReal x587=((cj6)*(cj7)*(cj8));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x582)*(x586)))+(((r02)*(x585)))+(((IkReal(-1.00000000000000))*(r00)*(x582)*(x587)))+(((x579)*(x581)))+(((r12)*(x584)))+(((IkReal(-1.00000000000000))*(r01)*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x586)))+(((x580)*(x581)))+(((IkReal(-1.00000000000000))*(r22)*(x578))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x582)*(x584)))+(((IkReal(-1.00000000000000))*(r02)*(x587)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x584)))+(((IkReal(-1.00000000000000))*(r00)*(x582)*(x585)))+(((x578)*(x580)))+(((IkReal(-1.00000000000000))*(r12)*(x586)))+(((r22)*(x581)))+(((x578)*(x579)))+(((IkReal(-1.00000000000000))*(r01)*(x583)*(x585))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x582)*(x586)))+(((r02)*(x585)))+(((IkReal(-1.00000000000000))*(r00)*(x582)*(x587)))+(((x579)*(x581)))+(((r12)*(x584)))+(((IkReal(-1.00000000000000))*(r01)*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x586)))+(((x580)*(x581)))+(((IkReal(-1.00000000000000))*(r22)*(x578)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x582)*(x584)))+(((IkReal(-1.00000000000000))*(r02)*(x587)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x584)))+(((IkReal(-1.00000000000000))*(r00)*(x582)*(x585)))+(((x578)*(x580)))+(((IkReal(-1.00000000000000))*(r12)*(x586)))+(((r22)*(x581)))+(((x578)*(x579)))+(((IkReal(-1.00000000000000))*(r01)*(x583)*(x585)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x588=IKcos(j10);
IkReal x589=IKsin(j10);
IkReal x590=((IkReal(1.00000000000000))*(cj7));
IkReal x591=((cj6)*(r02));
IkReal x592=((IkReal(1.00000000000000))*(sj7));
IkReal x593=((r20)*(sj11));
IkReal x594=((cj11)*(r21));
IkReal x595=((r12)*(sj6));
IkReal x596=((sj8)*(x589));
IkReal x597=((cj8)*(x589));
IkReal x598=((r10)*(sj11)*(sj6));
IkReal x599=((IkReal(1.00000000000000))*(x588));
IkReal x600=((cj11)*(cj6)*(r01));
IkReal x601=((cj11)*(r11)*(sj6));
IkReal x602=((cj6)*(r00)*(sj11));
IkReal x603=((cj8)*(x599));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x592)))+(((cj7)*(x591)))+(((IkReal(-1.00000000000000))*(x603)))+(((cj7)*(x595)))+(x596));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x590)))+(((IkReal(-1.00000000000000))*(x592)*(x595)))+(((IkReal(-1.00000000000000))*(x591)*(x592)))+(((IkReal(-1.00000000000000))*(sj8)*(x599)))+(((IkReal(-1.00000000000000))*(x597))));
evalcond[2]=((((cj7)*(x593)))+(((IkReal(-1.00000000000000))*(x603)))+(((cj7)*(x594)))+(((sj7)*(x598)))+(((sj7)*(x602)))+(x596)+(((sj7)*(x601)))+(((sj7)*(x600))));
evalcond[3]=((((sj7)*(x593)))+(((IkReal(-1.00000000000000))*(x590)*(x601)))+(((sj7)*(x594)))+(((IkReal(-1.00000000000000))*(x590)*(x602)))+(((IkReal(-1.00000000000000))*(x590)*(x600)))+(((IkReal(-1.00000000000000))*(x590)*(x598)))+(((sj8)*(x588)))+(x597));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x604=((cj7)*(cj8));
IkReal x605=((r12)*(sj6));
IkReal x606=((IkReal(1.00000000000000))*(sj7));
IkReal x607=((cj6)*(r02));
IkReal x608=((IkReal(1.00000000000000))*(r22));
IkReal x609=((cj7)*(sj8));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x604)*(x608)))+(((IkReal(-1.00000000000000))*(cj8)*(x605)*(x606)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x607)*(x609)))+(((IkReal(-1.00000000000000))*(cj8)*(x606)*(x607)))+(((IkReal(-1.00000000000000))*(x605)*(x609))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj8)*(x606)*(x607)))+(((x604)*(x605)))+(((IkReal(-1.00000000000000))*(cj8)*(r22)*(x606)))+(((x604)*(x607)))+(((IkReal(-1.00000000000000))*(sj8)*(x605)*(x606)))+(((IkReal(-1.00000000000000))*(x608)*(x609))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x604)*(x608)))+(((IkReal(-1.00000000000000))*(cj8)*(x605)*(x606)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x607)*(x609)))+(((IkReal(-1.00000000000000))*(cj8)*(x606)*(x607)))+(((IkReal(-1.00000000000000))*(x605)*(x609)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj8)*(x606)*(x607)))+(((x604)*(x605)))+(((IkReal(-1.00000000000000))*(cj8)*(r22)*(x606)))+(((x604)*(x607)))+(((IkReal(-1.00000000000000))*(sj8)*(x605)*(x606)))+(((IkReal(-1.00000000000000))*(x608)*(x609)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x610=IKcos(j10);
IkReal x611=IKsin(j10);
IkReal x612=((IkReal(1.00000000000000))*(cj7));
IkReal x613=((cj6)*(r02));
IkReal x614=((IkReal(1.00000000000000))*(sj7));
IkReal x615=((r20)*(sj11));
IkReal x616=((cj11)*(r21));
IkReal x617=((r12)*(sj6));
IkReal x618=((sj8)*(x611));
IkReal x619=((cj8)*(x611));
IkReal x620=((r10)*(sj11)*(sj6));
IkReal x621=((IkReal(1.00000000000000))*(x610));
IkReal x622=((cj11)*(cj6)*(r01));
IkReal x623=((cj11)*(r11)*(sj6));
IkReal x624=((cj6)*(r00)*(sj11));
IkReal x625=((cj8)*(x621));
evalcond[0]=((((IkReal(-1.00000000000000))*(x625)))+(((cj7)*(x617)))+(((cj7)*(x613)))+(x618)+(((IkReal(-1.00000000000000))*(r22)*(x614))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x619)))+(((IkReal(-1.00000000000000))*(sj8)*(x621)))+(((IkReal(-1.00000000000000))*(x613)*(x614)))+(((IkReal(-1.00000000000000))*(r22)*(x612)))+(((IkReal(-1.00000000000000))*(x614)*(x617))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x625)))+(((cj7)*(x616)))+(((cj7)*(x615)))+(((sj7)*(x624)))+(((sj7)*(x623)))+(x618)+(((sj7)*(x620)))+(((sj7)*(x622))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x612)*(x620)))+(((IkReal(-1.00000000000000))*(x612)*(x624)))+(((IkReal(-1.00000000000000))*(x612)*(x622)))+(((sj7)*(x615)))+(x619)+(((IkReal(-1.00000000000000))*(x612)*(x623)))+(((sj8)*(x610)))+(((sj7)*(x616))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x626=((IkReal(0.0620002000000000))*(cj7));
IkReal x627=((r21)*(sj11));
IkReal x628=((IkReal(1.00000000000000))*(cj11));
IkReal x629=((r01)*(sj6));
IkReal x630=((r20)*(sj7));
IkReal x631=((IkReal(1.00000000000000))*(cj6));
IkReal x632=((IkReal(0.0620002000000000))*(cj11));
IkReal x633=((IkReal(1.00000000000000))*(sj7));
IkReal x634=((IkReal(0.0620002000000000))*(sj11));
IkReal x635=((cj6)*(r10));
IkReal x636=((IkReal(1.00000000000000))*(cj7));
IkReal x637=((cj7)*(sj6));
IkReal x638=((r00)*(sj6));
IkReal x639=((r11)*(sj11));
IkReal x640=((IkReal(0.0620002000000000))*(sj7));
IkReal x641=((cj11)*(r10));
IkReal x642=((IkReal(1.00000000000000))*(sj11));
IkReal x643=((cj6)*(r11));
IkReal x644=((r01)*(sj11));
IkReal x645=((cj11)*(cj6)*(r00));
IkReal x646=((r11)*(sj6)*(sj7));
IkReal x647=((r10)*(sj6)*(sj7));
IkReal x648=((cj6)*(sj7)*(x644));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x631))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x638)))+(((cj6)*(x639)))+(((IkReal(-1.00000000000000))*(x629)*(x642)))+(((IkReal(-1.00000000000000))*(x628)*(x635))));
evalcond[3]=((((cj11)*(x643)))+(((IkReal(-1.00000000000000))*(x638)*(x642)))+(((IkReal(-1.00000000000000))*(x628)*(x629)))+(((sj11)*(x635))));
evalcond[4]=((IkReal(0.0515917000000000))+(((px)*(sj6)))+(((x632)*(x635)))+(((IkReal(-1.00000000000000))*(x634)*(x643)))+(((x629)*(x634)))+(((IkReal(-1.00000000000000))*(x632)*(x638)))+(((IkReal(-1.00000000000000))*(py)*(x631))));
evalcond[5]=((x648)+(((cj7)*(x627)))+(((IkReal(-1.00000000000000))*(x628)*(x647)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x628)))+(((sj6)*(sj7)*(x639)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x628))));
evalcond[6]=((((cj7)*(x645)))+(((x637)*(x641)))+(((IkReal(-1.00000000000000))*(sj6)*(x636)*(x639)))+(((IkReal(-1.00000000000000))*(x628)*(x630)))+(((sj7)*(x627)))+(((IkReal(-1.00000000000000))*(cj7)*(x631)*(x644))));
evalcond[7]=((((IkReal(-0.302000000000000))*(cj8)))+(((IkReal(-0.0686246300000000))*(sj8)))+(((IkReal(-1.00000000000000))*(pz)*(x633)))+(((cj6)*(cj7)*(px)))+(((py)*(x637)))+(((IkReal(-1.00000000000000))*(sj6)*(x626)*(x641)))+(((cj6)*(x626)*(x644)))+(((sj6)*(x626)*(x639)))+(((x630)*(x632)))+(((IkReal(-1.00000000000000))*(x626)*(x645)))+(((IkReal(-1.00000000000000))*(x627)*(x640))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x634)*(x646)))+(((cj11)*(r20)*(x626)))+(((x632)*(x647)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x631)))+(((IkReal(-1.00000000000000))*(pz)*(x636)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x634)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x633)))+(((IkReal(0.0686246300000000))*(cj8)))+(((IkReal(-1.00000000000000))*(x626)*(x627)))+(((IkReal(-0.302000000000000))*(sj8)))+(((cj6)*(r00)*(sj7)*(x632))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x649=((IkReal(1.00000000000000))*(cj8));
IkReal x650=((cj6)*(sj7));
IkReal x651=((cj8)*(sj11));
IkReal x652=((cj7)*(r20));
IkReal x653=((sj6)*(sj7));
IkReal x654=((sj11)*(sj8));
IkReal x655=((cj7)*(r22));
IkReal x656=((cj11)*(sj8));
IkReal x657=((cj11)*(cj8));
IkReal x658=((cj11)*(cj7)*(r21));
if( IKabs(((gconst6)*(((((r11)*(x653)*(x656)))+(((IkReal(-1.00000000000000))*(r12)*(x649)*(x653)))+(((r10)*(x653)*(x654)))+(((r00)*(x650)*(x654)))+(((cj7)*(r21)*(x656)))+(((x652)*(x654)))+(((IkReal(-1.00000000000000))*(r02)*(x649)*(x650)))+(((r01)*(x650)*(x656)))+(((IkReal(-1.00000000000000))*(x649)*(x655))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj7)*(r21)*(x657)))+(((r00)*(x650)*(x651)))+(((sj8)*(x655)))+(((r02)*(sj8)*(x650)))+(((x651)*(x652)))+(((r12)*(sj8)*(x653)))+(((r01)*(x650)*(x657)))+(((r11)*(x653)*(x657)))+(((r10)*(x651)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((r11)*(x653)*(x656)))+(((IkReal(-1.00000000000000))*(r12)*(x649)*(x653)))+(((r10)*(x653)*(x654)))+(((r00)*(x650)*(x654)))+(((cj7)*(r21)*(x656)))+(((x652)*(x654)))+(((IkReal(-1.00000000000000))*(r02)*(x649)*(x650)))+(((r01)*(x650)*(x656)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))))), ((gconst6)*(((((cj7)*(r21)*(x657)))+(((r00)*(x650)*(x651)))+(((sj8)*(x655)))+(((r02)*(sj8)*(x650)))+(((x651)*(x652)))+(((r12)*(sj8)*(x653)))+(((r01)*(x650)*(x657)))+(((r11)*(x653)*(x657)))+(((r10)*(x651)*(x653)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x659=IKsin(j10);
IkReal x660=IKcos(j10);
IkReal x661=((IkReal(1.00000000000000))*(cj7));
IkReal x662=((cj6)*(r02));
IkReal x663=((IkReal(1.00000000000000))*(sj7));
IkReal x664=((r20)*(sj11));
IkReal x665=((cj11)*(r21));
IkReal x666=((r12)*(sj6));
IkReal x667=((cj8)*(x659));
IkReal x668=((r10)*(sj11)*(sj6));
IkReal x669=((IkReal(1.00000000000000))*(x660));
IkReal x670=((cj11)*(cj6)*(r01));
IkReal x671=((sj8)*(x659));
IkReal x672=((cj11)*(r11)*(sj6));
IkReal x673=((cj6)*(r00)*(sj11));
IkReal x674=((sj8)*(x669));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(x669)))+(((cj7)*(x666)))+(((cj7)*(x662)))+(((IkReal(-1.00000000000000))*(x671)))+(((IkReal(-1.00000000000000))*(r22)*(x663))));
evalcond[1]=((x667)+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((IkReal(-1.00000000000000))*(x674)))+(((IkReal(-1.00000000000000))*(x662)*(x663)))+(((IkReal(-1.00000000000000))*(r22)*(x661))));
evalcond[2]=((((sj7)*(x670)))+(((sj7)*(x672)))+(((cj7)*(x664)))+(((cj7)*(x665)))+(((sj7)*(x668)))+(((cj8)*(x660)))+(((sj7)*(x673)))+(x671));
evalcond[3]=((x667)+(((sj7)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x670)))+(((IkReal(-1.00000000000000))*(x674)))+(((IkReal(-1.00000000000000))*(x661)*(x668)))+(((sj7)*(x664)))+(((IkReal(-1.00000000000000))*(x661)*(x672)))+(((IkReal(-1.00000000000000))*(x661)*(x673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x675=((cj6)*(r02));
IkReal x676=((cj7)*(cj8));
IkReal x677=((r12)*(sj6));
IkReal x678=((cj8)*(sj7));
IkReal x679=((cj7)*(sj8));
IkReal x680=((cj7)*(x677));
IkReal x681=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x682=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst5)*(((((x675)*(x678)))+(((IkReal(-1.00000000000000))*(sj8)*(x681)))+(((r22)*(x676)))+(((x677)*(x678)))+(((x675)*(x679)))+(((x677)*(x679))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x676)*(x677)))+(((IkReal(-1.00000000000000))*(x677)*(x682)))+(((x675)*(x676)))+(((IkReal(-1.00000000000000))*(r22)*(x679)))+(((IkReal(-1.00000000000000))*(r22)*(x678)))+(((IkReal(-1.00000000000000))*(x675)*(x682))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((x675)*(x678)))+(((IkReal(-1.00000000000000))*(sj8)*(x681)))+(((r22)*(x676)))+(((x677)*(x678)))+(((x675)*(x679)))+(((x677)*(x679)))))), ((gconst5)*(((((x676)*(x677)))+(((IkReal(-1.00000000000000))*(x677)*(x682)))+(((x675)*(x676)))+(((IkReal(-1.00000000000000))*(r22)*(x679)))+(((IkReal(-1.00000000000000))*(r22)*(x678)))+(((IkReal(-1.00000000000000))*(x675)*(x682)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x683=IKsin(j10);
IkReal x684=IKcos(j10);
IkReal x685=((IkReal(1.00000000000000))*(cj7));
IkReal x686=((cj6)*(r02));
IkReal x687=((IkReal(1.00000000000000))*(sj7));
IkReal x688=((r20)*(sj11));
IkReal x689=((cj11)*(r21));
IkReal x690=((r12)*(sj6));
IkReal x691=((cj8)*(x683));
IkReal x692=((r10)*(sj11)*(sj6));
IkReal x693=((IkReal(1.00000000000000))*(x684));
IkReal x694=((cj11)*(cj6)*(r01));
IkReal x695=((sj8)*(x683));
IkReal x696=((cj11)*(r11)*(sj6));
IkReal x697=((cj6)*(r00)*(sj11));
IkReal x698=((sj8)*(x693));
evalcond[0]=((((IkReal(-1.00000000000000))*(x695)))+(((cj7)*(x686)))+(((IkReal(-1.00000000000000))*(r22)*(x687)))+(((cj7)*(x690)))+(((IkReal(-1.00000000000000))*(cj8)*(x693))));
evalcond[1]=((x691)+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((IkReal(-1.00000000000000))*(x687)*(x690)))+(((IkReal(-1.00000000000000))*(r22)*(x685)))+(((IkReal(-1.00000000000000))*(x698))));
evalcond[2]=((x695)+(((sj7)*(x692)))+(((cj7)*(x688)))+(((sj7)*(x694)))+(((cj8)*(x684)))+(((cj7)*(x689)))+(((sj7)*(x696)))+(((sj7)*(x697))));
evalcond[3]=((((sj7)*(x688)))+(((sj7)*(x689)))+(x691)+(((IkReal(-1.00000000000000))*(x685)*(x696)))+(((IkReal(-1.00000000000000))*(x685)*(x692)))+(((IkReal(-1.00000000000000))*(x685)*(x697)))+(((IkReal(-1.00000000000000))*(x685)*(x694)))+(((IkReal(-1.00000000000000))*(x698))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x699=((IkReal(0.0620002000000000))*(sj11));
IkReal x700=((cj7)*(r21));
IkReal x701=((IkReal(1.00000000000000))*(cj11));
IkReal x702=((cj7)*(r20));
IkReal x703=((cj6)*(sj7));
IkReal x704=((r01)*(sj6));
IkReal x705=((IkReal(0.0620002000000000))*(cj11));
IkReal x706=((cj6)*(r10));
IkReal x707=((IkReal(1.00000000000000))*(cj7));
IkReal x708=((cj7)*(sj6));
IkReal x709=((r00)*(sj6));
IkReal x710=((r11)*(sj11));
IkReal x711=((IkReal(1.00000000000000))*(py));
IkReal x712=((sj6)*(sj7));
IkReal x713=((r21)*(sj7));
IkReal x714=((cj6)*(cj7));
IkReal x715=((r01)*(x703));
IkReal x716=((cj11)*(r20)*(sj7));
IkReal x717=((r11)*(x712));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((cj11)*(x709)))+(((cj6)*(x710)))+(cj9)+(((IkReal(-1.00000000000000))*(sj11)*(x704)))+(((IkReal(-1.00000000000000))*(x701)*(x706))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x699)))+(((IkReal(-1.00000000000000))*(x705)*(x709)))+(((x705)*(x706)))+(((IkReal(-1.00000000000000))*(cj6)*(x711)))+(((x699)*(x704))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x701)*(x712)))+(((sj11)*(x700)))+(((IkReal(-1.00000000000000))*(x701)*(x702)))+(((sj11)*(x715)))+(((x710)*(x712)))+(((IkReal(-1.00000000000000))*(r00)*(x701)*(x703))));
evalcond[4]=((((cj11)*(r10)*(x708)))+(((sj11)*(x713)))+(((cj11)*(r00)*(x714)))+(((IkReal(-1.00000000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(sj6)*(x707)*(x710)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x701)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x707))));
evalcond[5]=((IkReal(-0.0701403000000000))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((r11)*(x699)*(x708)))+(((IkReal(-1.00000000000000))*(x699)*(x713)))+(((IkReal(-1.00000000000000))*(r00)*(x705)*(x714)))+(((IkReal(-1.00000000000000))*(r10)*(x705)*(x708)))+(((IkReal(0.0616850000000000))*(sj9)))+(((px)*(x714)))+(((r01)*(x699)*(x714)))+(((py)*(x708)))+(((r20)*(sj7)*(x705)))+(((IkReal(-0.00151567000000000))*(cj9))));
evalcond[6]=((IkReal(-0.0320000000000000))+(((r10)*(x705)*(x712)))+(((x702)*(x705)))+(((r00)*(x703)*(x705)))+(((IkReal(-1.00000000000000))*(pz)*(x707)))+(((IkReal(-1.00000000000000))*(px)*(x703)))+(((IkReal(-1.00000000000000))*(x699)*(x700)))+(((IkReal(-1.00000000000000))*(x699)*(x715)))+(((IkReal(-1.00000000000000))*(x699)*(x717)))+(((IkReal(-1.00000000000000))*(x711)*(x712))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x718=((IkReal(0.0620002000000000))*(cj7));
IkReal x719=((r21)*(sj11));
IkReal x720=((IkReal(1.00000000000000))*(cj11));
IkReal x721=((r01)*(sj6));
IkReal x722=((r20)*(sj7));
IkReal x723=((IkReal(1.00000000000000))*(cj6));
IkReal x724=((IkReal(0.0620002000000000))*(cj11));
IkReal x725=((IkReal(1.00000000000000))*(sj7));
IkReal x726=((IkReal(0.0620002000000000))*(sj11));
IkReal x727=((cj6)*(r10));
IkReal x728=((IkReal(1.00000000000000))*(cj7));
IkReal x729=((cj7)*(sj6));
IkReal x730=((r00)*(sj6));
IkReal x731=((r11)*(sj11));
IkReal x732=((IkReal(0.0620002000000000))*(sj7));
IkReal x733=((cj11)*(r10));
IkReal x734=((IkReal(1.00000000000000))*(sj11));
IkReal x735=((cj6)*(r11));
IkReal x736=((r01)*(sj11));
IkReal x737=((cj11)*(cj6)*(r00));
IkReal x738=((r11)*(sj6)*(sj7));
IkReal x739=((r10)*(sj6)*(sj7));
IkReal x740=((cj6)*(sj7)*(x736));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x723)))+(((r02)*(sj6))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x731)))+(((cj11)*(x730)))+(((IkReal(-1.00000000000000))*(x721)*(x734)))+(((IkReal(-1.00000000000000))*(x720)*(x727))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x730)*(x734)))+(((IkReal(-1.00000000000000))*(x720)*(x721)))+(((sj11)*(x727)))+(((cj11)*(x735))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(py)*(x723)))+(((IkReal(-1.00000000000000))*(x724)*(x730)))+(((IkReal(-1.00000000000000))*(x726)*(x735)))+(((x721)*(x726)))+(((px)*(sj6)))+(((x724)*(x727))));
evalcond[5]=((((cj7)*(x719)))+(((sj6)*(sj7)*(x731)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x720)))+(x740)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x720)))+(((IkReal(-1.00000000000000))*(x720)*(x739))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj6)*(x728)*(x731)))+(((IkReal(-1.00000000000000))*(cj7)*(x723)*(x736)))+(((x729)*(x733)))+(((cj7)*(x737)))+(((IkReal(-1.00000000000000))*(x720)*(x722)))+(((sj7)*(x719))));
evalcond[7]=((IkReal(-0.0716559700000000))+(((x722)*(x724)))+(((sj6)*(x718)*(x731)))+(((IkReal(-1.00000000000000))*(x718)*(x737)))+(((py)*(x729)))+(((cj6)*(cj7)*(px)))+(((cj6)*(x718)*(x736)))+(((IkReal(-1.00000000000000))*(pz)*(x725)))+(((IkReal(-1.00000000000000))*(sj6)*(x718)*(x733)))+(((IkReal(-1.00000000000000))*(x719)*(x732))));
evalcond[8]=((IkReal(-0.0320000000000000))+(((IkReal(-1.00000000000000))*(x718)*(x719)))+(((x724)*(x739)))+(((cj11)*(r20)*(x718)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x723)))+(((IkReal(-1.00000000000000))*(x726)*(x738)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x725)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x726)))+(((IkReal(-1.00000000000000))*(pz)*(x728)))+(((cj6)*(r00)*(sj7)*(x724))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x741=((IkReal(1.00000000000000))*(sj7));
IkReal x742=((cj6)*(r02));
IkReal x743=((IkReal(1.00000000000000))*(cj7));
IkReal x744=((r12)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x743)*(x744)))+(((IkReal(-1.00000000000000))*(x742)*(x743)))+(((r22)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x741)*(x744)))+(((IkReal(-1.00000000000000))*(r22)*(x743)))+(((IkReal(-1.00000000000000))*(x741)*(x742))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x743)*(x744)))+(((IkReal(-1.00000000000000))*(x742)*(x743)))+(((r22)*(sj7)))))+IKsqr(((((IkReal(-1.00000000000000))*(x741)*(x744)))+(((IkReal(-1.00000000000000))*(r22)*(x743)))+(((IkReal(-1.00000000000000))*(x741)*(x742)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x743)*(x744)))+(((IkReal(-1.00000000000000))*(x742)*(x743)))+(((r22)*(sj7)))), ((((IkReal(-1.00000000000000))*(x741)*(x744)))+(((IkReal(-1.00000000000000))*(r22)*(x743)))+(((IkReal(-1.00000000000000))*(x741)*(x742)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x745=IKsin(j10);
IkReal x746=IKcos(j10);
IkReal x747=((IkReal(1.00000000000000))*(r22));
IkReal x748=((cj7)*(sj11));
IkReal x749=((r10)*(sj6));
IkReal x750=((cj11)*(r21));
IkReal x751=((sj11)*(sj7));
IkReal x752=((cj6)*(r01));
IkReal x753=((r11)*(sj6));
IkReal x754=((cj6)*(r02));
IkReal x755=((r12)*(sj6));
IkReal x756=((IkReal(1.00000000000000))*(sj7));
IkReal x757=((cj11)*(sj7));
IkReal x758=((cj6)*(r00));
IkReal x759=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj7)*(x747)))+(x745)+(((cj7)*(x754)))+(((cj7)*(x755))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x746)))+(((IkReal(-1.00000000000000))*(x754)*(x756)))+(((IkReal(-1.00000000000000))*(cj7)*(x747)))+(((IkReal(-1.00000000000000))*(x755)*(x756))));
evalcond[2]=((((x752)*(x757)))+(((x753)*(x757)))+(x745)+(((cj7)*(x750)))+(((x751)*(x758)))+(((x749)*(x751)))+(((r20)*(x748))));
evalcond[3]=((((sj7)*(x750)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(x746)+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(x752)*(x759)))+(((IkReal(-1.00000000000000))*(x748)*(x749)))+(((IkReal(-1.00000000000000))*(x748)*(x758))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x760=((IkReal(0.0620002000000000))*(cj7));
IkReal x761=((r21)*(sj11));
IkReal x762=((IkReal(1.00000000000000))*(cj11));
IkReal x763=((r01)*(sj6));
IkReal x764=((r20)*(sj7));
IkReal x765=((IkReal(1.00000000000000))*(cj6));
IkReal x766=((IkReal(0.0620002000000000))*(cj11));
IkReal x767=((IkReal(1.00000000000000))*(sj7));
IkReal x768=((IkReal(0.0620002000000000))*(sj11));
IkReal x769=((cj6)*(r10));
IkReal x770=((IkReal(1.00000000000000))*(cj7));
IkReal x771=((cj7)*(sj6));
IkReal x772=((r00)*(sj6));
IkReal x773=((r11)*(sj11));
IkReal x774=((IkReal(0.0620002000000000))*(sj7));
IkReal x775=((cj11)*(r10));
IkReal x776=((IkReal(1.00000000000000))*(sj11));
IkReal x777=((cj6)*(r11));
IkReal x778=((r01)*(sj11));
IkReal x779=((cj11)*(cj6)*(r00));
IkReal x780=((r11)*(sj6)*(sj7));
IkReal x781=((r10)*(sj6)*(sj7));
IkReal x782=((cj6)*(sj7)*(x778));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x765))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x772)))+(((IkReal(-1.00000000000000))*(x762)*(x769)))+(((IkReal(-1.00000000000000))*(x763)*(x776)))+(((cj6)*(x773))));
evalcond[3]=((((cj11)*(x777)))+(((IkReal(-1.00000000000000))*(x762)*(x763)))+(((IkReal(-1.00000000000000))*(x772)*(x776)))+(((sj11)*(x769))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(x768)*(x777)))+(((x766)*(x769)))+(((IkReal(-1.00000000000000))*(x766)*(x772)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x765)))+(((x763)*(x768))));
evalcond[5]=((((cj7)*(x761)))+(x782)+(((IkReal(-1.00000000000000))*(x762)*(x781)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x762)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x762)))+(((sj6)*(sj7)*(x773))));
evalcond[6]=((((cj7)*(x779)))+(((IkReal(-1.00000000000000))*(sj6)*(x770)*(x773)))+(((x771)*(x775)))+(((IkReal(-1.00000000000000))*(x762)*(x764)))+(((sj7)*(x761)))+(((IkReal(-1.00000000000000))*(cj7)*(x765)*(x778))));
evalcond[7]=((IkReal(-0.0686246300000000))+(((IkReal(-1.00000000000000))*(x761)*(x774)))+(((IkReal(-1.00000000000000))*(sj6)*(x760)*(x775)))+(((IkReal(-1.00000000000000))*(x760)*(x779)))+(((py)*(x771)))+(((cj6)*(cj7)*(px)))+(((x764)*(x766)))+(((cj6)*(x760)*(x778)))+(((IkReal(-1.00000000000000))*(pz)*(x767)))+(((sj6)*(x760)*(x773))));
evalcond[8]=((IkReal(-0.0320000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x770)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x765)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x768)))+(((cj11)*(r20)*(x760)))+(((IkReal(-1.00000000000000))*(x760)*(x761)))+(((x766)*(x781)))+(((cj6)*(r00)*(sj7)*(x766)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x767)))+(((IkReal(-1.00000000000000))*(x768)*(x780))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x783=((IkReal(1.00000000000000))*(r22));
IkReal x784=((cj6)*(r02));
IkReal x785=((r12)*(sj6));
IkReal x786=((IkReal(1.00000000000000))*(sj7));
if( IKabs(((((cj7)*(x785)))+(((cj7)*(x784)))+(((IkReal(-1.00000000000000))*(sj7)*(x783))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(cj7)*(x783)))+(((IkReal(-1.00000000000000))*(x785)*(x786))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x785)))+(((cj7)*(x784)))+(((IkReal(-1.00000000000000))*(sj7)*(x783)))))+IKsqr(((((IkReal(-1.00000000000000))*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(cj7)*(x783)))+(((IkReal(-1.00000000000000))*(x785)*(x786)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x785)))+(((cj7)*(x784)))+(((IkReal(-1.00000000000000))*(sj7)*(x783)))), ((((IkReal(-1.00000000000000))*(x784)*(x786)))+(((IkReal(-1.00000000000000))*(cj7)*(x783)))+(((IkReal(-1.00000000000000))*(x785)*(x786)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x787=IKsin(j10);
IkReal x788=((IkReal(1.00000000000000))*(cj6));
IkReal x789=((cj7)*(sj11));
IkReal x790=((r10)*(sj6));
IkReal x791=((cj11)*(r21));
IkReal x792=((sj11)*(sj7));
IkReal x793=((cj11)*(cj7));
IkReal x794=((IkReal(1.00000000000000))*(sj7));
IkReal x795=((r11)*(sj6));
IkReal x796=((r12)*(sj6));
IkReal x797=((cj11)*(sj7));
IkReal x798=((IkReal(1.00000000000000))*(IKcos(j10)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x787)))+(((cj6)*(cj7)*(r02)))+(((cj7)*(x796)))+(((IkReal(-1.00000000000000))*(r22)*(x794))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x798)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x788)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x794)*(x796))));
evalcond[2]=((((x790)*(x792)))+(((cj6)*(r01)*(x797)))+(x787)+(((x795)*(x797)))+(((r20)*(x789)))+(((cj7)*(x791)))+(((cj6)*(r00)*(x792))));
evalcond[3]=((((sj7)*(x791)))+(((IkReal(-1.00000000000000))*(x798)))+(((IkReal(-1.00000000000000))*(r01)*(x788)*(x793)))+(((IkReal(-1.00000000000000))*(r00)*(x788)*(x789)))+(((IkReal(-1.00000000000000))*(x789)*(x790)))+(((r20)*(x792)))+(((IkReal(-1.00000000000000))*(x793)*(x795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x799=((IkReal(1.00000000000000))*(r02));
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x799))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x799)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x799)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x799)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x799)))))), ((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x799)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x800=IKsin(j10);
IkReal x801=IKcos(j10);
IkReal x802=((IkReal(1.00000000000000))*(sj6));
IkReal x803=((cj7)*(sj11));
IkReal x804=((cj11)*(r01));
IkReal x805=((IkReal(1.00000000000000))*(cj7));
IkReal x806=((IkReal(1.00000000000000))*(cj6));
IkReal x807=((cj11)*(r21));
IkReal x808=((r10)*(sj11));
IkReal x809=((sj6)*(sj7));
IkReal x810=((cj11)*(r11));
IkReal x811=((r00)*(sj11));
IkReal x812=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x800)))+(((IkReal(-1.00000000000000))*(r12)*(x806))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj9)*(x800)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((cj6)*(x810)))+(((IkReal(-1.00000000000000))*(x802)*(x804)))+(((sj9)*(x801)))+(((IkReal(-1.00000000000000))*(x802)*(x811)))+(((cj6)*(x808))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x802)))+(((IkReal(-1.00000000000000))*(x801)))+(((IkReal(-1.00000000000000))*(r22)*(x805)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x806))));
evalcond[4]=((x800)+(((r20)*(x803)))+(((x809)*(x810)))+(((x804)*(x812)))+(((x811)*(x812)))+(((x808)*(x809)))+(((cj7)*(x807))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x802)*(x810)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x804)*(x805)))+(((IkReal(-1.00000000000000))*(r10)*(x802)*(x803)))+(((sj7)*(x807)))+(((IkReal(-1.00000000000000))*(r00)*(x803)*(x806)))+(((cj9)*(x801))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x813=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x813)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x813)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x813)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x813)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x814=IKsin(j10);
IkReal x815=IKcos(j10);
IkReal x816=((IkReal(1.00000000000000))*(sj6));
IkReal x817=((cj7)*(sj11));
IkReal x818=((cj11)*(r01));
IkReal x819=((IkReal(1.00000000000000))*(cj7));
IkReal x820=((IkReal(1.00000000000000))*(cj6));
IkReal x821=((cj11)*(r21));
IkReal x822=((r10)*(sj11));
IkReal x823=((sj6)*(sj7));
IkReal x824=((cj11)*(r11));
IkReal x825=((r00)*(sj11));
IkReal x826=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x820)))+(((sj9)*(x814))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj9)*(x814))));
evalcond[2]=((((cj6)*(x822)))+(((IkReal(-1.00000000000000))*(x816)*(x825)))+(((cj6)*(x824)))+(((IkReal(-1.00000000000000))*(x816)*(x818)))+(((sj9)*(x815))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x815)))+(((IkReal(-1.00000000000000))*(r22)*(x819)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x820)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x816))));
evalcond[4]=((((x825)*(x826)))+(((x823)*(x824)))+(((x822)*(x823)))+(((r20)*(x817)))+(((cj7)*(x821)))+(((x818)*(x826)))+(x814));
evalcond[5]=((((cj9)*(x815)))+(((IkReal(-1.00000000000000))*(r00)*(x817)*(x820)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x818)*(x819)))+(((sj7)*(x821)))+(((IkReal(-1.00000000000000))*(cj7)*(x816)*(x824)))+(((IkReal(-1.00000000000000))*(r10)*(x816)*(x817))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x827=((IkReal(0.0620002000000000))*(sj11));
IkReal x828=((cj7)*(r21));
IkReal x829=((IkReal(1.00000000000000))*(cj11));
IkReal x830=((cj7)*(r20));
IkReal x831=((cj6)*(sj7));
IkReal x832=((r01)*(sj6));
IkReal x833=((IkReal(0.0620002000000000))*(cj11));
IkReal x834=((cj6)*(r10));
IkReal x835=((IkReal(1.00000000000000))*(cj7));
IkReal x836=((cj7)*(sj6));
IkReal x837=((r00)*(sj6));
IkReal x838=((r11)*(sj11));
IkReal x839=((IkReal(1.00000000000000))*(py));
IkReal x840=((sj6)*(sj7));
IkReal x841=((r21)*(sj7));
IkReal x842=((cj6)*(cj7));
IkReal x843=((r01)*(x831));
IkReal x844=((cj11)*(r20)*(sj7));
IkReal x845=((r11)*(x840));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(x838)))+(((IkReal(-1.00000000000000))*(sj11)*(x832)))+(cj9)+(((IkReal(-1.00000000000000))*(x829)*(x834)))+(((cj11)*(x837))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(cj6)*(x839)))+(((x827)*(x832)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x827)))+(((x833)*(x834)))+(((IkReal(-1.00000000000000))*(x833)*(x837))));
evalcond[3]=((((x838)*(x840)))+(((IkReal(-1.00000000000000))*(r10)*(x829)*(x840)))+(((sj11)*(x828)))+(((IkReal(-1.00000000000000))*(r00)*(x829)*(x831)))+(((sj11)*(x843)))+(((IkReal(-1.00000000000000))*(x829)*(x830))));
evalcond[4]=((((cj11)*(r00)*(x842)))+(sj9)+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x835)))+(((cj11)*(r10)*(x836)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x829)))+(((sj11)*(x841)))+(((IkReal(-1.00000000000000))*(sj6)*(x835)*(x838))));
evalcond[5]=((IkReal(0.0701403000000000))+(((IkReal(-1.00000000000000))*(r10)*(x833)*(x836)))+(((r20)*(sj7)*(x833)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((r11)*(x827)*(x836)))+(((IkReal(-1.00000000000000))*(r00)*(x833)*(x842)))+(((py)*(x836)))+(((IkReal(0.00151567000000000))*(cj9)))+(((IkReal(-0.0616850000000000))*(sj9)))+(((px)*(x842)))+(((r01)*(x827)*(x842)))+(((IkReal(-1.00000000000000))*(x827)*(x841))));
evalcond[6]=((IkReal(0.572000000000000))+(((x830)*(x833)))+(((IkReal(-1.00000000000000))*(x827)*(x843)))+(((IkReal(-1.00000000000000))*(x839)*(x840)))+(((r10)*(x833)*(x840)))+(((IkReal(-1.00000000000000))*(x827)*(x828)))+(((IkReal(-1.00000000000000))*(pz)*(x835)))+(((IkReal(-1.00000000000000))*(x827)*(x845)))+(((r00)*(x831)*(x833)))+(((IkReal(-1.00000000000000))*(px)*(x831))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x846=((IkReal(0.0620002000000000))*(cj7));
IkReal x847=((r21)*(sj11));
IkReal x848=((IkReal(1.00000000000000))*(cj11));
IkReal x849=((r01)*(sj6));
IkReal x850=((r20)*(sj7));
IkReal x851=((IkReal(1.00000000000000))*(cj6));
IkReal x852=((IkReal(0.0620002000000000))*(cj11));
IkReal x853=((IkReal(1.00000000000000))*(sj7));
IkReal x854=((IkReal(0.0620002000000000))*(sj11));
IkReal x855=((cj6)*(r10));
IkReal x856=((IkReal(1.00000000000000))*(cj7));
IkReal x857=((cj7)*(sj6));
IkReal x858=((r00)*(sj6));
IkReal x859=((r11)*(sj11));
IkReal x860=((IkReal(0.0620002000000000))*(sj7));
IkReal x861=((cj11)*(r10));
IkReal x862=((IkReal(1.00000000000000))*(sj11));
IkReal x863=((cj6)*(r11));
IkReal x864=((r01)*(sj11));
IkReal x865=((cj11)*(cj6)*(r00));
IkReal x866=((r11)*(sj6)*(sj7));
IkReal x867=((r10)*(sj6)*(sj7));
IkReal x868=((cj6)*(sj7)*(x864));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x851))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x859)))+(((IkReal(-1.00000000000000))*(x848)*(x855)))+(((IkReal(-1.00000000000000))*(x849)*(x862)))+(((cj11)*(x858))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x848)*(x849)))+(((cj11)*(x863)))+(((sj11)*(x855)))+(((IkReal(-1.00000000000000))*(x858)*(x862))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(x852)*(x858)))+(((x852)*(x855)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x854)*(x863)))+(((IkReal(-1.00000000000000))*(py)*(x851)))+(((x849)*(x854))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x848)))+(((IkReal(-1.00000000000000))*(x848)*(x867)))+(((sj6)*(sj7)*(x859)))+(x868)+(((cj7)*(x847)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x848))));
evalcond[6]=((((cj7)*(x865)))+(((sj7)*(x847)))+(((IkReal(-1.00000000000000))*(sj6)*(x856)*(x859)))+(((x857)*(x861)))+(((IkReal(-1.00000000000000))*(x848)*(x850)))+(((IkReal(-1.00000000000000))*(cj7)*(x851)*(x864))));
evalcond[7]=((IkReal(0.0716559700000000))+(((IkReal(-1.00000000000000))*(x847)*(x860)))+(((IkReal(-1.00000000000000))*(sj6)*(x846)*(x861)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(pz)*(x853)))+(((x850)*(x852)))+(((py)*(x857)))+(((IkReal(-1.00000000000000))*(x846)*(x865)))+(((sj6)*(x846)*(x859)))+(((cj6)*(x846)*(x864))));
evalcond[8]=((IkReal(0.572000000000000))+(((IkReal(-1.00000000000000))*(x854)*(x866)))+(((cj11)*(r20)*(x846)))+(((cj6)*(r00)*(sj7)*(x852)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x854)))+(((IkReal(-1.00000000000000))*(x846)*(x847)))+(((x852)*(x867)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x851)))+(((IkReal(-1.00000000000000))*(pz)*(x856)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x853))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x869=((r12)*(sj6));
IkReal x870=((cj6)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x869)))+(((cj7)*(x870))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x869)))+(((sj7)*(x870))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x869)))+(((cj7)*(x870)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x869)))+(((sj7)*(x870)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x869)))+(((cj7)*(x870)))), ((((cj7)*(r22)))+(((sj7)*(x869)))+(((sj7)*(x870)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x871=IKcos(j10);
IkReal x872=((IkReal(1.00000000000000))*(cj6));
IkReal x873=((cj7)*(sj11));
IkReal x874=((r10)*(sj6));
IkReal x875=((cj11)*(r21));
IkReal x876=((sj11)*(sj7));
IkReal x877=((cj11)*(cj7));
IkReal x878=((IkReal(1.00000000000000))*(sj7));
IkReal x879=((r11)*(sj6));
IkReal x880=((r12)*(sj6));
IkReal x881=((cj11)*(sj7));
IkReal x882=((IkReal(1.00000000000000))*(IKsin(j10)));
evalcond[0]=((((cj7)*(x880)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(x882)))+(((IkReal(-1.00000000000000))*(r22)*(x878))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x878)*(x880)))+(x871)+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x872)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((cj6)*(r01)*(x881)))+(((r20)*(x873)))+(((IkReal(-1.00000000000000))*(x882)))+(((x879)*(x881)))+(((cj6)*(r00)*(x876)))+(((x874)*(x876)))+(((cj7)*(x875))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x872)*(x877)))+(((IkReal(-1.00000000000000))*(r00)*(x872)*(x873)))+(((IkReal(-1.00000000000000))*(x877)*(x879)))+(((r20)*(x876)))+(((IkReal(-1.00000000000000))*(x871)))+(((sj7)*(x875)))+(((IkReal(-1.00000000000000))*(x873)*(x874))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x883=((IkReal(0.0620002000000000))*(cj7));
IkReal x884=((r21)*(sj11));
IkReal x885=((IkReal(1.00000000000000))*(cj11));
IkReal x886=((r01)*(sj6));
IkReal x887=((r20)*(sj7));
IkReal x888=((IkReal(1.00000000000000))*(cj6));
IkReal x889=((IkReal(0.0620002000000000))*(cj11));
IkReal x890=((IkReal(1.00000000000000))*(sj7));
IkReal x891=((IkReal(0.0620002000000000))*(sj11));
IkReal x892=((cj6)*(r10));
IkReal x893=((IkReal(1.00000000000000))*(cj7));
IkReal x894=((cj7)*(sj6));
IkReal x895=((r00)*(sj6));
IkReal x896=((r11)*(sj11));
IkReal x897=((IkReal(0.0620002000000000))*(sj7));
IkReal x898=((cj11)*(r10));
IkReal x899=((IkReal(1.00000000000000))*(sj11));
IkReal x900=((cj6)*(r11));
IkReal x901=((r01)*(sj11));
IkReal x902=((cj11)*(cj6)*(r00));
IkReal x903=((r11)*(sj6)*(sj7));
IkReal x904=((r10)*(sj6)*(sj7));
IkReal x905=((cj6)*(sj7)*(x901));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x888))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x895)))+(((IkReal(-1.00000000000000))*(x885)*(x892)))+(((IkReal(-1.00000000000000))*(x886)*(x899)))+(((cj6)*(x896))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x885)*(x886)))+(((sj11)*(x892)))+(((IkReal(-1.00000000000000))*(x895)*(x899)))+(((cj11)*(x900))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x886)*(x891)))+(((px)*(sj6)))+(((x889)*(x892)))+(((IkReal(-1.00000000000000))*(x889)*(x895)))+(((IkReal(-1.00000000000000))*(py)*(x888)))+(((IkReal(-1.00000000000000))*(x891)*(x900))));
evalcond[5]=((((cj7)*(x884)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x885)))+(((sj6)*(sj7)*(x896)))+(x905)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x885)))+(((IkReal(-1.00000000000000))*(x885)*(x904))));
evalcond[6]=((((sj7)*(x884)))+(((x894)*(x898)))+(((IkReal(-1.00000000000000))*(sj6)*(x893)*(x896)))+(((cj7)*(x902)))+(((IkReal(-1.00000000000000))*(x885)*(x887)))+(((IkReal(-1.00000000000000))*(cj7)*(x888)*(x901))));
evalcond[7]=((IkReal(0.0686246300000000))+(((cj6)*(x883)*(x901)))+(((cj6)*(cj7)*(px)))+(((sj6)*(x883)*(x896)))+(((IkReal(-1.00000000000000))*(sj6)*(x883)*(x898)))+(((IkReal(-1.00000000000000))*(x883)*(x902)))+(((IkReal(-1.00000000000000))*(pz)*(x890)))+(((x887)*(x889)))+(((py)*(x894)))+(((IkReal(-1.00000000000000))*(x884)*(x897))));
evalcond[8]=((IkReal(0.572000000000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x888)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x890)))+(((x889)*(x904)))+(((IkReal(-1.00000000000000))*(x891)*(x903)))+(((cj6)*(r00)*(sj7)*(x889)))+(((IkReal(-1.00000000000000))*(x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x891)))+(((IkReal(-1.00000000000000))*(pz)*(x893)))+(((cj11)*(r20)*(x883))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x906=((r12)*(sj6));
IkReal x907=((cj6)*(r02));
IkReal x908=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x906)))+(((sj7)*(x907))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x906)))+(((sj7)*(x907)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))), ((((cj7)*(r22)))+(((sj7)*(x906)))+(((sj7)*(x907)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x909=IKsin(j10);
IkReal x910=IKcos(j10);
IkReal x911=((IkReal(1.00000000000000))*(r22));
IkReal x912=((cj6)*(r00));
IkReal x913=((r10)*(sj6));
IkReal x914=((r20)*(sj11));
IkReal x915=((cj11)*(r21));
IkReal x916=((sj11)*(sj7));
IkReal x917=((cj6)*(r01));
IkReal x918=((r11)*(sj6));
IkReal x919=((cj6)*(r02));
IkReal x920=((r12)*(sj6));
IkReal x921=((IkReal(1.00000000000000))*(sj7));
IkReal x922=((cj11)*(sj7));
IkReal x923=((IkReal(1.00000000000000))*(cj7)*(sj11));
IkReal x924=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((cj7)*(x919)))+(((IkReal(-1.00000000000000))*(sj7)*(x911)))+(x909)+(((cj7)*(x920))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x919)*(x921)))+(((IkReal(-1.00000000000000))*(x920)*(x921)))+(((IkReal(-1.00000000000000))*(cj7)*(x911)))+(x910));
evalcond[2]=((((cj7)*(x914)))+(((x912)*(x916)))+(((IkReal(-1.00000000000000))*(x909)))+(((x913)*(x916)))+(((x918)*(x922)))+(((cj7)*(x915)))+(((x917)*(x922))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x917)*(x924)))+(((IkReal(-1.00000000000000))*(x918)*(x924)))+(((sj7)*(x915)))+(((sj7)*(x914)))+(x910)+(((IkReal(-1.00000000000000))*(x912)*(x923)))+(((IkReal(-1.00000000000000))*(x913)*(x923))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))))+IKsqr(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x925=IKsin(j10);
IkReal x926=IKcos(j10);
IkReal x927=((IkReal(1.00000000000000))*(cj9));
IkReal x928=((IkReal(1.00000000000000))*(sj6));
IkReal x929=((cj7)*(sj11));
IkReal x930=((cj11)*(r01));
IkReal x931=((IkReal(1.00000000000000))*(cj7));
IkReal x932=((IkReal(1.00000000000000))*(cj6));
IkReal x933=((cj11)*(r21));
IkReal x934=((r10)*(sj11));
IkReal x935=((sj6)*(sj7));
IkReal x936=((cj11)*(r11));
IkReal x937=((r00)*(sj11));
IkReal x938=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x932)))+(((sj9)*(x925))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x925)*(x927))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x928)*(x937)))+(((sj9)*(x926)))+(((IkReal(-1.00000000000000))*(x928)*(x930)))+(((cj6)*(x934)))+(((cj6)*(x936))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x928)))+(x926)+(((IkReal(-1.00000000000000))*(r22)*(x931)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x932))));
evalcond[4]=((((x934)*(x935)))+(((cj7)*(x933)))+(((x937)*(x938)))+(((IkReal(-1.00000000000000))*(x925)))+(((r20)*(x929)))+(((x935)*(x936)))+(((x930)*(x938))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x930)*(x931)))+(((sj7)*(x933)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(r00)*(x929)*(x932)))+(((IkReal(-1.00000000000000))*(cj7)*(x928)*(x936)))+(((IkReal(-1.00000000000000))*(x926)*(x927)))+(((IkReal(-1.00000000000000))*(r10)*(x928)*(x929))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x939=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x939)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x939)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst8)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x939)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x939)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x940=IKsin(j10);
IkReal x941=IKcos(j10);
IkReal x942=((IkReal(1.00000000000000))*(cj9));
IkReal x943=((IkReal(1.00000000000000))*(sj6));
IkReal x944=((cj7)*(sj11));
IkReal x945=((cj11)*(r01));
IkReal x946=((IkReal(1.00000000000000))*(cj7));
IkReal x947=((IkReal(1.00000000000000))*(cj6));
IkReal x948=((cj11)*(r21));
IkReal x949=((r10)*(sj11));
IkReal x950=((sj6)*(sj7));
IkReal x951=((cj11)*(r11));
IkReal x952=((r00)*(sj11));
IkReal x953=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x940)))+(((IkReal(-1.00000000000000))*(r12)*(x947))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(x940)*(x942)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x943)*(x945)))+(((IkReal(-1.00000000000000))*(x943)*(x952)))+(((sj9)*(x941)))+(((cj6)*(x949)))+(((cj6)*(x951))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x947)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x943)))+(x941)+(((IkReal(-1.00000000000000))*(r22)*(x946))));
evalcond[4]=((((r20)*(x944)))+(((x950)*(x951)))+(((x952)*(x953)))+(((IkReal(-1.00000000000000))*(x940)))+(((x949)*(x950)))+(((x945)*(x953)))+(((cj7)*(x948))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x943)*(x944)))+(((IkReal(-1.00000000000000))*(cj6)*(x945)*(x946)))+(((sj7)*(x948)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(r00)*(x944)*(x947)))+(((IkReal(-1.00000000000000))*(cj7)*(x943)*(x951)))+(((IkReal(-1.00000000000000))*(x941)*(x942))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x954=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x955=((cj9)*(sj8));
IkReal x956=((cj6)*(r12));
IkReal x957=((cj7)*(sj9));
IkReal x958=((IkReal(1.00000000000000))*(r02)*(sj6));
if( IKabs(((x954)*(((x956)+(((IkReal(-1.00000000000000))*(x958))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x954)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x957)))+(((r12)*(sj6)*(x957)))+(((IkReal(-1.00000000000000))*(x955)*(x958)))+(((x955)*(x956)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x954)*(((x956)+(((IkReal(-1.00000000000000))*(x958)))))))+IKsqr(((x954)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x957)))+(((r12)*(sj6)*(x957)))+(((IkReal(-1.00000000000000))*(x955)*(x958)))+(((x955)*(x956)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((x954)*(((x956)+(((IkReal(-1.00000000000000))*(x958)))))), ((x954)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x957)))+(((r12)*(sj6)*(x957)))+(((IkReal(-1.00000000000000))*(x955)*(x958)))+(((x955)*(x956)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x959=IKsin(j10);
IkReal x960=IKcos(j10);
IkReal x961=((cj9)*(sj8));
IkReal x962=((cj6)*(cj7));
IkReal x963=((IkReal(1.00000000000000))*(cj7));
IkReal x964=((IkReal(1.00000000000000))*(cj6));
IkReal x965=((r20)*(sj11));
IkReal x966=((cj11)*(r21));
IkReal x967=((cj6)*(sj11));
IkReal x968=((cj11)*(cj6));
IkReal x969=((r12)*(sj6));
IkReal x970=((IkReal(1.00000000000000))*(sj7));
IkReal x971=((cj8)*(x959));
IkReal x972=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x973=((r10)*(sj11)*(sj6));
IkReal x974=((cj11)*(r11)*(sj6));
IkReal x975=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x976=((IkReal(1.00000000000000))*(cj8)*(x960));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x964)))+(((r02)*(sj6)))+(((sj9)*(x959))));
evalcond[1]=((((x959)*(x961)))+(((r02)*(x962)))+(((IkReal(-1.00000000000000))*(x976)))+(((IkReal(-1.00000000000000))*(r22)*(x970)))+(((cj7)*(x969))));
evalcond[2]=((((r10)*(x967)))+(((sj9)*(x960)))+(((IkReal(-1.00000000000000))*(sj6)*(x972)))+(((IkReal(-1.00000000000000))*(sj6)*(x975)))+(((r11)*(x968))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj8)*(x960)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x964)))+(((IkReal(-1.00000000000000))*(x969)*(x970)))+(((IkReal(-1.00000000000000))*(cj9)*(x971)))+(((IkReal(-1.00000000000000))*(r22)*(x963))));
evalcond[4]=((((cj7)*(x965)))+(((sj8)*(x959)))+(((r00)*(sj7)*(x967)))+(((sj7)*(x973)))+(((IkReal(-1.00000000000000))*(cj9)*(x976)))+(((cj7)*(x966)))+(((r01)*(sj7)*(x968)))+(((sj7)*(x974))));
evalcond[5]=((((x960)*(x961)))+(x971)+(((IkReal(-1.00000000000000))*(x962)*(x972)))+(((IkReal(-1.00000000000000))*(x963)*(x973)))+(((IkReal(-1.00000000000000))*(x962)*(x975)))+(((sj7)*(x966)))+(((sj7)*(x965)))+(((IkReal(-1.00000000000000))*(x963)*(x974))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x977=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x977)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x977)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst2)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x977)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x977)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x978=IKsin(j10);
IkReal x979=IKcos(j10);
IkReal x980=((cj9)*(sj8));
IkReal x981=((cj6)*(cj7));
IkReal x982=((IkReal(1.00000000000000))*(cj7));
IkReal x983=((IkReal(1.00000000000000))*(cj6));
IkReal x984=((r20)*(sj11));
IkReal x985=((cj11)*(r21));
IkReal x986=((cj6)*(sj11));
IkReal x987=((cj11)*(cj6));
IkReal x988=((r12)*(sj6));
IkReal x989=((IkReal(1.00000000000000))*(sj7));
IkReal x990=((cj8)*(x978));
IkReal x991=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x992=((r10)*(sj11)*(sj6));
IkReal x993=((cj11)*(r11)*(sj6));
IkReal x994=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x995=((IkReal(1.00000000000000))*(cj8)*(x979));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x978)))+(((IkReal(-1.00000000000000))*(r12)*(x983))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x989)))+(((x978)*(x980)))+(((IkReal(-1.00000000000000))*(x995)))+(((r02)*(x981)))+(((cj7)*(x988))));
evalcond[2]=((((r11)*(x987)))+(((IkReal(-1.00000000000000))*(sj6)*(x991)))+(((sj9)*(x979)))+(((r10)*(x986)))+(((IkReal(-1.00000000000000))*(sj6)*(x994))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x983)))+(((IkReal(-1.00000000000000))*(sj8)*(x979)))+(((IkReal(-1.00000000000000))*(cj9)*(x990)))+(((IkReal(-1.00000000000000))*(x988)*(x989)))+(((IkReal(-1.00000000000000))*(r22)*(x982))));
evalcond[4]=((((r01)*(sj7)*(x987)))+(((r00)*(sj7)*(x986)))+(((sj8)*(x978)))+(((sj7)*(x992)))+(((IkReal(-1.00000000000000))*(cj9)*(x995)))+(((cj7)*(x985)))+(((cj7)*(x984)))+(((sj7)*(x993))));
evalcond[5]=((((sj7)*(x985)))+(((x979)*(x980)))+(((sj7)*(x984)))+(((IkReal(-1.00000000000000))*(x982)*(x992)))+(((IkReal(-1.00000000000000))*(x981)*(x991)))+(((IkReal(-1.00000000000000))*(x982)*(x993)))+(((IkReal(-1.00000000000000))*(x981)*(x994)))+(x990));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x996=((sj11)*(sj7));
IkReal x997=((cj11)*(cj7));
IkReal x998=((r10)*(sj6));
IkReal x999=((cj6)*(r00));
IkReal x1000=((cj11)*(sj7));
IkReal x1001=((cj7)*(sj11));
IkReal x1002=((IkReal(1.00000000000000))*(r11)*(sj6));
IkReal x1003=((IkReal(1.00000000000000))*(cj6)*(r01));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r20)*(x1000)))+(((IkReal(-1.00000000000000))*(x1001)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)))+(((x997)*(x998)))+(((r21)*(x996)))+(((x997)*(x999))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x1000)*(x998)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(r21)*(x1001)))+(((r20)*(x997)))+(((IkReal(-1.00000000000000))*(x1002)*(x996)))+(((IkReal(-1.00000000000000))*(x1003)*(x996))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r20)*(x1000)))+(((IkReal(-1.00000000000000))*(x1001)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)))+(((x997)*(x998)))+(((r21)*(x996)))+(((x997)*(x999)))))), ((gconst0)*(((((x1000)*(x998)))+(((x1000)*(x999)))+(((IkReal(-1.00000000000000))*(r21)*(x1001)))+(((r20)*(x997)))+(((IkReal(-1.00000000000000))*(x1002)*(x996)))+(((IkReal(-1.00000000000000))*(x1003)*(x996)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x1004=IKsin(j8);
IkReal x1005=IKcos(j8);
IkReal x1006=((IkReal(0.0620002000000000))*(sj11));
IkReal x1007=((cj7)*(r21));
IkReal x1008=((IkReal(1.00000000000000))*(cj11));
IkReal x1009=((cj7)*(r20));
IkReal x1010=((IkReal(0.00151567000000000))*(cj9));
IkReal x1011=((r21)*(sj7));
IkReal x1012=((IkReal(1.00000000000000))*(cj7));
IkReal x1013=((cj7)*(sj6));
IkReal x1014=((IkReal(0.0620002000000000))*(cj11));
IkReal x1015=((IkReal(1.00000000000000))*(sj7));
IkReal x1016=((cj6)*(px));
IkReal x1017=((cj6)*(r01));
IkReal x1018=((cj11)*(r20)*(sj7));
IkReal x1019=((sj7)*(x1017));
IkReal x1020=((sj9)*(x1005));
IkReal x1021=((cj6)*(r00)*(sj7));
IkReal x1022=((r11)*(sj6)*(sj7));
IkReal x1023=((sj9)*(x1004));
IkReal x1024=((r10)*(sj6)*(sj7));
IkReal x1025=((cj6)*(cj7)*(r00));
evalcond[0]=((((sj11)*(x1022)))+(((sj11)*(x1007)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((IkReal(-1.00000000000000))*(x1008)*(x1021)))+(((sj11)*(x1019)))+(x1020)+(((IkReal(-1.00000000000000))*(x1008)*(x1024))));
evalcond[1]=((((cj11)*(x1025)))+(((IkReal(-1.00000000000000))*(sj11)*(x1012)*(x1017)))+(((sj11)*(x1011)))+(((IkReal(-1.00000000000000))*(r11)*(sj11)*(sj6)*(x1012)))+(((cj11)*(r10)*(x1013)))+(((IkReal(-1.00000000000000))*(x1023)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1008))));
evalcond[2]=((((r11)*(x1006)*(x1013)))+(((IkReal(-1.00000000000000))*(x1014)*(x1025)))+(((IkReal(-1.00000000000000))*(pz)*(x1015)))+(((IkReal(-1.00000000000000))*(x1004)*(x1010)))+(((cj7)*(x1006)*(x1017)))+(((cj7)*(x1016)))+(((IkReal(-0.302000000000000))*(x1005)))+(((IkReal(-0.0701403000000000))*(x1004)))+(((IkReal(0.0616850000000000))*(x1023)))+(((r20)*(sj7)*(x1014)))+(((py)*(x1013)))+(((IkReal(-1.00000000000000))*(r10)*(x1013)*(x1014)))+(((IkReal(-1.00000000000000))*(x1006)*(x1011))));
evalcond[3]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1006)*(x1022)))+(((IkReal(0.0701403000000000))*(x1005)))+(((x1014)*(x1021)))+(((x1005)*(x1010)))+(((IkReal(-0.0616850000000000))*(x1020)))+(((x1014)*(x1024)))+(((IkReal(-1.00000000000000))*(x1006)*(x1019)))+(((IkReal(-1.00000000000000))*(x1015)*(x1016)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1015)))+(((IkReal(-0.302000000000000))*(x1004)))+(((IkReal(-1.00000000000000))*(pz)*(x1012)))+(((IkReal(-1.00000000000000))*(x1006)*(x1007)))+(((x1009)*(x1014))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1026=((IkReal(0.0620002000000000))*(cj7));
IkReal x1027=((r21)*(sj11));
IkReal x1028=((IkReal(1.00000000000000))*(cj11));
IkReal x1029=((r01)*(sj6));
IkReal x1030=((r20)*(sj7));
IkReal x1031=((IkReal(1.00000000000000))*(cj6));
IkReal x1032=((IkReal(0.0620002000000000))*(cj11));
IkReal x1033=((IkReal(1.00000000000000))*(sj7));
IkReal x1034=((IkReal(0.0620002000000000))*(sj11));
IkReal x1035=((cj6)*(r10));
IkReal x1036=((IkReal(1.00000000000000))*(cj7));
IkReal x1037=((cj7)*(sj6));
IkReal x1038=((r00)*(sj6));
IkReal x1039=((r11)*(sj11));
IkReal x1040=((IkReal(0.0620002000000000))*(sj7));
IkReal x1041=((cj11)*(r10));
IkReal x1042=((IkReal(1.00000000000000))*(sj11));
IkReal x1043=((cj6)*(r11));
IkReal x1044=((r01)*(sj11));
IkReal x1045=((cj11)*(cj6)*(r00));
IkReal x1046=((r11)*(sj6)*(sj7));
IkReal x1047=((r10)*(sj6)*(sj7));
IkReal x1048=((cj6)*(sj7)*(x1044));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1031))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1028)*(x1035)))+(((IkReal(-1.00000000000000))*(x1029)*(x1042)))+(((cj11)*(x1038)))+(((cj6)*(x1039))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1028)*(x1029)))+(((sj11)*(x1035)))+(((IkReal(-1.00000000000000))*(x1038)*(x1042)))+(((cj11)*(x1043))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(x1034)*(x1043)))+(((px)*(sj6)))+(((x1032)*(x1035)))+(((IkReal(-1.00000000000000))*(x1032)*(x1038)))+(((IkReal(-1.00000000000000))*(py)*(x1031)))+(((x1029)*(x1034))));
evalcond[5]=((((cj7)*(x1027)))+(((IkReal(-1.00000000000000))*(x1028)*(x1047)))+(x1048)+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1028)))+(((sj6)*(sj7)*(x1039)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1028))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1031)*(x1044)))+(((sj7)*(x1027)))+(((x1037)*(x1041)))+(((cj7)*(x1045)))+(((IkReal(-1.00000000000000))*(sj6)*(x1036)*(x1039)))+(((IkReal(-1.00000000000000))*(x1028)*(x1030))));
evalcond[7]=((((cj6)*(x1026)*(x1044)))+(((IkReal(-0.302000000000000))*(cj8)))+(((IkReal(-0.0716559700000000))*(sj8)))+(((IkReal(-1.00000000000000))*(pz)*(x1033)))+(((IkReal(-1.00000000000000))*(x1027)*(x1040)))+(((cj6)*(cj7)*(px)))+(((py)*(x1037)))+(((IkReal(-1.00000000000000))*(x1026)*(x1045)))+(((IkReal(-1.00000000000000))*(sj6)*(x1026)*(x1041)))+(((x1030)*(x1032)))+(((sj6)*(x1026)*(x1039))));
evalcond[8]=((IkReal(0.270000000000000))+(((cj11)*(r20)*(x1026)))+(((IkReal(0.0716559700000000))*(cj8)))+(((x1032)*(x1047)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1031)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1033)))+(((IkReal(-1.00000000000000))*(x1026)*(x1027)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1034)))+(((IkReal(-1.00000000000000))*(x1034)*(x1046)))+(((IkReal(-1.00000000000000))*(pz)*(x1036)))+(((IkReal(-0.302000000000000))*(sj8)))+(((cj6)*(r00)*(sj7)*(x1032))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1049=((sj7)*(sj8));
IkReal x1050=((cj11)*(r21));
IkReal x1051=((r20)*(sj11));
IkReal x1052=((cj8)*(sj7));
IkReal x1053=((IkReal(1.00000000000000))*(sj11));
IkReal x1054=((IkReal(1.00000000000000))*(cj11));
IkReal x1055=((cj7)*(sj6)*(sj8));
IkReal x1056=((cj6)*(cj7)*(sj8));
IkReal x1057=((cj7)*(cj8)*(sj6));
IkReal x1058=((cj6)*(cj7)*(cj8));
if( IKabs(((gconst4)*(((((r02)*(x1056)))+(((IkReal(-1.00000000000000))*(r00)*(x1053)*(x1058)))+(((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(r22)*(x1049)))+(((IkReal(-1.00000000000000))*(r11)*(x1054)*(x1057)))+(((IkReal(-1.00000000000000))*(r10)*(x1053)*(x1057)))+(((x1050)*(x1052)))+(((r12)*(x1055)))+(((IkReal(-1.00000000000000))*(r01)*(x1054)*(x1058))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x1057)))+(((IkReal(-1.00000000000000))*(r10)*(x1053)*(x1055)))+(((IkReal(-1.00000000000000))*(r00)*(x1053)*(x1056)))+(((x1049)*(x1050)))+(((IkReal(-1.00000000000000))*(r02)*(x1058)))+(((x1049)*(x1051)))+(((r22)*(x1052)))+(((IkReal(-1.00000000000000))*(r01)*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(r11)*(x1054)*(x1055))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((r02)*(x1056)))+(((IkReal(-1.00000000000000))*(r00)*(x1053)*(x1058)))+(((x1051)*(x1052)))+(((IkReal(-1.00000000000000))*(r22)*(x1049)))+(((IkReal(-1.00000000000000))*(r11)*(x1054)*(x1057)))+(((IkReal(-1.00000000000000))*(r10)*(x1053)*(x1057)))+(((x1050)*(x1052)))+(((r12)*(x1055)))+(((IkReal(-1.00000000000000))*(r01)*(x1054)*(x1058)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x1057)))+(((IkReal(-1.00000000000000))*(r10)*(x1053)*(x1055)))+(((IkReal(-1.00000000000000))*(r00)*(x1053)*(x1056)))+(((x1049)*(x1050)))+(((IkReal(-1.00000000000000))*(r02)*(x1058)))+(((x1049)*(x1051)))+(((r22)*(x1052)))+(((IkReal(-1.00000000000000))*(r01)*(x1054)*(x1056)))+(((IkReal(-1.00000000000000))*(r11)*(x1054)*(x1055)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1059=IKcos(j10);
IkReal x1060=IKsin(j10);
IkReal x1061=((IkReal(1.00000000000000))*(cj7));
IkReal x1062=((cj6)*(r02));
IkReal x1063=((IkReal(1.00000000000000))*(sj7));
IkReal x1064=((r20)*(sj11));
IkReal x1065=((cj11)*(r21));
IkReal x1066=((r12)*(sj6));
IkReal x1067=((sj8)*(x1060));
IkReal x1068=((cj8)*(x1060));
IkReal x1069=((r10)*(sj11)*(sj6));
IkReal x1070=((IkReal(1.00000000000000))*(x1059));
IkReal x1071=((cj11)*(cj6)*(r01));
IkReal x1072=((cj11)*(r11)*(sj6));
IkReal x1073=((cj6)*(r00)*(sj11));
IkReal x1074=((cj8)*(x1070));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1074)))+(((cj7)*(x1062)))+(((IkReal(-1.00000000000000))*(r22)*(x1063)))+(x1067)+(((cj7)*(x1066))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1063)*(x1066)))+(((IkReal(-1.00000000000000))*(r22)*(x1061)))+(((IkReal(-1.00000000000000))*(sj8)*(x1070)))+(((IkReal(-1.00000000000000))*(x1068)))+(((IkReal(-1.00000000000000))*(x1062)*(x1063))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1074)))+(((cj7)*(x1064)))+(((sj7)*(x1071)))+(((sj7)*(x1073)))+(((sj7)*(x1072)))+(x1067)+(((cj7)*(x1065)))+(((sj7)*(x1069))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1061)*(x1072)))+(((IkReal(-1.00000000000000))*(x1061)*(x1073)))+(((IkReal(-1.00000000000000))*(x1061)*(x1069)))+(((sj8)*(x1059)))+(((sj7)*(x1065)))+(x1068)+(((IkReal(-1.00000000000000))*(x1061)*(x1071)))+(((sj7)*(x1064))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1075=((cj7)*(cj8));
IkReal x1076=((r12)*(sj6));
IkReal x1077=((IkReal(1.00000000000000))*(sj7));
IkReal x1078=((cj6)*(r02));
IkReal x1079=((IkReal(1.00000000000000))*(r22));
IkReal x1080=((cj7)*(sj8));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(x1076)*(x1077)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x1078)*(x1080)))+(((IkReal(-1.00000000000000))*(x1076)*(x1080)))+(((IkReal(-1.00000000000000))*(cj8)*(x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1075)*(x1079))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((x1075)*(x1076)))+(((IkReal(-1.00000000000000))*(cj8)*(r22)*(x1077)))+(((IkReal(-1.00000000000000))*(sj8)*(x1076)*(x1077)))+(((IkReal(-1.00000000000000))*(x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(sj8)*(x1077)*(x1078)))+(((x1075)*(x1078))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(x1076)*(x1077)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x1078)*(x1080)))+(((IkReal(-1.00000000000000))*(x1076)*(x1080)))+(((IkReal(-1.00000000000000))*(cj8)*(x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1075)*(x1079)))))), ((gconst3)*(((((x1075)*(x1076)))+(((IkReal(-1.00000000000000))*(cj8)*(r22)*(x1077)))+(((IkReal(-1.00000000000000))*(sj8)*(x1076)*(x1077)))+(((IkReal(-1.00000000000000))*(x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(sj8)*(x1077)*(x1078)))+(((x1075)*(x1078)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1081=IKcos(j10);
IkReal x1082=IKsin(j10);
IkReal x1083=((IkReal(1.00000000000000))*(cj7));
IkReal x1084=((cj6)*(r02));
IkReal x1085=((IkReal(1.00000000000000))*(sj7));
IkReal x1086=((r20)*(sj11));
IkReal x1087=((cj11)*(r21));
IkReal x1088=((r12)*(sj6));
IkReal x1089=((sj8)*(x1082));
IkReal x1090=((cj8)*(x1082));
IkReal x1091=((r10)*(sj11)*(sj6));
IkReal x1092=((IkReal(1.00000000000000))*(x1081));
IkReal x1093=((cj11)*(cj6)*(r01));
IkReal x1094=((cj11)*(r11)*(sj6));
IkReal x1095=((cj6)*(r00)*(sj11));
IkReal x1096=((cj8)*(x1092));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1096)))+(x1089)+(((cj7)*(x1088)))+(((cj7)*(x1084)))+(((IkReal(-1.00000000000000))*(r22)*(x1085))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj8)*(x1092)))+(((IkReal(-1.00000000000000))*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(x1090)))+(((IkReal(-1.00000000000000))*(x1085)*(x1088)))+(((IkReal(-1.00000000000000))*(r22)*(x1083))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1096)))+(x1089)+(((sj7)*(x1091)))+(((sj7)*(x1095)))+(((cj7)*(x1087)))+(((sj7)*(x1093)))+(((sj7)*(x1094)))+(((cj7)*(x1086))));
evalcond[3]=((((sj8)*(x1081)))+(((IkReal(-1.00000000000000))*(x1083)*(x1091)))+(((sj7)*(x1086)))+(((IkReal(-1.00000000000000))*(x1083)*(x1095)))+(((IkReal(-1.00000000000000))*(x1083)*(x1094)))+(x1090)+(((IkReal(-1.00000000000000))*(x1083)*(x1093)))+(((sj7)*(x1087))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1097=((IkReal(0.0620002000000000))*(cj7));
IkReal x1098=((r21)*(sj11));
IkReal x1099=((IkReal(1.00000000000000))*(cj11));
IkReal x1100=((r01)*(sj6));
IkReal x1101=((r20)*(sj7));
IkReal x1102=((IkReal(1.00000000000000))*(cj6));
IkReal x1103=((IkReal(0.0620002000000000))*(cj11));
IkReal x1104=((IkReal(1.00000000000000))*(sj7));
IkReal x1105=((IkReal(0.0620002000000000))*(sj11));
IkReal x1106=((cj6)*(r10));
IkReal x1107=((IkReal(1.00000000000000))*(cj7));
IkReal x1108=((cj7)*(sj6));
IkReal x1109=((r00)*(sj6));
IkReal x1110=((r11)*(sj11));
IkReal x1111=((IkReal(0.0620002000000000))*(sj7));
IkReal x1112=((cj11)*(r10));
IkReal x1113=((IkReal(1.00000000000000))*(sj11));
IkReal x1114=((cj6)*(r11));
IkReal x1115=((r01)*(sj11));
IkReal x1116=((cj11)*(cj6)*(r00));
IkReal x1117=((r11)*(sj6)*(sj7));
IkReal x1118=((r10)*(sj6)*(sj7));
IkReal x1119=((cj6)*(sj7)*(x1115));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1102))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj6)*(x1110)))+(((IkReal(-1.00000000000000))*(x1099)*(x1106)))+(((cj11)*(x1109)))+(((IkReal(-1.00000000000000))*(x1100)*(x1113))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1099)*(x1100)))+(((IkReal(-1.00000000000000))*(x1109)*(x1113)))+(((sj11)*(x1106)))+(((cj11)*(x1114))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1100)*(x1105)))+(((x1103)*(x1106)))+(((IkReal(-1.00000000000000))*(x1105)*(x1114)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1102)))+(((IkReal(-1.00000000000000))*(x1103)*(x1109))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1099)*(x1118)))+(((sj6)*(sj7)*(x1110)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1099)))+(x1119)+(((cj7)*(x1098)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1099))));
evalcond[6]=((((cj7)*(x1116)))+(((x1108)*(x1112)))+(((IkReal(-1.00000000000000))*(x1099)*(x1101)))+(((IkReal(-1.00000000000000))*(cj7)*(x1102)*(x1115)))+(((IkReal(-1.00000000000000))*(sj6)*(x1107)*(x1110)))+(((sj7)*(x1098))));
evalcond[7]=((((IkReal(-0.302000000000000))*(cj8)))+(((IkReal(-0.0686246300000000))*(sj8)))+(((py)*(x1108)))+(((cj6)*(x1097)*(x1115)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(pz)*(x1104)))+(((sj6)*(x1097)*(x1110)))+(((IkReal(-1.00000000000000))*(sj6)*(x1097)*(x1112)))+(((IkReal(-1.00000000000000))*(x1098)*(x1111)))+(((x1101)*(x1103)))+(((IkReal(-1.00000000000000))*(x1097)*(x1116))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1107)))+(((IkReal(-1.00000000000000))*(x1097)*(x1098)))+(((cj6)*(r00)*(sj7)*(x1103)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1105)))+(((cj11)*(r20)*(x1097)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1104)))+(((IkReal(0.0686246300000000))*(cj8)))+(((x1103)*(x1118)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1102)))+(((IkReal(-1.00000000000000))*(x1105)*(x1117)))+(((IkReal(-0.302000000000000))*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1120=((IkReal(1.00000000000000))*(cj8));
IkReal x1121=((cj6)*(sj7));
IkReal x1122=((cj8)*(sj11));
IkReal x1123=((cj7)*(r20));
IkReal x1124=((sj6)*(sj7));
IkReal x1125=((sj11)*(sj8));
IkReal x1126=((cj7)*(r22));
IkReal x1127=((cj11)*(sj8));
IkReal x1128=((cj11)*(cj8));
IkReal x1129=((cj11)*(cj7)*(r21));
if( IKabs(((gconst6)*(((((r10)*(x1124)*(x1125)))+(((IkReal(-1.00000000000000))*(x1120)*(x1126)))+(((x1123)*(x1125)))+(((cj7)*(r21)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(x1120)*(x1121)))+(((r01)*(x1121)*(x1127)))+(((IkReal(-1.00000000000000))*(r12)*(x1120)*(x1124)))+(((r00)*(x1121)*(x1125)))+(((r11)*(x1124)*(x1127))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r01)*(x1121)*(x1128)))+(((r12)*(sj8)*(x1124)))+(((cj7)*(r21)*(x1128)))+(((r10)*(x1122)*(x1124)))+(((x1122)*(x1123)))+(((r00)*(x1121)*(x1122)))+(((r11)*(x1124)*(x1128)))+(((r02)*(sj8)*(x1121)))+(((sj8)*(x1126))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((r10)*(x1124)*(x1125)))+(((IkReal(-1.00000000000000))*(x1120)*(x1126)))+(((x1123)*(x1125)))+(((cj7)*(r21)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(x1120)*(x1121)))+(((r01)*(x1121)*(x1127)))+(((IkReal(-1.00000000000000))*(r12)*(x1120)*(x1124)))+(((r00)*(x1121)*(x1125)))+(((r11)*(x1124)*(x1127)))))), ((gconst6)*(((((r01)*(x1121)*(x1128)))+(((r12)*(sj8)*(x1124)))+(((cj7)*(r21)*(x1128)))+(((r10)*(x1122)*(x1124)))+(((x1122)*(x1123)))+(((r00)*(x1121)*(x1122)))+(((r11)*(x1124)*(x1128)))+(((r02)*(sj8)*(x1121)))+(((sj8)*(x1126)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1130=IKsin(j10);
IkReal x1131=IKcos(j10);
IkReal x1132=((IkReal(1.00000000000000))*(cj7));
IkReal x1133=((cj6)*(r02));
IkReal x1134=((IkReal(1.00000000000000))*(sj7));
IkReal x1135=((r20)*(sj11));
IkReal x1136=((cj11)*(r21));
IkReal x1137=((r12)*(sj6));
IkReal x1138=((cj8)*(x1130));
IkReal x1139=((r10)*(sj11)*(sj6));
IkReal x1140=((IkReal(1.00000000000000))*(x1131));
IkReal x1141=((cj11)*(cj6)*(r01));
IkReal x1142=((sj8)*(x1130));
IkReal x1143=((cj11)*(r11)*(sj6));
IkReal x1144=((cj6)*(r00)*(sj11));
IkReal x1145=((sj8)*(x1140));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1134)))+(((IkReal(-1.00000000000000))*(x1142)))+(((cj7)*(x1133)))+(((IkReal(-1.00000000000000))*(cj8)*(x1140)))+(((cj7)*(x1137))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1145)))+(((IkReal(-1.00000000000000))*(x1133)*(x1134)))+(x1138)+(((IkReal(-1.00000000000000))*(r22)*(x1132)))+(((IkReal(-1.00000000000000))*(x1134)*(x1137))));
evalcond[2]=((((cj7)*(x1135)))+(((cj8)*(x1131)))+(((sj7)*(x1143)))+(x1142)+(((sj7)*(x1144)))+(((sj7)*(x1139)))+(((cj7)*(x1136)))+(((sj7)*(x1141))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1145)))+(((IkReal(-1.00000000000000))*(x1132)*(x1141)))+(((IkReal(-1.00000000000000))*(x1132)*(x1139)))+(((sj7)*(x1136)))+(x1138)+(((sj7)*(x1135)))+(((IkReal(-1.00000000000000))*(x1132)*(x1143)))+(((IkReal(-1.00000000000000))*(x1132)*(x1144))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1146=((cj6)*(r02));
IkReal x1147=((cj7)*(cj8));
IkReal x1148=((r12)*(sj6));
IkReal x1149=((cj8)*(sj7));
IkReal x1150=((cj7)*(sj8));
IkReal x1151=((cj7)*(x1148));
IkReal x1152=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x1153=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst5)*(((((x1146)*(x1149)))+(((x1148)*(x1150)))+(((x1148)*(x1149)))+(((r22)*(x1147)))+(((IkReal(-1.00000000000000))*(sj8)*(x1152)))+(((x1146)*(x1150))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x1147)*(x1148)))+(((IkReal(-1.00000000000000))*(r22)*(x1150)))+(((IkReal(-1.00000000000000))*(x1148)*(x1153)))+(((IkReal(-1.00000000000000))*(r22)*(x1149)))+(((x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(x1146)*(x1153))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((x1146)*(x1149)))+(((x1148)*(x1150)))+(((x1148)*(x1149)))+(((r22)*(x1147)))+(((IkReal(-1.00000000000000))*(sj8)*(x1152)))+(((x1146)*(x1150)))))), ((gconst5)*(((((x1147)*(x1148)))+(((IkReal(-1.00000000000000))*(r22)*(x1150)))+(((IkReal(-1.00000000000000))*(x1148)*(x1153)))+(((IkReal(-1.00000000000000))*(r22)*(x1149)))+(((x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(x1146)*(x1153)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1154=IKsin(j10);
IkReal x1155=IKcos(j10);
IkReal x1156=((IkReal(1.00000000000000))*(cj7));
IkReal x1157=((cj6)*(r02));
IkReal x1158=((IkReal(1.00000000000000))*(sj7));
IkReal x1159=((r20)*(sj11));
IkReal x1160=((cj11)*(r21));
IkReal x1161=((r12)*(sj6));
IkReal x1162=((cj8)*(x1154));
IkReal x1163=((r10)*(sj11)*(sj6));
IkReal x1164=((IkReal(1.00000000000000))*(x1155));
IkReal x1165=((cj11)*(cj6)*(r01));
IkReal x1166=((sj8)*(x1154));
IkReal x1167=((cj11)*(r11)*(sj6));
IkReal x1168=((cj6)*(r00)*(sj11));
IkReal x1169=((sj8)*(x1164));
evalcond[0]=((((cj7)*(x1157)))+(((cj7)*(x1161)))+(((IkReal(-1.00000000000000))*(x1166)))+(((IkReal(-1.00000000000000))*(r22)*(x1158)))+(((IkReal(-1.00000000000000))*(cj8)*(x1164))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1156)))+(x1162)+(((IkReal(-1.00000000000000))*(x1157)*(x1158)))+(((IkReal(-1.00000000000000))*(x1169)))+(((IkReal(-1.00000000000000))*(x1158)*(x1161))));
evalcond[2]=((((cj7)*(x1160)))+(((sj7)*(x1167)))+(x1166)+(((sj7)*(x1163)))+(((cj8)*(x1155)))+(((sj7)*(x1168)))+(((sj7)*(x1165)))+(((cj7)*(x1159))));
evalcond[3]=((x1162)+(((IkReal(-1.00000000000000))*(x1156)*(x1168)))+(((IkReal(-1.00000000000000))*(x1156)*(x1165)))+(((IkReal(-1.00000000000000))*(x1156)*(x1163)))+(((sj7)*(x1159)))+(((IkReal(-1.00000000000000))*(x1169)))+(((sj7)*(x1160)))+(((IkReal(-1.00000000000000))*(x1156)*(x1167))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1170=((IkReal(0.0620002000000000))*(sj11));
IkReal x1171=((cj7)*(r21));
IkReal x1172=((IkReal(1.00000000000000))*(cj11));
IkReal x1173=((cj7)*(r20));
IkReal x1174=((cj6)*(sj7));
IkReal x1175=((r01)*(sj6));
IkReal x1176=((IkReal(0.0620002000000000))*(cj11));
IkReal x1177=((cj6)*(r10));
IkReal x1178=((IkReal(1.00000000000000))*(cj7));
IkReal x1179=((cj7)*(sj6));
IkReal x1180=((r00)*(sj6));
IkReal x1181=((r11)*(sj11));
IkReal x1182=((IkReal(1.00000000000000))*(py));
IkReal x1183=((sj6)*(sj7));
IkReal x1184=((r21)*(sj7));
IkReal x1185=((cj6)*(cj7));
IkReal x1186=((r01)*(x1174));
IkReal x1187=((cj11)*(r20)*(sj7));
IkReal x1188=((r11)*(x1183));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x1175)))+(((cj6)*(x1181)))+(((IkReal(-1.00000000000000))*(x1172)*(x1177)))+(cj9)+(((cj11)*(x1180))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((x1170)*(x1175)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x1176)*(x1180)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1170)))+(((x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(cj6)*(x1182))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1172)*(x1174)))+(((x1181)*(x1183)))+(((sj11)*(x1186)))+(((IkReal(-1.00000000000000))*(r10)*(x1172)*(x1183)))+(((sj11)*(x1171)))+(((IkReal(-1.00000000000000))*(x1172)*(x1173))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj6)*(x1178)*(x1181)))+(((cj11)*(r10)*(x1179)))+(((cj11)*(r00)*(x1185)))+(((IkReal(-1.00000000000000))*(sj9)))+(((sj11)*(x1184)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x1178)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1172))));
evalcond[5]=((IkReal(-0.0701403000000000))+(((py)*(x1179)))+(((r01)*(x1170)*(x1185)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((IkReal(-1.00000000000000))*(r10)*(x1176)*(x1179)))+(((IkReal(-1.00000000000000))*(r00)*(x1176)*(x1185)))+(((IkReal(0.0616850000000000))*(sj9)))+(((r20)*(sj7)*(x1176)))+(((r11)*(x1170)*(x1179)))+(((px)*(x1185)))+(((IkReal(-0.00151567000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x1170)*(x1184))));
evalcond[6]=((IkReal(-0.0320000000000000))+(((IkReal(-1.00000000000000))*(x1182)*(x1183)))+(((r00)*(x1174)*(x1176)))+(((x1173)*(x1176)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((IkReal(-1.00000000000000))*(x1170)*(x1186)))+(((IkReal(-1.00000000000000))*(x1170)*(x1188)))+(((IkReal(-1.00000000000000))*(px)*(x1174)))+(((IkReal(-1.00000000000000))*(pz)*(x1178)))+(((r10)*(x1176)*(x1183))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1189=((IkReal(0.0620002000000000))*(cj7));
IkReal x1190=((r21)*(sj11));
IkReal x1191=((IkReal(1.00000000000000))*(cj11));
IkReal x1192=((r01)*(sj6));
IkReal x1193=((r20)*(sj7));
IkReal x1194=((IkReal(1.00000000000000))*(cj6));
IkReal x1195=((IkReal(0.0620002000000000))*(cj11));
IkReal x1196=((IkReal(1.00000000000000))*(sj7));
IkReal x1197=((IkReal(0.0620002000000000))*(sj11));
IkReal x1198=((cj6)*(r10));
IkReal x1199=((IkReal(1.00000000000000))*(cj7));
IkReal x1200=((cj7)*(sj6));
IkReal x1201=((r00)*(sj6));
IkReal x1202=((r11)*(sj11));
IkReal x1203=((IkReal(0.0620002000000000))*(sj7));
IkReal x1204=((cj11)*(r10));
IkReal x1205=((IkReal(1.00000000000000))*(sj11));
IkReal x1206=((cj6)*(r11));
IkReal x1207=((r01)*(sj11));
IkReal x1208=((cj11)*(cj6)*(r00));
IkReal x1209=((r11)*(sj6)*(sj7));
IkReal x1210=((r10)*(sj6)*(sj7));
IkReal x1211=((cj6)*(sj7)*(x1207));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1194))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1192)*(x1205)))+(((cj6)*(x1202)))+(((IkReal(-1.00000000000000))*(x1191)*(x1198)))+(((cj11)*(x1201))));
evalcond[3]=((((sj11)*(x1198)))+(((cj11)*(x1206)))+(((IkReal(-1.00000000000000))*(x1201)*(x1205)))+(((IkReal(-1.00000000000000))*(x1191)*(x1192))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((x1192)*(x1197)))+(((IkReal(-1.00000000000000))*(x1197)*(x1206)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1194)))+(((x1195)*(x1198)))+(((IkReal(-1.00000000000000))*(x1195)*(x1201))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1191)*(x1210)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1191)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1191)))+(((cj7)*(x1190)))+(x1211)+(((sj6)*(sj7)*(x1202))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1194)*(x1207)))+(((IkReal(-1.00000000000000))*(sj6)*(x1199)*(x1202)))+(((sj7)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((x1200)*(x1204)))+(((cj7)*(x1208))));
evalcond[7]=((IkReal(-0.0716559700000000))+(((IkReal(-1.00000000000000))*(pz)*(x1196)))+(((py)*(x1200)))+(((cj6)*(cj7)*(px)))+(((sj6)*(x1189)*(x1202)))+(((IkReal(-1.00000000000000))*(x1189)*(x1208)))+(((IkReal(-1.00000000000000))*(x1190)*(x1203)))+(((IkReal(-1.00000000000000))*(sj6)*(x1189)*(x1204)))+(((cj6)*(x1189)*(x1207)))+(((x1193)*(x1195))));
evalcond[8]=((IkReal(-0.0320000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1199)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1194)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1197)))+(((cj6)*(r00)*(sj7)*(x1195)))+(((cj11)*(r20)*(x1189)))+(((IkReal(-1.00000000000000))*(x1197)*(x1209)))+(((x1195)*(x1210)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1196)))+(((IkReal(-1.00000000000000))*(x1189)*(x1190))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1212=((IkReal(1.00000000000000))*(sj7));
IkReal x1213=((cj6)*(r02));
IkReal x1214=((IkReal(1.00000000000000))*(cj7));
IkReal x1215=((r12)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x1214)*(x1215)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1213)*(x1214))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x1214)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(x1212)*(x1215))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1214)*(x1215)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1213)*(x1214)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x1214)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(x1212)*(x1215)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1214)*(x1215)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1213)*(x1214)))), ((((IkReal(-1.00000000000000))*(r22)*(x1214)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(x1212)*(x1215)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1216=IKsin(j10);
IkReal x1217=IKcos(j10);
IkReal x1218=((IkReal(1.00000000000000))*(r22));
IkReal x1219=((cj7)*(sj11));
IkReal x1220=((r10)*(sj6));
IkReal x1221=((cj11)*(r21));
IkReal x1222=((sj11)*(sj7));
IkReal x1223=((cj6)*(r01));
IkReal x1224=((r11)*(sj6));
IkReal x1225=((cj6)*(r02));
IkReal x1226=((r12)*(sj6));
IkReal x1227=((IkReal(1.00000000000000))*(sj7));
IkReal x1228=((cj11)*(sj7));
IkReal x1229=((cj6)*(r00));
IkReal x1230=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((cj7)*(x1226)))+(x1216)+(((cj7)*(x1225)))+(((IkReal(-1.00000000000000))*(sj7)*(x1218))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(x1218)))+(((IkReal(-1.00000000000000))*(x1225)*(x1227)))+(((IkReal(-1.00000000000000))*(x1217)))+(((IkReal(-1.00000000000000))*(x1226)*(x1227))));
evalcond[2]=((((x1220)*(x1222)))+(((x1223)*(x1228)))+(((r20)*(x1219)))+(((x1224)*(x1228)))+(((x1222)*(x1229)))+(((cj7)*(x1221)))+(x1216));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1219)*(x1220)))+(((IkReal(-1.00000000000000))*(x1219)*(x1229)))+(((sj7)*(x1221)))+(((IkReal(-1.00000000000000))*(x1224)*(x1230)))+(x1217)+(((r20)*(x1222)))+(((IkReal(-1.00000000000000))*(x1223)*(x1230))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1231=((IkReal(0.0620002000000000))*(cj7));
IkReal x1232=((r21)*(sj11));
IkReal x1233=((IkReal(1.00000000000000))*(cj11));
IkReal x1234=((r01)*(sj6));
IkReal x1235=((r20)*(sj7));
IkReal x1236=((IkReal(1.00000000000000))*(cj6));
IkReal x1237=((IkReal(0.0620002000000000))*(cj11));
IkReal x1238=((IkReal(1.00000000000000))*(sj7));
IkReal x1239=((IkReal(0.0620002000000000))*(sj11));
IkReal x1240=((cj6)*(r10));
IkReal x1241=((IkReal(1.00000000000000))*(cj7));
IkReal x1242=((cj7)*(sj6));
IkReal x1243=((r00)*(sj6));
IkReal x1244=((r11)*(sj11));
IkReal x1245=((IkReal(0.0620002000000000))*(sj7));
IkReal x1246=((cj11)*(r10));
IkReal x1247=((IkReal(1.00000000000000))*(sj11));
IkReal x1248=((cj6)*(r11));
IkReal x1249=((r01)*(sj11));
IkReal x1250=((cj11)*(cj6)*(r00));
IkReal x1251=((r11)*(sj6)*(sj7));
IkReal x1252=((r10)*(sj6)*(sj7));
IkReal x1253=((cj6)*(sj7)*(x1249));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1236))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x1243)))+(((IkReal(-1.00000000000000))*(x1233)*(x1240)))+(((cj6)*(x1244)))+(((IkReal(-1.00000000000000))*(x1234)*(x1247))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1243)*(x1247)))+(((IkReal(-1.00000000000000))*(x1233)*(x1234)))+(((sj11)*(x1240)))+(((cj11)*(x1248))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1234)*(x1239)))+(((x1237)*(x1240)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1237)*(x1243)))+(((IkReal(-1.00000000000000))*(py)*(x1236)))+(((IkReal(-1.00000000000000))*(x1239)*(x1248))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1233)))+(((cj7)*(x1232)))+(((IkReal(-1.00000000000000))*(x1233)*(x1252)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1233)))+(x1253)+(((sj6)*(sj7)*(x1244))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1236)*(x1249)))+(((IkReal(-1.00000000000000))*(sj6)*(x1241)*(x1244)))+(((x1242)*(x1246)))+(((sj7)*(x1232)))+(((IkReal(-1.00000000000000))*(x1233)*(x1235)))+(((cj7)*(x1250))));
evalcond[7]=((IkReal(-0.0686246300000000))+(((IkReal(-1.00000000000000))*(sj6)*(x1231)*(x1246)))+(((IkReal(-1.00000000000000))*(x1231)*(x1250)))+(((py)*(x1242)))+(((x1235)*(x1237)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(pz)*(x1238)))+(((IkReal(-1.00000000000000))*(x1232)*(x1245)))+(((sj6)*(x1231)*(x1244)))+(((cj6)*(x1231)*(x1249))));
evalcond[8]=((IkReal(-0.0320000000000000))+(((cj11)*(r20)*(x1231)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1236)))+(((IkReal(-1.00000000000000))*(x1231)*(x1232)))+(((IkReal(-1.00000000000000))*(x1239)*(x1251)))+(((cj6)*(r00)*(sj7)*(x1237)))+(((x1237)*(x1252)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1239)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1238)))+(((IkReal(-1.00000000000000))*(pz)*(x1241))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1254=((IkReal(1.00000000000000))*(r22));
IkReal x1255=((cj6)*(r02));
IkReal x1256=((r12)*(sj6));
IkReal x1257=((IkReal(1.00000000000000))*(sj7));
if( IKabs(((((cj7)*(x1256)))+(((IkReal(-1.00000000000000))*(sj7)*(x1254)))+(((cj7)*(x1255))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(cj7)*(x1254))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x1256)))+(((IkReal(-1.00000000000000))*(sj7)*(x1254)))+(((cj7)*(x1255)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(cj7)*(x1254)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x1256)))+(((IkReal(-1.00000000000000))*(sj7)*(x1254)))+(((cj7)*(x1255)))), ((((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(cj7)*(x1254)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1258=IKsin(j10);
IkReal x1259=((IkReal(1.00000000000000))*(cj6));
IkReal x1260=((cj7)*(sj11));
IkReal x1261=((r10)*(sj6));
IkReal x1262=((cj11)*(r21));
IkReal x1263=((sj11)*(sj7));
IkReal x1264=((cj11)*(cj7));
IkReal x1265=((IkReal(1.00000000000000))*(sj7));
IkReal x1266=((r11)*(sj6));
IkReal x1267=((r12)*(sj6));
IkReal x1268=((cj11)*(sj7));
IkReal x1269=((IkReal(1.00000000000000))*(IKcos(j10)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1258)))+(((cj6)*(cj7)*(r02)))+(((cj7)*(x1267)))+(((IkReal(-1.00000000000000))*(r22)*(x1265))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1269)))+(((IkReal(-1.00000000000000))*(x1265)*(x1267)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1259)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((cj7)*(x1262)))+(((r20)*(x1260)))+(((x1261)*(x1263)))+(((cj6)*(r00)*(x1263)))+(((cj6)*(r01)*(x1268)))+(x1258)+(((x1266)*(x1268))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1269)))+(((IkReal(-1.00000000000000))*(r01)*(x1259)*(x1264)))+(((sj7)*(x1262)))+(((r20)*(x1263)))+(((IkReal(-1.00000000000000))*(r00)*(x1259)*(x1260)))+(((IkReal(-1.00000000000000))*(x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(x1264)*(x1266))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1270=((IkReal(1.00000000000000))*(r02));
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x1270))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1270)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x1270)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1270)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(sj6)*(x1270)))))), ((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1270)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1271=IKsin(j10);
IkReal x1272=IKcos(j10);
IkReal x1273=((IkReal(1.00000000000000))*(sj6));
IkReal x1274=((cj7)*(sj11));
IkReal x1275=((cj11)*(r01));
IkReal x1276=((IkReal(1.00000000000000))*(cj7));
IkReal x1277=((IkReal(1.00000000000000))*(cj6));
IkReal x1278=((cj11)*(r21));
IkReal x1279=((r10)*(sj11));
IkReal x1280=((sj6)*(sj7));
IkReal x1281=((cj11)*(r11));
IkReal x1282=((r00)*(sj11));
IkReal x1283=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x1271)))+(((IkReal(-1.00000000000000))*(r12)*(x1277))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj9)*(x1271)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1273)*(x1282)))+(((cj6)*(x1281)))+(((cj6)*(x1279)))+(((sj9)*(x1272)))+(((IkReal(-1.00000000000000))*(x1273)*(x1275))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1272)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1273)))+(((IkReal(-1.00000000000000))*(r22)*(x1276)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1277))));
evalcond[4]=((((x1275)*(x1283)))+(((x1282)*(x1283)))+(x1271)+(((x1279)*(x1280)))+(((r20)*(x1274)))+(((cj7)*(x1278)))+(((x1280)*(x1281))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1274)*(x1277)))+(((sj7)*(x1278)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(r10)*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(cj6)*(x1275)*(x1276)))+(((cj9)*(x1272)))+(((IkReal(-1.00000000000000))*(cj7)*(x1273)*(x1281))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1284=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1284)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1284)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst7)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1284)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1284)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1285=IKsin(j10);
IkReal x1286=IKcos(j10);
IkReal x1287=((IkReal(1.00000000000000))*(sj6));
IkReal x1288=((cj7)*(sj11));
IkReal x1289=((cj11)*(r01));
IkReal x1290=((IkReal(1.00000000000000))*(cj7));
IkReal x1291=((IkReal(1.00000000000000))*(cj6));
IkReal x1292=((cj11)*(r21));
IkReal x1293=((r10)*(sj11));
IkReal x1294=((sj6)*(sj7));
IkReal x1295=((cj11)*(r11));
IkReal x1296=((r00)*(sj11));
IkReal x1297=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1291)))+(((sj9)*(x1285))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj9)*(x1285))));
evalcond[2]=((((cj6)*(x1295)))+(((sj9)*(x1286)))+(((IkReal(-1.00000000000000))*(x1287)*(x1296)))+(((cj6)*(x1293)))+(((IkReal(-1.00000000000000))*(x1287)*(x1289))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1287)))+(((IkReal(-1.00000000000000))*(r22)*(x1290)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1291)))+(((IkReal(-1.00000000000000))*(x1286))));
evalcond[4]=((((x1294)*(x1295)))+(((x1293)*(x1294)))+(((cj7)*(x1292)))+(x1285)+(((r20)*(x1288)))+(((x1296)*(x1297)))+(((x1289)*(x1297))));
evalcond[5]=((((sj7)*(x1292)))+(((IkReal(-1.00000000000000))*(r10)*(x1287)*(x1288)))+(((IkReal(-1.00000000000000))*(cj7)*(x1287)*(x1295)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x1289)*(x1290)))+(((cj9)*(x1286)))+(((IkReal(-1.00000000000000))*(r00)*(x1288)*(x1291))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1298=((IkReal(0.0620002000000000))*(sj11));
IkReal x1299=((cj7)*(r21));
IkReal x1300=((IkReal(1.00000000000000))*(cj11));
IkReal x1301=((cj7)*(r20));
IkReal x1302=((cj6)*(sj7));
IkReal x1303=((r01)*(sj6));
IkReal x1304=((IkReal(0.0620002000000000))*(cj11));
IkReal x1305=((cj6)*(r10));
IkReal x1306=((IkReal(1.00000000000000))*(cj7));
IkReal x1307=((cj7)*(sj6));
IkReal x1308=((r00)*(sj6));
IkReal x1309=((r11)*(sj11));
IkReal x1310=((IkReal(1.00000000000000))*(py));
IkReal x1311=((sj6)*(sj7));
IkReal x1312=((r21)*(sj7));
IkReal x1313=((cj6)*(cj7));
IkReal x1314=((r01)*(x1302));
IkReal x1315=((cj11)*(r20)*(sj7));
IkReal x1316=((r11)*(x1311));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x1303)))+(((cj6)*(x1309)))+(cj9)+(((IkReal(-1.00000000000000))*(x1300)*(x1305)))+(((cj11)*(x1308))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1298)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(cj6)*(x1310)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1304)*(x1308)))+(((x1304)*(x1305)))+(((x1298)*(x1303))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1300)*(x1311)))+(((sj11)*(x1314)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((sj11)*(x1299)))+(((IkReal(-1.00000000000000))*(r00)*(x1300)*(x1302)))+(((x1309)*(x1311))));
evalcond[4]=((((cj11)*(r00)*(x1313)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1300)))+(sj9)+(((sj11)*(x1312)))+(((IkReal(-1.00000000000000))*(sj6)*(x1306)*(x1309)))+(((cj11)*(r10)*(x1307)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x1306))));
evalcond[5]=((IkReal(0.0701403000000000))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((IkReal(-1.00000000000000))*(x1298)*(x1312)))+(((IkReal(-1.00000000000000))*(r10)*(x1304)*(x1307)))+(((r01)*(x1298)*(x1313)))+(((r20)*(sj7)*(x1304)))+(((IkReal(0.00151567000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(r00)*(x1304)*(x1313)))+(((r11)*(x1298)*(x1307)))+(((px)*(x1313)))+(((py)*(x1307)))+(((IkReal(-0.0616850000000000))*(sj9))));
evalcond[6]=((IkReal(0.572000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1306)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(px)*(x1302)))+(((IkReal(-1.00000000000000))*(x1298)*(x1314)))+(((x1301)*(x1304)))+(((IkReal(-1.00000000000000))*(x1298)*(x1316)))+(((IkReal(-1.00000000000000))*(x1298)*(x1299)))+(((r00)*(x1302)*(x1304)))+(((r10)*(x1304)*(x1311))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1317=((IkReal(0.0620002000000000))*(cj7));
IkReal x1318=((r21)*(sj11));
IkReal x1319=((IkReal(1.00000000000000))*(cj11));
IkReal x1320=((r01)*(sj6));
IkReal x1321=((r20)*(sj7));
IkReal x1322=((IkReal(1.00000000000000))*(cj6));
IkReal x1323=((IkReal(0.0620002000000000))*(cj11));
IkReal x1324=((IkReal(1.00000000000000))*(sj7));
IkReal x1325=((IkReal(0.0620002000000000))*(sj11));
IkReal x1326=((cj6)*(r10));
IkReal x1327=((IkReal(1.00000000000000))*(cj7));
IkReal x1328=((cj7)*(sj6));
IkReal x1329=((r00)*(sj6));
IkReal x1330=((r11)*(sj11));
IkReal x1331=((IkReal(0.0620002000000000))*(sj7));
IkReal x1332=((cj11)*(r10));
IkReal x1333=((IkReal(1.00000000000000))*(sj11));
IkReal x1334=((cj6)*(r11));
IkReal x1335=((r01)*(sj11));
IkReal x1336=((cj11)*(cj6)*(r00));
IkReal x1337=((r11)*(sj6)*(sj7));
IkReal x1338=((r10)*(sj6)*(sj7));
IkReal x1339=((cj6)*(sj7)*(x1335));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1322))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1319)*(x1326)))+(((cj11)*(x1329)))+(((IkReal(-1.00000000000000))*(x1320)*(x1333)))+(((cj6)*(x1330))));
evalcond[3]=((((sj11)*(x1326)))+(((IkReal(-1.00000000000000))*(x1329)*(x1333)))+(((IkReal(-1.00000000000000))*(x1319)*(x1320)))+(((cj11)*(x1334))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((px)*(sj6)))+(((x1320)*(x1325)))+(((IkReal(-1.00000000000000))*(x1325)*(x1334)))+(((IkReal(-1.00000000000000))*(py)*(x1322)))+(((x1323)*(x1326)))+(((IkReal(-1.00000000000000))*(x1323)*(x1329))));
evalcond[5]=((((sj6)*(sj7)*(x1330)))+(((IkReal(-1.00000000000000))*(x1319)*(x1338)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1319)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1319)))+(x1339)+(((cj7)*(x1318))));
evalcond[6]=((((cj7)*(x1336)))+(((IkReal(-1.00000000000000))*(sj6)*(x1327)*(x1330)))+(((IkReal(-1.00000000000000))*(cj7)*(x1322)*(x1335)))+(((x1328)*(x1332)))+(((IkReal(-1.00000000000000))*(x1319)*(x1321)))+(((sj7)*(x1318))));
evalcond[7]=((IkReal(0.0716559700000000))+(((x1321)*(x1323)))+(((IkReal(-1.00000000000000))*(pz)*(x1324)))+(((IkReal(-1.00000000000000))*(sj6)*(x1317)*(x1332)))+(((cj6)*(x1317)*(x1335)))+(((IkReal(-1.00000000000000))*(x1318)*(x1331)))+(((cj6)*(cj7)*(px)))+(((sj6)*(x1317)*(x1330)))+(((py)*(x1328)))+(((IkReal(-1.00000000000000))*(x1317)*(x1336))));
evalcond[8]=((IkReal(0.572000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1325)))+(((cj6)*(r00)*(sj7)*(x1323)))+(((IkReal(-1.00000000000000))*(x1325)*(x1337)))+(((IkReal(-1.00000000000000))*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1324)))+(((cj11)*(r20)*(x1317)))+(((x1323)*(x1338)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1322)))+(((IkReal(-1.00000000000000))*(pz)*(x1327))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1340=((r12)*(sj6));
IkReal x1341=((cj6)*(r02));
if( IKabs(((((cj7)*(x1340)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1341))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x1341)))+(((sj7)*(x1340))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x1340)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1341)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x1341)))+(((sj7)*(x1340)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x1340)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1341)))), ((((cj7)*(r22)))+(((sj7)*(x1341)))+(((sj7)*(x1340)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1342=IKcos(j10);
IkReal x1343=((IkReal(1.00000000000000))*(cj6));
IkReal x1344=((cj7)*(sj11));
IkReal x1345=((r10)*(sj6));
IkReal x1346=((cj11)*(r21));
IkReal x1347=((sj11)*(sj7));
IkReal x1348=((cj11)*(cj7));
IkReal x1349=((IkReal(1.00000000000000))*(sj7));
IkReal x1350=((r11)*(sj6));
IkReal x1351=((r12)*(sj6));
IkReal x1352=((cj11)*(sj7));
IkReal x1353=((IkReal(1.00000000000000))*(IKsin(j10)));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1349)))+(((cj6)*(cj7)*(r02)))+(((cj7)*(x1351)))+(((IkReal(-1.00000000000000))*(x1353))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1343)))+(((IkReal(-1.00000000000000))*(x1349)*(x1351)))+(x1342)+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((r20)*(x1344)))+(((cj6)*(r00)*(x1347)))+(((cj6)*(r01)*(x1352)))+(((x1345)*(x1347)))+(((cj7)*(x1346)))+(((x1350)*(x1352)))+(((IkReal(-1.00000000000000))*(x1353))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1343)*(x1348)))+(((r20)*(x1347)))+(((IkReal(-1.00000000000000))*(x1348)*(x1350)))+(((IkReal(-1.00000000000000))*(r00)*(x1343)*(x1344)))+(((IkReal(-1.00000000000000))*(x1342)))+(((IkReal(-1.00000000000000))*(x1344)*(x1345)))+(((sj7)*(x1346))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1354=((IkReal(0.0620002000000000))*(cj7));
IkReal x1355=((r21)*(sj11));
IkReal x1356=((IkReal(1.00000000000000))*(cj11));
IkReal x1357=((r01)*(sj6));
IkReal x1358=((r20)*(sj7));
IkReal x1359=((IkReal(1.00000000000000))*(cj6));
IkReal x1360=((IkReal(0.0620002000000000))*(cj11));
IkReal x1361=((IkReal(1.00000000000000))*(sj7));
IkReal x1362=((IkReal(0.0620002000000000))*(sj11));
IkReal x1363=((cj6)*(r10));
IkReal x1364=((IkReal(1.00000000000000))*(cj7));
IkReal x1365=((cj7)*(sj6));
IkReal x1366=((r00)*(sj6));
IkReal x1367=((r11)*(sj11));
IkReal x1368=((IkReal(0.0620002000000000))*(sj7));
IkReal x1369=((cj11)*(r10));
IkReal x1370=((IkReal(1.00000000000000))*(sj11));
IkReal x1371=((cj6)*(r11));
IkReal x1372=((r01)*(sj11));
IkReal x1373=((cj11)*(cj6)*(r00));
IkReal x1374=((r11)*(sj6)*(sj7));
IkReal x1375=((r10)*(sj6)*(sj7));
IkReal x1376=((cj6)*(sj7)*(x1372));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1359))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1356)*(x1363)))+(((IkReal(-1.00000000000000))*(x1357)*(x1370)))+(((cj11)*(x1366)))+(((cj6)*(x1367))));
evalcond[3]=((((cj11)*(x1371)))+(((IkReal(-1.00000000000000))*(x1356)*(x1357)))+(((IkReal(-1.00000000000000))*(x1366)*(x1370)))+(((sj11)*(x1363))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1357)*(x1362)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1359)))+(((IkReal(-1.00000000000000))*(x1360)*(x1366)))+(((IkReal(-1.00000000000000))*(x1362)*(x1371)))+(((x1360)*(x1363))));
evalcond[5]=((((cj7)*(x1355)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1356)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1356)))+(x1376)+(((IkReal(-1.00000000000000))*(x1356)*(x1375)))+(((sj6)*(sj7)*(x1367))));
evalcond[6]=((((x1365)*(x1369)))+(((cj7)*(x1373)))+(((IkReal(-1.00000000000000))*(sj6)*(x1364)*(x1367)))+(((IkReal(-1.00000000000000))*(x1356)*(x1358)))+(((sj7)*(x1355)))+(((IkReal(-1.00000000000000))*(cj7)*(x1359)*(x1372))));
evalcond[7]=((IkReal(0.0686246300000000))+(((cj6)*(x1354)*(x1372)))+(((IkReal(-1.00000000000000))*(pz)*(x1361)))+(((py)*(x1365)))+(((cj6)*(cj7)*(px)))+(((sj6)*(x1354)*(x1367)))+(((IkReal(-1.00000000000000))*(sj6)*(x1354)*(x1369)))+(((IkReal(-1.00000000000000))*(x1354)*(x1373)))+(((IkReal(-1.00000000000000))*(x1355)*(x1368)))+(((x1358)*(x1360))));
evalcond[8]=((IkReal(0.572000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1362)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1359)))+(((cj11)*(r20)*(x1354)))+(((IkReal(-1.00000000000000))*(pz)*(x1364)))+(((cj6)*(r00)*(sj7)*(x1360)))+(((IkReal(-1.00000000000000))*(x1354)*(x1355)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1361)))+(((x1360)*(x1375)))+(((IkReal(-1.00000000000000))*(x1362)*(x1374))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1377=((r12)*(sj6));
IkReal x1378=((cj6)*(r02));
IkReal x1379=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IkReal(-1.00000000000000))*(x1377)*(x1379)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj7)*(x1378)))+(((cj7)*(r22)))+(((sj7)*(x1377))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1377)*(x1379)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))))+IKsqr(((((sj7)*(x1378)))+(((cj7)*(r22)))+(((sj7)*(x1377)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1377)*(x1379)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))), ((((sj7)*(x1378)))+(((cj7)*(r22)))+(((sj7)*(x1377)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1380=IKsin(j10);
IkReal x1381=IKcos(j10);
IkReal x1382=((IkReal(1.00000000000000))*(r22));
IkReal x1383=((cj6)*(r00));
IkReal x1384=((r10)*(sj6));
IkReal x1385=((r20)*(sj11));
IkReal x1386=((cj11)*(r21));
IkReal x1387=((sj11)*(sj7));
IkReal x1388=((cj6)*(r01));
IkReal x1389=((r11)*(sj6));
IkReal x1390=((cj6)*(r02));
IkReal x1391=((r12)*(sj6));
IkReal x1392=((IkReal(1.00000000000000))*(sj7));
IkReal x1393=((cj11)*(sj7));
IkReal x1394=((IkReal(1.00000000000000))*(cj7)*(sj11));
IkReal x1395=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((cj7)*(x1390)))+(x1380)+(((IkReal(-1.00000000000000))*(sj7)*(x1382)))+(((cj7)*(x1391))));
evalcond[1]=((x1381)+(((IkReal(-1.00000000000000))*(x1390)*(x1392)))+(((IkReal(-1.00000000000000))*(x1391)*(x1392)))+(((IkReal(-1.00000000000000))*(cj7)*(x1382))));
evalcond[2]=((((cj7)*(x1385)))+(((x1388)*(x1393)))+(((IkReal(-1.00000000000000))*(x1380)))+(((x1389)*(x1393)))+(((x1383)*(x1387)))+(((cj7)*(x1386)))+(((x1384)*(x1387))));
evalcond[3]=((x1381)+(((IkReal(-1.00000000000000))*(x1383)*(x1394)))+(((sj7)*(x1386)))+(((IkReal(-1.00000000000000))*(x1384)*(x1394)))+(((IkReal(-1.00000000000000))*(x1388)*(x1395)))+(((sj7)*(x1385)))+(((IkReal(-1.00000000000000))*(x1389)*(x1395))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))))+IKsqr(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1396=IKsin(j10);
IkReal x1397=IKcos(j10);
IkReal x1398=((IkReal(1.00000000000000))*(cj9));
IkReal x1399=((IkReal(1.00000000000000))*(sj6));
IkReal x1400=((cj7)*(sj11));
IkReal x1401=((cj11)*(r01));
IkReal x1402=((IkReal(1.00000000000000))*(cj7));
IkReal x1403=((IkReal(1.00000000000000))*(cj6));
IkReal x1404=((cj11)*(r21));
IkReal x1405=((r10)*(sj11));
IkReal x1406=((sj6)*(sj7));
IkReal x1407=((cj11)*(r11));
IkReal x1408=((r00)*(sj11));
IkReal x1409=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1403)))+(((sj9)*(x1396))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1396)*(x1398))));
evalcond[2]=((((cj6)*(x1405)))+(((IkReal(-1.00000000000000))*(x1399)*(x1408)))+(((cj6)*(x1407)))+(((sj9)*(x1397)))+(((IkReal(-1.00000000000000))*(x1399)*(x1401))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x1402)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1403)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1399)))+(x1397));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1396)))+(((x1405)*(x1406)))+(((cj7)*(x1404)))+(((x1406)*(x1407)))+(((r20)*(x1400)))+(((x1408)*(x1409)))+(((x1401)*(x1409))));
evalcond[5]=((((sj7)*(x1404)))+(((IkReal(-1.00000000000000))*(r10)*(x1399)*(x1400)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(cj7)*(x1399)*(x1407)))+(((IkReal(-1.00000000000000))*(r00)*(x1400)*(x1403)))+(((IkReal(-1.00000000000000))*(x1397)*(x1398))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1410=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1410)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1410)))+(((cj11)*(r01)*(sj6)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1410)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1410)))+(((cj11)*(r01)*(sj6)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1411=IKsin(j10);
IkReal x1412=IKcos(j10);
IkReal x1413=((IkReal(1.00000000000000))*(cj9));
IkReal x1414=((IkReal(1.00000000000000))*(sj6));
IkReal x1415=((cj7)*(sj11));
IkReal x1416=((cj11)*(r01));
IkReal x1417=((IkReal(1.00000000000000))*(cj7));
IkReal x1418=((IkReal(1.00000000000000))*(cj6));
IkReal x1419=((cj11)*(r21));
IkReal x1420=((r10)*(sj11));
IkReal x1421=((sj6)*(sj7));
IkReal x1422=((cj11)*(r11));
IkReal x1423=((r00)*(sj11));
IkReal x1424=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1418)))+(((sj9)*(x1411))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1411)*(x1413))));
evalcond[2]=((((cj6)*(x1420)))+(((IkReal(-1.00000000000000))*(x1414)*(x1416)))+(((sj9)*(x1412)))+(((IkReal(-1.00000000000000))*(x1414)*(x1423)))+(((cj6)*(x1422))));
evalcond[3]=((x1412)+(((IkReal(-1.00000000000000))*(r22)*(x1417)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1414)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1418))));
evalcond[4]=((((x1420)*(x1421)))+(((x1423)*(x1424)))+(((IkReal(-1.00000000000000))*(x1411)))+(((x1421)*(x1422)))+(((x1416)*(x1424)))+(((cj7)*(x1419)))+(((r20)*(x1415))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1412)*(x1413)))+(((IkReal(-1.00000000000000))*(cj6)*(x1416)*(x1417)))+(((r20)*(sj11)*(sj7)))+(((sj7)*(x1419)))+(((IkReal(-1.00000000000000))*(r00)*(x1415)*(x1418)))+(((IkReal(-1.00000000000000))*(cj7)*(x1414)*(x1422)))+(((IkReal(-1.00000000000000))*(r10)*(x1414)*(x1415))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1425=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x1426=((cj9)*(sj8));
IkReal x1427=((cj6)*(r12));
IkReal x1428=((cj7)*(sj9));
IkReal x1429=((IkReal(1.00000000000000))*(r02)*(sj6));
if( IKabs(((x1425)*(((x1427)+(((IkReal(-1.00000000000000))*(x1429))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1425)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x1428)))+(((x1426)*(x1427)))+(((r12)*(sj6)*(x1428)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((IkReal(-1.00000000000000))*(x1426)*(x1429))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1425)*(((x1427)+(((IkReal(-1.00000000000000))*(x1429)))))))+IKsqr(((x1425)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x1428)))+(((x1426)*(x1427)))+(((r12)*(sj6)*(x1428)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((IkReal(-1.00000000000000))*(x1426)*(x1429)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((x1425)*(((x1427)+(((IkReal(-1.00000000000000))*(x1429)))))), ((x1425)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x1428)))+(((x1426)*(x1427)))+(((r12)*(sj6)*(x1428)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((IkReal(-1.00000000000000))*(x1426)*(x1429)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1430=IKsin(j10);
IkReal x1431=IKcos(j10);
IkReal x1432=((cj9)*(sj8));
IkReal x1433=((cj6)*(cj7));
IkReal x1434=((IkReal(1.00000000000000))*(cj7));
IkReal x1435=((IkReal(1.00000000000000))*(cj6));
IkReal x1436=((r20)*(sj11));
IkReal x1437=((cj11)*(r21));
IkReal x1438=((cj6)*(sj11));
IkReal x1439=((cj11)*(cj6));
IkReal x1440=((r12)*(sj6));
IkReal x1441=((IkReal(1.00000000000000))*(sj7));
IkReal x1442=((cj8)*(x1430));
IkReal x1443=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1444=((r10)*(sj11)*(sj6));
IkReal x1445=((cj11)*(r11)*(sj6));
IkReal x1446=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x1447=((IkReal(1.00000000000000))*(cj8)*(x1431));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x1430)))+(((IkReal(-1.00000000000000))*(r12)*(x1435))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1441)))+(((x1430)*(x1432)))+(((r02)*(x1433)))+(((cj7)*(x1440)))+(((IkReal(-1.00000000000000))*(x1447))));
evalcond[2]=((((r10)*(x1438)))+(((IkReal(-1.00000000000000))*(sj6)*(x1446)))+(((IkReal(-1.00000000000000))*(sj6)*(x1443)))+(((r11)*(x1439)))+(((sj9)*(x1431))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj8)*(x1431)))+(((IkReal(-1.00000000000000))*(r22)*(x1434)))+(((IkReal(-1.00000000000000))*(cj9)*(x1442)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1435)))+(((IkReal(-1.00000000000000))*(x1440)*(x1441))));
evalcond[4]=((((sj8)*(x1430)))+(((cj7)*(x1436)))+(((IkReal(-1.00000000000000))*(cj9)*(x1447)))+(((sj7)*(x1445)))+(((r00)*(sj7)*(x1438)))+(((r01)*(sj7)*(x1439)))+(((cj7)*(x1437)))+(((sj7)*(x1444))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1433)*(x1443)))+(((IkReal(-1.00000000000000))*(x1433)*(x1446)))+(((sj7)*(x1436)))+(((sj7)*(x1437)))+(((IkReal(-1.00000000000000))*(x1434)*(x1444)))+(x1442)+(((x1431)*(x1432)))+(((IkReal(-1.00000000000000))*(x1434)*(x1445))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1448=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1448)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1448)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst2)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1448)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1448)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1449=IKsin(j10);
IkReal x1450=IKcos(j10);
IkReal x1451=((cj9)*(sj8));
IkReal x1452=((cj6)*(cj7));
IkReal x1453=((IkReal(1.00000000000000))*(cj7));
IkReal x1454=((IkReal(1.00000000000000))*(cj6));
IkReal x1455=((r20)*(sj11));
IkReal x1456=((cj11)*(r21));
IkReal x1457=((cj6)*(sj11));
IkReal x1458=((cj11)*(cj6));
IkReal x1459=((r12)*(sj6));
IkReal x1460=((IkReal(1.00000000000000))*(sj7));
IkReal x1461=((cj8)*(x1449));
IkReal x1462=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1463=((r10)*(sj11)*(sj6));
IkReal x1464=((cj11)*(r11)*(sj6));
IkReal x1465=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x1466=((IkReal(1.00000000000000))*(cj8)*(x1450));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1454)))+(((sj9)*(x1449))));
evalcond[1]=((((cj7)*(x1459)))+(((IkReal(-1.00000000000000))*(x1466)))+(((IkReal(-1.00000000000000))*(r22)*(x1460)))+(((x1449)*(x1451)))+(((r02)*(x1452))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj6)*(x1465)))+(((r11)*(x1458)))+(((sj9)*(x1450)))+(((r10)*(x1457)))+(((IkReal(-1.00000000000000))*(sj6)*(x1462))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj8)*(x1450)))+(((IkReal(-1.00000000000000))*(cj9)*(x1461)))+(((IkReal(-1.00000000000000))*(x1459)*(x1460)))+(((IkReal(-1.00000000000000))*(r22)*(x1453)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1454))));
evalcond[4]=((((sj7)*(x1464)))+(((cj7)*(x1456)))+(((IkReal(-1.00000000000000))*(cj9)*(x1466)))+(((sj8)*(x1449)))+(((cj7)*(x1455)))+(((r01)*(sj7)*(x1458)))+(((sj7)*(x1463)))+(((r00)*(sj7)*(x1457))));
evalcond[5]=((x1461)+(((sj7)*(x1455)))+(((sj7)*(x1456)))+(((IkReal(-1.00000000000000))*(x1453)*(x1463)))+(((IkReal(-1.00000000000000))*(x1452)*(x1465)))+(((IkReal(-1.00000000000000))*(x1452)*(x1462)))+(((IkReal(-1.00000000000000))*(x1453)*(x1464)))+(((x1450)*(x1451))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1467=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst1)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1467)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1467)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst1)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1467)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1467)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1468=((IkReal(1.00000000000000))*(sj6));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r12)))+(((sj9)*(IKsin(j10)))));
evalcond[1]=((((cj11)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1468)))+(((cj6)*(r10)*(sj11)))+(((sj9)*(IKcos(j10))))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1468))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((cj10)*(cj10))+((((cj9)*(cj9))*((sj10)*(sj10))))));
dummyeval[0]=(((cj10)*(cj10))+((((cj9)*(cj9))*((sj10)*(sj10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1469=(cj9)*(cj9);
dummyeval[0]=((((sj10)*(x1469)))+(((IkReal(-1.00000000000000))*(sj10))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x1469))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1470=((IkReal(1.00000000000000))*(cj11));
IkReal x1471=((r01)*(sj6));
IkReal x1472=((cj6)*(sj7));
IkReal x1473=((r01)*(sj11));
IkReal x1474=((IkReal(1.00000000000000))*(cj6));
IkReal x1475=((IkReal(0.0620002000000000))*(sj11));
IkReal x1476=((cj11)*(r10));
IkReal x1477=((r11)*(sj11));
IkReal x1478=((sj6)*(sj7));
IkReal x1479=((r21)*(sj11));
IkReal x1480=((r00)*(sj6));
IkReal x1481=((cj7)*(sj6));
IkReal x1482=((cj6)*(r10));
IkReal x1483=((IkReal(1.00000000000000))*(sj11));
IkReal x1484=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1474))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj11)*(x1480)))+(((IkReal(-1.00000000000000))*(x1470)*(x1482)))+(((IkReal(-1.00000000000000))*(x1471)*(x1483)))+(((cj6)*(x1477))));
evalcond[3]=((((sj11)*(x1482)))+(((IkReal(-1.00000000000000))*(x1480)*(x1483)))+(((r11)*(x1484)))+(((IkReal(-1.00000000000000))*(x1470)*(x1471))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(0.0620002000000000))*(cj6)*(x1476)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1475)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1474)))+(((x1471)*(x1475)))+(((IkReal(-0.0620002000000000))*(cj11)*(x1480))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1470)*(x1472)))+(((cj7)*(x1479)))+(((IkReal(-1.00000000000000))*(r10)*(x1470)*(x1478)))+(((x1477)*(x1478)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1470)))+(((x1472)*(x1473))));
evalcond[6]=((((cj7)*(r00)*(x1484)))+(((x1476)*(x1481)))+(((sj7)*(x1479)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1470)))+(((IkReal(-1.00000000000000))*(cj7)*(x1473)*(x1474)))+(((IkReal(-1.00000000000000))*(x1477)*(x1481))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(((((IkReal(-1.00000000000000))*((sj10)*(sj10))))+(((IkReal(-1.00000000000000))*((cj10)*(cj10))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj10)*(sj10))))+(((IkReal(-1.00000000000000))*((cj10)*(cj10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1485=((sj10)*(sj7));
IkReal x1486=((cj11)*(r21));
IkReal x1487=((cj6)*(r02));
IkReal x1488=((cj7)*(sj10));
IkReal x1489=((r12)*(sj6));
IkReal x1490=((cj10)*(sj7));
IkReal x1491=((r20)*(sj11));
IkReal x1492=((IkReal(1.00000000000000))*(cj10)*(cj7));
IkReal x1493=((cj11)*(r11)*(sj6));
IkReal x1494=((r10)*(sj11)*(sj6));
IkReal x1495=((cj11)*(cj6)*(r01));
IkReal x1496=((cj6)*(r00)*(sj11));
if( IKabs(((gconst11)*(((((x1486)*(x1490)))+(((IkReal(-1.00000000000000))*(x1492)*(x1495)))+(((IkReal(-1.00000000000000))*(r22)*(x1485)))+(((IkReal(-1.00000000000000))*(x1492)*(x1494)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((x1490)*(x1491)))+(((IkReal(-1.00000000000000))*(x1492)*(x1493)))+(((x1488)*(x1489)))+(((x1487)*(x1488))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1488)*(x1494)))+(((IkReal(-1.00000000000000))*(x1489)*(x1492)))+(((r22)*(x1490)))+(((IkReal(-1.00000000000000))*(x1488)*(x1496)))+(((IkReal(-1.00000000000000))*(x1488)*(x1493)))+(((IkReal(-1.00000000000000))*(x1488)*(x1495)))+(((x1485)*(x1491)))+(((IkReal(-1.00000000000000))*(x1487)*(x1492)))+(((x1485)*(x1486))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst11)*(((((x1486)*(x1490)))+(((IkReal(-1.00000000000000))*(x1492)*(x1495)))+(((IkReal(-1.00000000000000))*(r22)*(x1485)))+(((IkReal(-1.00000000000000))*(x1492)*(x1494)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((x1490)*(x1491)))+(((IkReal(-1.00000000000000))*(x1492)*(x1493)))+(((x1488)*(x1489)))+(((x1487)*(x1488)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(x1488)*(x1494)))+(((IkReal(-1.00000000000000))*(x1489)*(x1492)))+(((r22)*(x1490)))+(((IkReal(-1.00000000000000))*(x1488)*(x1496)))+(((IkReal(-1.00000000000000))*(x1488)*(x1493)))+(((IkReal(-1.00000000000000))*(x1488)*(x1495)))+(((x1485)*(x1491)))+(((IkReal(-1.00000000000000))*(x1487)*(x1492)))+(((x1485)*(x1486)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1497=IKsin(j8);
IkReal x1498=IKcos(j8);
IkReal x1499=((cj7)*(sj11));
IkReal x1500=((IkReal(0.0620002000000000))*(r21));
IkReal x1501=((IkReal(1.00000000000000))*(sj6));
IkReal x1502=((cj6)*(sj7));
IkReal x1503=((IkReal(0.0620002000000000))*(cj11));
IkReal x1504=((IkReal(1.00000000000000))*(cj7));
IkReal x1505=((r20)*(sj7));
IkReal x1506=((cj11)*(cj7));
IkReal x1507=((sj11)*(sj7));
IkReal x1508=((r10)*(sj6));
IkReal x1509=((cj11)*(r01));
IkReal x1510=((cj6)*(cj7));
IkReal x1511=((cj7)*(sj6));
IkReal x1512=((r11)*(sj6));
IkReal x1513=((IkReal(1.00000000000000))*(sj7));
IkReal x1514=((IkReal(0.0620002000000000))*(r01));
IkReal x1515=((cj11)*(sj7));
IkReal x1516=((sj10)*(x1497));
IkReal x1517=((IkReal(1.00000000000000))*(x1498));
IkReal x1518=((cj10)*(x1497));
IkReal x1519=((cj10)*(x1517));
evalcond[0]=((((r12)*(x1511)))+(((IkReal(-1.00000000000000))*(x1519)))+(((IkReal(-1.00000000000000))*(r22)*(x1513)))+(((r02)*(x1510)))+(x1516));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1501)))+(((IkReal(-1.00000000000000))*(x1518)))+(((IkReal(-1.00000000000000))*(sj10)*(x1517)))+(((IkReal(-1.00000000000000))*(r22)*(x1504)))+(((IkReal(-1.00000000000000))*(r02)*(x1502))));
evalcond[2]=((((r20)*(x1499)))+(((r00)*(sj11)*(x1502)))+(((r21)*(x1506)))+(((x1502)*(x1509)))+(((x1507)*(x1508)))+(((IkReal(-1.00000000000000))*(x1519)))+(((x1512)*(x1515)))+(x1516));
evalcond[3]=((((r21)*(x1515)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1499)))+(((sj10)*(x1498)))+(((IkReal(-1.00000000000000))*(r10)*(x1499)*(x1501)))+(((IkReal(-1.00000000000000))*(r11)*(x1501)*(x1506)))+(((sj11)*(x1505)))+(((IkReal(-1.00000000000000))*(cj6)*(x1504)*(x1509)))+(x1518));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1503)*(x1510)))+(((py)*(x1511)))+(((IkReal(-0.0716559700000000))*(x1497)))+(((IkReal(-0.302000000000000))*(x1498)))+(((px)*(x1510)))+(((x1503)*(x1505)))+(((cj6)*(x1499)*(x1514)))+(((IkReal(0.0620002000000000))*(x1499)*(x1512)))+(((IkReal(-1.00000000000000))*(pz)*(x1513)))+(((IkReal(-1.00000000000000))*(x1500)*(x1507)))+(((IkReal(-1.00000000000000))*(cj7)*(x1503)*(x1508))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(x1502)))+(((IkReal(-1.00000000000000))*(x1499)*(x1500)))+(((IkReal(-0.302000000000000))*(x1497)))+(((r00)*(x1502)*(x1503)))+(((sj7)*(x1503)*(x1508)))+(((IkReal(-0.0620002000000000))*(x1507)*(x1512)))+(((IkReal(-1.00000000000000))*(pz)*(x1504)))+(((IkReal(0.0716559700000000))*(x1498)))+(((IkReal(-1.00000000000000))*(sj11)*(x1502)*(x1514)))+(((cj7)*(r20)*(x1503)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1501))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1520=((cj10)*(cj7));
IkReal x1521=((IkReal(1.00000000000000))*(r22));
IkReal x1522=((r12)*(sj6));
IkReal x1523=((IkReal(1.00000000000000))*(sj10));
IkReal x1524=((cj6)*(r02));
IkReal x1525=((cj10)*(sj7));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(x1524)*(x1525)))+(((IkReal(-1.00000000000000))*(x1522)*(x1525)))+(((IkReal(-1.00000000000000))*(cj7)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(x1520)*(x1521)))+(((r22)*(sj10)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x1520)*(x1522)))+(((IkReal(-1.00000000000000))*(sj7)*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(sj7)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(cj7)*(sj10)*(x1521)))+(((x1520)*(x1524)))+(((IkReal(-1.00000000000000))*(x1521)*(x1525))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(x1524)*(x1525)))+(((IkReal(-1.00000000000000))*(x1522)*(x1525)))+(((IkReal(-1.00000000000000))*(cj7)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(x1520)*(x1521)))+(((r22)*(sj10)*(sj7)))))), ((gconst10)*(((((x1520)*(x1522)))+(((IkReal(-1.00000000000000))*(sj7)*(x1522)*(x1523)))+(((IkReal(-1.00000000000000))*(sj7)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(cj7)*(sj10)*(x1521)))+(((x1520)*(x1524)))+(((IkReal(-1.00000000000000))*(x1521)*(x1525)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1526=IKsin(j8);
IkReal x1527=IKcos(j8);
IkReal x1528=((cj7)*(sj11));
IkReal x1529=((IkReal(0.0620002000000000))*(r21));
IkReal x1530=((IkReal(1.00000000000000))*(sj6));
IkReal x1531=((cj6)*(sj7));
IkReal x1532=((IkReal(0.0620002000000000))*(cj11));
IkReal x1533=((IkReal(1.00000000000000))*(cj7));
IkReal x1534=((r20)*(sj7));
IkReal x1535=((cj11)*(cj7));
IkReal x1536=((sj11)*(sj7));
IkReal x1537=((r10)*(sj6));
IkReal x1538=((cj11)*(r01));
IkReal x1539=((cj6)*(cj7));
IkReal x1540=((cj7)*(sj6));
IkReal x1541=((r11)*(sj6));
IkReal x1542=((IkReal(1.00000000000000))*(sj7));
IkReal x1543=((IkReal(0.0620002000000000))*(r01));
IkReal x1544=((cj11)*(sj7));
IkReal x1545=((sj10)*(x1526));
IkReal x1546=((IkReal(1.00000000000000))*(x1527));
IkReal x1547=((cj10)*(x1526));
IkReal x1548=((cj10)*(x1546));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1548)))+(((r02)*(x1539)))+(x1545)+(((r12)*(x1540)))+(((IkReal(-1.00000000000000))*(r22)*(x1542))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x1531)))+(((IkReal(-1.00000000000000))*(x1547)))+(((IkReal(-1.00000000000000))*(r22)*(x1533)))+(((IkReal(-1.00000000000000))*(sj10)*(x1546)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1530))));
evalcond[2]=((((r00)*(sj11)*(x1531)))+(((IkReal(-1.00000000000000))*(x1548)))+(((x1531)*(x1538)))+(x1545)+(((r21)*(x1535)))+(((x1536)*(x1537)))+(((r20)*(x1528)))+(((x1541)*(x1544))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1528)*(x1530)))+(((sj10)*(x1527)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1528)))+(((IkReal(-1.00000000000000))*(r11)*(x1530)*(x1535)))+(((sj11)*(x1534)))+(x1547)+(((IkReal(-1.00000000000000))*(cj6)*(x1533)*(x1538)))+(((r21)*(x1544))));
evalcond[4]=((((IkReal(-1.00000000000000))*(pz)*(x1542)))+(((IkReal(-1.00000000000000))*(x1529)*(x1536)))+(((cj6)*(x1528)*(x1543)))+(((px)*(x1539)))+(((py)*(x1540)))+(((x1532)*(x1534)))+(((IkReal(-0.302000000000000))*(x1527)))+(((IkReal(-1.00000000000000))*(r00)*(x1532)*(x1539)))+(((IkReal(-1.00000000000000))*(cj7)*(x1532)*(x1537)))+(((IkReal(-0.0716559700000000))*(x1526)))+(((IkReal(0.0620002000000000))*(x1528)*(x1541))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1530)))+(((IkReal(-1.00000000000000))*(sj11)*(x1531)*(x1543)))+(((IkReal(-1.00000000000000))*(x1528)*(x1529)))+(((sj7)*(x1532)*(x1537)))+(((IkReal(0.0716559700000000))*(x1527)))+(((IkReal(-1.00000000000000))*(pz)*(x1533)))+(((IkReal(-1.00000000000000))*(px)*(x1531)))+(((r00)*(x1531)*(x1532)))+(((IkReal(-0.0620002000000000))*(x1536)*(x1541)))+(((cj7)*(r20)*(x1532)))+(((IkReal(-0.302000000000000))*(x1526))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1549=((IkReal(1.00000000000000))*(cj11));
IkReal x1550=((r01)*(sj6));
IkReal x1551=((cj6)*(sj7));
IkReal x1552=((r01)*(sj11));
IkReal x1553=((IkReal(1.00000000000000))*(cj6));
IkReal x1554=((IkReal(0.0620002000000000))*(sj11));
IkReal x1555=((cj11)*(r10));
IkReal x1556=((r11)*(sj11));
IkReal x1557=((sj6)*(sj7));
IkReal x1558=((r21)*(sj11));
IkReal x1559=((r00)*(sj6));
IkReal x1560=((cj7)*(sj6));
IkReal x1561=((cj6)*(r10));
IkReal x1562=((IkReal(1.00000000000000))*(sj11));
IkReal x1563=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1553))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj6)*(x1556)))+(((IkReal(-1.00000000000000))*(x1550)*(x1562)))+(((IkReal(-1.00000000000000))*(x1549)*(x1561)))+(((cj11)*(x1559))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1559)*(x1562)))+(((sj11)*(x1561)))+(((r11)*(x1563)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1554)))+(((IkReal(-1.00000000000000))*(py)*(x1553)))+(((px)*(sj6)))+(((IkReal(-0.0620002000000000))*(cj11)*(x1559)))+(((IkReal(0.0620002000000000))*(cj6)*(x1555)))+(((x1550)*(x1554))));
evalcond[5]=((((cj7)*(x1558)))+(((x1551)*(x1552)))+(((IkReal(-1.00000000000000))*(r00)*(x1549)*(x1551)))+(((x1556)*(x1557)))+(((IkReal(-1.00000000000000))*(r10)*(x1549)*(x1557)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1549))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1552)*(x1553)))+(((cj7)*(r00)*(x1563)))+(((IkReal(-1.00000000000000))*(x1556)*(x1560)))+(((x1555)*(x1560)))+(((sj7)*(x1558)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1549))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1564=((r20)*(sj11));
IkReal x1565=((r10)*(sj6));
IkReal x1566=((IkReal(1.00000000000000))*(sj11));
IkReal x1567=((sj10)*(sj7));
IkReal x1568=((IkReal(1.00000000000000))*(cj11));
IkReal x1569=((r11)*(sj6));
IkReal x1570=((r12)*(sj6));
IkReal x1571=((cj7)*(sj10));
IkReal x1572=((cj10)*(sj7));
IkReal x1573=((IkReal(1.00000000000000))*(cj10)*(cj7));
IkReal x1574=((cj6)*(x1567));
IkReal x1575=((r01)*(x1568));
IkReal x1576=((cj6)*(x1572));
IkReal x1577=((x1566)*(x1572));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(x1567)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(r02)*(x1576)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((IkReal(-1.00000000000000))*(r21)*(x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(r00)*(x1566)*(x1574)))+(((IkReal(-1.00000000000000))*(x1570)*(x1572)))+(((IkReal(-1.00000000000000))*(x1565)*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(r22)*(x1573))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1573)))+(((r22)*(x1571)))+(((r02)*(x1574)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)*(x1572)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(r00)*(x1566)*(x1576)))+(((IkReal(-1.00000000000000))*(cj10)*(cj7)*(r21)*(x1568)))+(((IkReal(-1.00000000000000))*(x1565)*(x1577))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(x1567)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(r02)*(x1576)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((IkReal(-1.00000000000000))*(r21)*(x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(r00)*(x1566)*(x1574)))+(((IkReal(-1.00000000000000))*(x1570)*(x1572)))+(((IkReal(-1.00000000000000))*(x1565)*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(r22)*(x1573)))))), ((gconst13)*(((((x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(x1564)*(x1573)))+(((r22)*(x1571)))+(((r02)*(x1574)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)*(x1572)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(r00)*(x1566)*(x1576)))+(((IkReal(-1.00000000000000))*(cj10)*(cj7)*(r21)*(x1568)))+(((IkReal(-1.00000000000000))*(x1565)*(x1577)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1578=IKcos(j8);
IkReal x1579=IKsin(j8);
IkReal x1580=((cj7)*(sj11));
IkReal x1581=((IkReal(0.0620002000000000))*(r21));
IkReal x1582=((IkReal(1.00000000000000))*(sj6));
IkReal x1583=((cj6)*(sj7));
IkReal x1584=((IkReal(0.0620002000000000))*(cj11));
IkReal x1585=((IkReal(1.00000000000000))*(cj7));
IkReal x1586=((r20)*(sj7));
IkReal x1587=((cj11)*(cj7));
IkReal x1588=((sj11)*(sj7));
IkReal x1589=((r10)*(sj6));
IkReal x1590=((cj11)*(r01));
IkReal x1591=((cj6)*(cj7));
IkReal x1592=((cj7)*(sj6));
IkReal x1593=((IkReal(1.00000000000000))*(cj10));
IkReal x1594=((IkReal(1.00000000000000))*(sj7));
IkReal x1595=((IkReal(0.0620002000000000))*(r01));
IkReal x1596=((r11)*(sj6));
IkReal x1597=((cj11)*(sj7));
IkReal x1598=((sj10)*(x1578));
IkReal x1599=((sj10)*(x1579));
IkReal x1600=((x1579)*(x1593));
evalcond[0]=((((r02)*(x1591)))+(((IkReal(-1.00000000000000))*(x1599)))+(((IkReal(-1.00000000000000))*(r22)*(x1594)))+(((IkReal(-1.00000000000000))*(x1578)*(x1593)))+(((r12)*(x1592))));
evalcond[1]=((x1598)+(((IkReal(-1.00000000000000))*(r22)*(x1585)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1582)))+(((IkReal(-1.00000000000000))*(r02)*(x1583)))+(((IkReal(-1.00000000000000))*(x1600))));
evalcond[2]=((x1599)+(((r00)*(sj11)*(x1583)))+(((r21)*(x1587)))+(((cj10)*(x1578)))+(((r20)*(x1580)))+(((x1596)*(x1597)))+(((x1583)*(x1590)))+(((x1588)*(x1589))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1582)*(x1587)))+(x1598)+(((IkReal(-1.00000000000000))*(cj6)*(x1585)*(x1590)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1580)))+(((sj11)*(x1586)))+(((IkReal(-1.00000000000000))*(r10)*(x1580)*(x1582)))+(((r21)*(x1597)))+(((IkReal(-1.00000000000000))*(x1600))));
evalcond[4]=((((IkReal(-0.302000000000000))*(x1578)))+(((cj6)*(x1580)*(x1595)))+(((IkReal(-1.00000000000000))*(r00)*(x1584)*(x1591)))+(((IkReal(-0.0686246300000000))*(x1579)))+(((IkReal(-1.00000000000000))*(pz)*(x1594)))+(((px)*(x1591)))+(((IkReal(0.0620002000000000))*(x1580)*(x1596)))+(((IkReal(-1.00000000000000))*(x1581)*(x1588)))+(((py)*(x1592)))+(((IkReal(-1.00000000000000))*(cj7)*(x1584)*(x1589)))+(((x1584)*(x1586))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(sj11)*(x1583)*(x1595)))+(((IkReal(-1.00000000000000))*(pz)*(x1585)))+(((IkReal(-0.302000000000000))*(x1579)))+(((IkReal(-0.0620002000000000))*(x1588)*(x1596)))+(((IkReal(0.0686246300000000))*(x1578)))+(((IkReal(-1.00000000000000))*(x1580)*(x1581)))+(((IkReal(-1.00000000000000))*(px)*(x1583)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1582)))+(((cj7)*(r20)*(x1584)))+(((sj7)*(x1584)*(x1589)))+(((r00)*(x1583)*(x1584))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1601=((IkReal(1.00000000000000))*(r22));
IkReal x1602=((sj10)*(sj7));
IkReal x1603=((cj10)*(cj7));
IkReal x1604=((cj6)*(r02));
IkReal x1605=((r12)*(sj6));
IkReal x1606=((cj7)*(sj10));
IkReal x1607=((cj10)*(sj7));
if( IKabs(((gconst12)*(((((x1604)*(x1606)))+(((IkReal(-1.00000000000000))*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1605)*(x1607)))+(((IkReal(-1.00000000000000))*(x1601)*(x1603)))+(((x1605)*(x1606)))+(((IkReal(-1.00000000000000))*(x1604)*(x1607))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x1601)*(x1607)))+(((r22)*(x1606)))+(((x1602)*(x1605)))+(((x1603)*(x1605)))+(((x1602)*(x1604)))+(((x1603)*(x1604))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst12)*(((((x1604)*(x1606)))+(((IkReal(-1.00000000000000))*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1605)*(x1607)))+(((IkReal(-1.00000000000000))*(x1601)*(x1603)))+(((x1605)*(x1606)))+(((IkReal(-1.00000000000000))*(x1604)*(x1607)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x1601)*(x1607)))+(((r22)*(x1606)))+(((x1602)*(x1605)))+(((x1603)*(x1605)))+(((x1602)*(x1604)))+(((x1603)*(x1604)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1608=IKcos(j8);
IkReal x1609=IKsin(j8);
IkReal x1610=((cj7)*(sj11));
IkReal x1611=((IkReal(0.0620002000000000))*(r21));
IkReal x1612=((IkReal(1.00000000000000))*(sj6));
IkReal x1613=((cj6)*(sj7));
IkReal x1614=((IkReal(0.0620002000000000))*(cj11));
IkReal x1615=((IkReal(1.00000000000000))*(cj7));
IkReal x1616=((r20)*(sj7));
IkReal x1617=((cj11)*(cj7));
IkReal x1618=((sj11)*(sj7));
IkReal x1619=((r10)*(sj6));
IkReal x1620=((cj11)*(r01));
IkReal x1621=((cj6)*(cj7));
IkReal x1622=((cj7)*(sj6));
IkReal x1623=((IkReal(1.00000000000000))*(cj10));
IkReal x1624=((IkReal(1.00000000000000))*(sj7));
IkReal x1625=((IkReal(0.0620002000000000))*(r01));
IkReal x1626=((r11)*(sj6));
IkReal x1627=((cj11)*(sj7));
IkReal x1628=((sj10)*(x1608));
IkReal x1629=((sj10)*(x1609));
IkReal x1630=((x1609)*(x1623));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1629)))+(((r02)*(x1621)))+(((IkReal(-1.00000000000000))*(x1608)*(x1623)))+(((IkReal(-1.00000000000000))*(r22)*(x1624)))+(((r12)*(x1622))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1630)))+(((IkReal(-1.00000000000000))*(r22)*(x1615)))+(x1628)+(((IkReal(-1.00000000000000))*(r02)*(x1613)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1612))));
evalcond[2]=((((x1613)*(x1620)))+(((cj10)*(x1608)))+(x1629)+(((r20)*(x1610)))+(((r21)*(x1617)))+(((x1618)*(x1619)))+(((r00)*(sj11)*(x1613)))+(((x1626)*(x1627))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1630)))+(((IkReal(-1.00000000000000))*(cj6)*(x1615)*(x1620)))+(x1628)+(((IkReal(-1.00000000000000))*(r11)*(x1612)*(x1617)))+(((r21)*(x1627)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1610)))+(((IkReal(-1.00000000000000))*(r10)*(x1610)*(x1612)))+(((sj11)*(x1616))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1611)*(x1618)))+(((x1614)*(x1616)))+(((IkReal(-1.00000000000000))*(pz)*(x1624)))+(((IkReal(-1.00000000000000))*(cj7)*(x1614)*(x1619)))+(((IkReal(0.0620002000000000))*(x1610)*(x1626)))+(((IkReal(-0.302000000000000))*(x1608)))+(((IkReal(-0.0686246300000000))*(x1609)))+(((IkReal(-1.00000000000000))*(r00)*(x1614)*(x1621)))+(((px)*(x1621)))+(((py)*(x1622)))+(((cj6)*(x1610)*(x1625))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(sj11)*(x1613)*(x1625)))+(((cj7)*(r20)*(x1614)))+(((r00)*(x1613)*(x1614)))+(((IkReal(-0.302000000000000))*(x1609)))+(((IkReal(0.0686246300000000))*(x1608)))+(((IkReal(-0.0620002000000000))*(x1618)*(x1626)))+(((IkReal(-1.00000000000000))*(px)*(x1613)))+(((sj7)*(x1614)*(x1619)))+(((IkReal(-1.00000000000000))*(pz)*(x1615)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1612)))+(((IkReal(-1.00000000000000))*(x1610)*(x1611))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1631=((cj6)*(r10));
IkReal x1632=((IkReal(1.00000000000000))*(cj6));
IkReal x1633=((cj6)*(r11));
IkReal x1634=((r01)*(sj6));
IkReal x1635=((IkReal(0.0620002000000000))*(sj11));
IkReal x1636=((IkReal(0.0620002000000000))*(cj11));
IkReal x1637=((IkReal(1.00000000000000))*(cj11));
IkReal x1638=((r00)*(sj6));
IkReal x1639=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(sj9)+(((IkReal(-1.00000000000000))*(r12)*(x1632))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1631)*(x1637)))+(((IkReal(-1.00000000000000))*(x1634)*(x1639)))+(((sj11)*(x1633)))+(((cj11)*(x1638)))+(cj9));
evalcond[3]=((((sj11)*(x1631)))+(((IkReal(-1.00000000000000))*(x1638)*(x1639)))+(((IkReal(-1.00000000000000))*(x1634)*(x1637)))+(((cj11)*(x1633))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((x1634)*(x1635)))+(((IkReal(-1.00000000000000))*(x1633)*(x1635)))+(((IkReal(-1.00000000000000))*(x1636)*(x1638)))+(((x1631)*(x1636)))+(((IkReal(-1.00000000000000))*(py)*(x1632))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(cj9);
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1640=((r01)*(sj6));
IkReal x1641=((IkReal(1.00000000000000))*(cj11));
IkReal x1642=((IkReal(1.00000000000000))*(r22));
IkReal x1643=((IkReal(1.00000000000000))*(cj6));
IkReal x1644=((IkReal(0.0620002000000000))*(sj11));
IkReal x1645=((cj6)*(r10));
IkReal x1646=((IkReal(0.0620002000000000))*(cj11));
IkReal x1647=((r00)*(sj6));
IkReal x1648=((cj6)*(r11));
IkReal x1649=((IkReal(1.00000000000000))*(sj11));
IkReal x1650=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1643))));
evalcond[2]=((((cj11)*(x1647)))+(((IkReal(-1.00000000000000))*(x1640)*(x1649)))+(((sj11)*(x1648)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645))));
evalcond[3]=((((cj7)*(x1650)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(sj7)*(x1642))));
evalcond[4]=((((cj11)*(x1648)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(x1647)*(x1649)))+(((sj11)*(x1645))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1650)))+(((IkReal(-1.00000000000000))*(cj7)*(x1642)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1643))));
evalcond[6]=((IkReal(-0.0116089700000000))+(((x1640)*(x1644)))+(((IkReal(-1.00000000000000))*(py)*(x1643)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1646)*(x1647)))+(((x1645)*(x1646)))+(((IkReal(-1.00000000000000))*(x1644)*(x1648))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1651=((cj7)*(sj11));
IkReal x1652=((r10)*(sj6));
IkReal x1653=((cj6)*(r00));
IkReal x1654=((IkReal(1.00000000000000))*(sj7));
IkReal x1655=((cj11)*(r21));
IkReal x1656=((cj11)*(cj6)*(r01));
IkReal x1657=((cj11)*(r11)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(sj11)*(x1653)*(x1654)))+(((IkReal(-1.00000000000000))*(x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(sj11)*(x1652)*(x1654)))+(((IkReal(-1.00000000000000))*(cj7)*(x1655)))+(((IkReal(-1.00000000000000))*(x1654)*(x1657)))+(((IkReal(-1.00000000000000))*(r20)*(x1651))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1651)*(x1652)))+(((cj7)*(x1656)))+(((cj7)*(x1657)))+(((IkReal(-1.00000000000000))*(x1654)*(x1655)))+(((x1651)*(x1653)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1654))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj11)*(x1653)*(x1654)))+(((IkReal(-1.00000000000000))*(x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(sj11)*(x1652)*(x1654)))+(((IkReal(-1.00000000000000))*(cj7)*(x1655)))+(((IkReal(-1.00000000000000))*(x1654)*(x1657)))+(((IkReal(-1.00000000000000))*(r20)*(x1651)))))+IKsqr(((((x1651)*(x1652)))+(((cj7)*(x1656)))+(((cj7)*(x1657)))+(((IkReal(-1.00000000000000))*(x1654)*(x1655)))+(((x1651)*(x1653)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1654)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj11)*(x1653)*(x1654)))+(((IkReal(-1.00000000000000))*(x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(sj11)*(x1652)*(x1654)))+(((IkReal(-1.00000000000000))*(cj7)*(x1655)))+(((IkReal(-1.00000000000000))*(x1654)*(x1657)))+(((IkReal(-1.00000000000000))*(r20)*(x1651)))), ((((x1651)*(x1652)))+(((cj7)*(x1656)))+(((cj7)*(x1657)))+(((IkReal(-1.00000000000000))*(x1654)*(x1655)))+(((x1651)*(x1653)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1654)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1658=IKsin(j8);
IkReal x1659=IKcos(j8);
IkReal x1660=((cj7)*(sj11));
IkReal x1661=((IkReal(0.0620002000000000))*(r21));
IkReal x1662=((r10)*(sj6));
IkReal x1663=((cj11)*(sj7));
IkReal x1664=((cj6)*(r00));
IkReal x1665=((IkReal(1.00000000000000))*(r20));
IkReal x1666=((sj11)*(sj7));
IkReal x1667=((cj6)*(r01));
IkReal x1668=((IkReal(0.0620002000000000))*(r20));
IkReal x1669=((cj11)*(cj7));
IkReal x1670=((IkReal(1.00000000000000))*(pz));
IkReal x1671=((py)*(sj6));
IkReal x1672=((r11)*(sj6));
IkReal x1673=((IkReal(1.00000000000000))*(sj7));
IkReal x1674=((cj6)*(px));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((x1666)*(x1667)))+(((x1666)*(x1672)))+(((IkReal(-1.00000000000000))*(x1665)*(x1669)))+(((r21)*(x1660)))+(((IkReal(-1.00000000000000))*(x1662)*(x1663)))+(x1659));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1660)*(x1672)))+(((x1662)*(x1669)))+(((r21)*(x1666)))+(((IkReal(-1.00000000000000))*(x1658)))+(((x1664)*(x1669)))+(((IkReal(-1.00000000000000))*(x1660)*(x1667)))+(((IkReal(-1.00000000000000))*(x1663)*(x1665))));
evalcond[2]=((((r20)*(x1660)))+(((x1663)*(x1672)))+(((x1664)*(x1666)))+(((x1663)*(x1667)))+(((r21)*(x1669)))+(((x1662)*(x1666)))+(x1658));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1660)*(x1662)))+(((IkReal(-1.00000000000000))*(x1669)*(x1672)))+(((IkReal(-1.00000000000000))*(x1667)*(x1669)))+(((r20)*(x1666)))+(((IkReal(-1.00000000000000))*(x1660)*(x1664)))+(((r21)*(x1663)))+(x1659));
evalcond[4]=((((cj7)*(x1674)))+(((IkReal(-1.00000000000000))*(sj7)*(x1670)))+(((IkReal(-0.0620002000000000))*(x1664)*(x1669)))+(((IkReal(-0.00845530000000000))*(x1658)))+(((IkReal(0.0620002000000000))*(x1660)*(x1672)))+(((IkReal(0.0620002000000000))*(x1660)*(x1667)))+(((IkReal(-0.0620002000000000))*(x1662)*(x1669)))+(((x1663)*(x1668)))+(((IkReal(-0.302000000000000))*(x1659)))+(((cj7)*(x1671)))+(((IkReal(-1.00000000000000))*(x1661)*(x1666))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1660)*(x1661)))+(((IkReal(-1.00000000000000))*(x1671)*(x1673)))+(((IkReal(0.0620002000000000))*(x1663)*(x1664)))+(((IkReal(-1.00000000000000))*(cj7)*(x1670)))+(((IkReal(-0.302000000000000))*(x1658)))+(((IkReal(-0.0620002000000000))*(x1666)*(x1667)))+(((IkReal(-0.0620002000000000))*(x1666)*(x1672)))+(((x1668)*(x1669)))+(((IkReal(0.0620002000000000))*(x1662)*(x1663)))+(((IkReal(0.00845530000000000))*(x1659)))+(((IkReal(-1.00000000000000))*(x1673)*(x1674))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1675=((r01)*(sj6));
IkReal x1676=((IkReal(1.00000000000000))*(cj11));
IkReal x1677=((IkReal(1.00000000000000))*(r22));
IkReal x1678=((IkReal(1.00000000000000))*(cj6));
IkReal x1679=((IkReal(0.0620002000000000))*(sj11));
IkReal x1680=((cj6)*(r10));
IkReal x1681=((IkReal(0.0620002000000000))*(cj11));
IkReal x1682=((r00)*(sj6));
IkReal x1683=((cj6)*(r11));
IkReal x1684=((IkReal(1.00000000000000))*(sj11));
IkReal x1685=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1678))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1675)*(x1684)))+(((IkReal(-1.00000000000000))*(x1676)*(x1680)))+(((cj11)*(x1682)))+(((sj11)*(x1683))));
evalcond[3]=((((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(sj7)*(x1677)))+(((cj7)*(x1685))));
evalcond[4]=((((cj11)*(x1683)))+(((IkReal(-1.00000000000000))*(x1675)*(x1676)))+(((sj11)*(x1680)))+(((IkReal(-1.00000000000000))*(x1682)*(x1684))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1678)))+(((IkReal(-1.00000000000000))*(cj7)*(x1677)))+(((IkReal(-1.00000000000000))*(sj7)*(x1685))));
evalcond[6]=((IkReal(-0.00857763000000000))+(((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((IkReal(-1.00000000000000))*(x1679)*(x1683)))+(((px)*(sj6)))+(((x1675)*(x1679)))+(((IkReal(-1.00000000000000))*(py)*(x1678)))+(((x1680)*(x1681))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1686=((cj7)*(sj11));
IkReal x1687=((r10)*(sj6));
IkReal x1688=((cj6)*(r00));
IkReal x1689=((IkReal(1.00000000000000))*(sj7));
IkReal x1690=((cj11)*(r21));
IkReal x1691=((cj11)*(cj6)*(r01));
IkReal x1692=((cj11)*(r11)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(sj11)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(cj7)*(x1690)))+(((IkReal(-1.00000000000000))*(r20)*(x1686))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1686)*(x1687)))+(((cj7)*(x1691)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690)))+(((x1686)*(x1688)))+(((cj7)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1689))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj11)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(cj7)*(x1690)))+(((IkReal(-1.00000000000000))*(r20)*(x1686)))))+IKsqr(((((x1686)*(x1687)))+(((cj7)*(x1691)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690)))+(((x1686)*(x1688)))+(((cj7)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1689)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj11)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(cj7)*(x1690)))+(((IkReal(-1.00000000000000))*(r20)*(x1686)))), ((((x1686)*(x1687)))+(((cj7)*(x1691)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690)))+(((x1686)*(x1688)))+(((cj7)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1689)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1693=IKsin(j8);
IkReal x1694=IKcos(j8);
IkReal x1695=((cj7)*(sj11));
IkReal x1696=((IkReal(0.0620002000000000))*(r21));
IkReal x1697=((r10)*(sj6));
IkReal x1698=((cj11)*(sj7));
IkReal x1699=((cj6)*(r00));
IkReal x1700=((IkReal(1.00000000000000))*(r20));
IkReal x1701=((sj11)*(sj7));
IkReal x1702=((cj6)*(r01));
IkReal x1703=((IkReal(0.0620002000000000))*(r20));
IkReal x1704=((cj11)*(cj7));
IkReal x1705=((IkReal(1.00000000000000))*(pz));
IkReal x1706=((py)*(sj6));
IkReal x1707=((r11)*(sj6));
IkReal x1708=((IkReal(1.00000000000000))*(sj7));
IkReal x1709=((cj6)*(px));
evalcond[0]=((((x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1700)*(x1704)))+(((IkReal(-1.00000000000000))*(x1694)))+(((IkReal(-1.00000000000000))*(x1697)*(x1698)))+(((r21)*(x1695)))+(((IkReal(-1.00000000000000))*(x1698)*(x1699)))+(((x1701)*(x1707))));
evalcond[1]=((((x1697)*(x1704)))+(((r21)*(x1701)))+(((x1699)*(x1704)))+(((IkReal(-1.00000000000000))*(x1695)*(x1702)))+(((IkReal(-1.00000000000000))*(x1698)*(x1700)))+(x1693)+(((IkReal(-1.00000000000000))*(x1695)*(x1707))));
evalcond[2]=((((x1699)*(x1701)))+(((r20)*(x1695)))+(((x1697)*(x1701)))+(((x1698)*(x1702)))+(((r21)*(x1704)))+(x1693)+(((x1698)*(x1707))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1695)*(x1699)))+(((IkReal(-1.00000000000000))*(x1702)*(x1704)))+(((r21)*(x1698)))+(((IkReal(-1.00000000000000))*(x1704)*(x1707)))+(((r20)*(x1701)))+(((IkReal(-1.00000000000000))*(x1695)*(x1697)))+(x1694));
evalcond[4]=((((IkReal(-0.302000000000000))*(x1694)))+(((cj7)*(x1706)))+(((x1698)*(x1703)))+(((IkReal(0.0620002000000000))*(x1695)*(x1702)))+(((IkReal(-0.0620002000000000))*(x1699)*(x1704)))+(((IkReal(-0.0620002000000000))*(x1697)*(x1704)))+(((IkReal(-1.00000000000000))*(sj7)*(x1705)))+(((IkReal(-1.00000000000000))*(x1696)*(x1701)))+(((IkReal(-0.131825300000000))*(x1693)))+(((IkReal(0.0620002000000000))*(x1695)*(x1707)))+(((cj7)*(x1709))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-0.0620002000000000))*(x1701)*(x1702)))+(((IkReal(-0.302000000000000))*(x1693)))+(((IkReal(-1.00000000000000))*(cj7)*(x1705)))+(((x1703)*(x1704)))+(((IkReal(-1.00000000000000))*(x1706)*(x1708)))+(((IkReal(-1.00000000000000))*(x1695)*(x1696)))+(((IkReal(-1.00000000000000))*(x1708)*(x1709)))+(((IkReal(-0.0620002000000000))*(x1701)*(x1707)))+(((IkReal(0.0620002000000000))*(x1698)*(x1699)))+(((IkReal(0.131825300000000))*(x1694)))+(((IkReal(0.0620002000000000))*(x1697)*(x1698))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1710=((IkReal(1.00000000000000))*(cj7));
IkReal x1711=((IkReal(1.00000000000000))*(cj6)*(sj7));
IkReal x1712=((IkReal(1.00000000000000))*(sj6)*(sj7));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1710)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1711)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1711)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1710))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1710)))+(((IkReal(-1.00000000000000))*(r12)*(x1712)))+(((IkReal(-1.00000000000000))*(r02)*(x1711))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1710)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1711)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1711)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1710)))))+IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1710)))+(((IkReal(-1.00000000000000))*(r12)*(x1712)))+(((IkReal(-1.00000000000000))*(r02)*(x1711)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1710)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1712)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1711)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1711)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1710)))), ((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1710)))+(((IkReal(-1.00000000000000))*(r12)*(x1712)))+(((IkReal(-1.00000000000000))*(r02)*(x1711)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1713=IKcos(j8);
IkReal x1714=IKsin(j8);
IkReal x1715=((cj7)*(sj11));
IkReal x1716=((IkReal(0.0620002000000000))*(r21));
IkReal x1717=((r10)*(sj6));
IkReal x1718=((cj11)*(sj7));
IkReal x1719=((cj6)*(r00));
IkReal x1720=((IkReal(1.00000000000000))*(r20));
IkReal x1721=((sj11)*(sj7));
IkReal x1722=((cj6)*(r01));
IkReal x1723=((IkReal(1.00000000000000))*(cj7));
IkReal x1724=((IkReal(0.0620002000000000))*(r20));
IkReal x1725=((cj11)*(cj7));
IkReal x1726=((IkReal(1.00000000000000))*(sj7));
IkReal x1727=((cj6)*(r02));
IkReal x1728=((py)*(sj6));
IkReal x1729=((r11)*(sj6));
IkReal x1730=((cj6)*(px));
IkReal x1731=((r12)*(sj6));
IkReal x1732=((cj9)*(x1714));
IkReal x1733=((sj9)*(x1713));
IkReal x1734=((cj9)*(x1713));
IkReal x1735=((sj9)*(x1714));
evalcond[0]=((((cj7)*(x1731)))+(((cj7)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(x1726)))+(x1732));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(x1723)))+(((IkReal(-1.00000000000000))*(x1734)))+(((IkReal(-1.00000000000000))*(x1726)*(x1731))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1720)*(x1725)))+(((x1721)*(x1729)))+(((IkReal(-1.00000000000000))*(x1717)*(x1718)))+(((x1721)*(x1722)))+(((r21)*(x1715)))+(x1733)+(((IkReal(-1.00000000000000))*(x1718)*(x1719))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1715)*(x1722)))+(((IkReal(-1.00000000000000))*(x1715)*(x1729)))+(((x1719)*(x1725)))+(((IkReal(-1.00000000000000))*(x1735)))+(((IkReal(-1.00000000000000))*(x1718)*(x1720)))+(((r21)*(x1721)))+(((x1717)*(x1725))));
evalcond[4]=((((x1718)*(x1729)))+(((x1718)*(x1722)))+(x1714)+(((x1717)*(x1721)))+(((r20)*(x1715)))+(((r21)*(x1725)))+(((x1719)*(x1721))));
evalcond[5]=((((r21)*(x1718)))+(x1713)+(((IkReal(-1.00000000000000))*(x1715)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1717)))+(((IkReal(-1.00000000000000))*(cj11)*(x1722)*(x1723)))+(((IkReal(-1.00000000000000))*(cj11)*(x1723)*(x1729)))+(((r20)*(x1721))));
evalcond[6]=((((IkReal(-0.302000000000000))*(x1713)))+(((IkReal(-0.0620002000000000))*(x1717)*(x1725)))+(((IkReal(-1.00000000000000))*(pz)*(x1726)))+(((IkReal(-0.0620002000000000))*(x1719)*(x1725)))+(((cj7)*(x1730)))+(((IkReal(0.0620002000000000))*(x1715)*(x1729)))+(((cj7)*(x1728)))+(((IkReal(-1.00000000000000))*(x1716)*(x1721)))+(((IkReal(0.0616850000000000))*(x1735)))+(((x1718)*(x1724)))+(((IkReal(-0.00151567000000000))*(x1732)))+(((IkReal(-0.0701403000000000))*(x1714)))+(((IkReal(0.0620002000000000))*(x1715)*(x1722))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1726)*(x1730)))+(((x1724)*(x1725)))+(((IkReal(-1.00000000000000))*(x1726)*(x1728)))+(((IkReal(-0.0620002000000000))*(x1721)*(x1722)))+(((IkReal(0.0701403000000000))*(x1713)))+(((IkReal(-0.302000000000000))*(x1714)))+(((IkReal(0.0620002000000000))*(x1717)*(x1718)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((IkReal(0.00151567000000000))*(x1734)))+(((IkReal(-1.00000000000000))*(pz)*(x1723)))+(((IkReal(-0.0616850000000000))*(x1733)))+(((IkReal(-0.0620002000000000))*(x1721)*(x1729)))+(((IkReal(0.0620002000000000))*(x1718)*(x1719))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1736=((cj7)*(sj11));
IkReal x1737=((IkReal(1.00000000000000))*(sj7));
IkReal x1738=((cj11)*(cj7));
IkReal x1739=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1739)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1739)))+(((r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r01)*(x1738)))+(((cj6)*(r00)*(x1736)))+(((r11)*(sj6)*(x1738)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1737)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1737)))+(((r10)*(sj6)*(x1736))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1739)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1739)))+(((r22)*(sj7)))))))+IKsqr(((((cj6)*(r01)*(x1738)))+(((cj6)*(r00)*(x1736)))+(((r11)*(sj6)*(x1738)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1737)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1737)))+(((r10)*(sj6)*(x1736)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1739)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1739)))+(((r22)*(sj7)))))), ((((cj6)*(r01)*(x1738)))+(((cj6)*(r00)*(x1736)))+(((r11)*(sj6)*(x1738)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1737)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1737)))+(((r10)*(sj6)*(x1736)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1740=IKcos(j8);
IkReal x1741=IKsin(j8);
IkReal x1742=((cj7)*(sj11));
IkReal x1743=((IkReal(0.0620002000000000))*(r21));
IkReal x1744=((r10)*(sj6));
IkReal x1745=((cj11)*(sj7));
IkReal x1746=((cj6)*(r00));
IkReal x1747=((IkReal(1.00000000000000))*(r20));
IkReal x1748=((sj11)*(sj7));
IkReal x1749=((cj6)*(r01));
IkReal x1750=((IkReal(1.00000000000000))*(cj7));
IkReal x1751=((IkReal(0.0620002000000000))*(r20));
IkReal x1752=((cj11)*(cj7));
IkReal x1753=((IkReal(1.00000000000000))*(sj7));
IkReal x1754=((cj6)*(r02));
IkReal x1755=((py)*(sj6));
IkReal x1756=((r11)*(sj6));
IkReal x1757=((cj6)*(px));
IkReal x1758=((r12)*(sj6));
IkReal x1759=((cj9)*(x1741));
IkReal x1760=((sj9)*(x1740));
IkReal x1761=((cj9)*(x1740));
IkReal x1762=((sj9)*(x1741));
evalcond[0]=((((cj7)*(x1754)))+(((cj7)*(x1758)))+(((IkReal(-1.00000000000000))*(r22)*(x1753)))+(x1759));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1753)*(x1758)))+(((IkReal(-1.00000000000000))*(x1753)*(x1754)))+(((IkReal(-1.00000000000000))*(x1761)))+(((IkReal(-1.00000000000000))*(r22)*(x1750))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1744)*(x1745)))+(((x1748)*(x1756)))+(x1760)+(((IkReal(-1.00000000000000))*(x1745)*(x1746)))+(((x1748)*(x1749)))+(((IkReal(-1.00000000000000))*(x1747)*(x1752)))+(((r21)*(x1742))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1762)))+(((r21)*(x1748)))+(((IkReal(-1.00000000000000))*(x1745)*(x1747)))+(((x1744)*(x1752)))+(((IkReal(-1.00000000000000))*(x1742)*(x1749)))+(((IkReal(-1.00000000000000))*(x1742)*(x1756)))+(((x1746)*(x1752))));
evalcond[4]=((((x1744)*(x1748)))+(((x1745)*(x1749)))+(((r21)*(x1752)))+(x1741)+(((r20)*(x1742)))+(((x1745)*(x1756)))+(((x1746)*(x1748))));
evalcond[5]=((((r21)*(x1745)))+(((IkReal(-1.00000000000000))*(x1742)*(x1746)))+(((r20)*(x1748)))+(((IkReal(-1.00000000000000))*(cj11)*(x1749)*(x1750)))+(x1740)+(((IkReal(-1.00000000000000))*(cj11)*(x1750)*(x1756)))+(((IkReal(-1.00000000000000))*(x1742)*(x1744))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1743)*(x1748)))+(((IkReal(-0.302000000000000))*(x1740)))+(((IkReal(-0.0701403000000000))*(x1741)))+(((IkReal(-0.0620002000000000))*(x1746)*(x1752)))+(((x1745)*(x1751)))+(((cj7)*(x1755)))+(((IkReal(-0.0620002000000000))*(x1744)*(x1752)))+(((IkReal(0.0616850000000000))*(x1762)))+(((IkReal(0.0620002000000000))*(x1742)*(x1749)))+(((cj7)*(x1757)))+(((IkReal(-1.00000000000000))*(pz)*(x1753)))+(((IkReal(0.0620002000000000))*(x1742)*(x1756)))+(((IkReal(-0.00151567000000000))*(x1759))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1753)*(x1755)))+(((IkReal(0.0620002000000000))*(x1745)*(x1746)))+(((IkReal(-1.00000000000000))*(x1753)*(x1757)))+(((IkReal(0.00151567000000000))*(x1761)))+(((IkReal(-0.302000000000000))*(x1741)))+(((IkReal(-0.0620002000000000))*(x1748)*(x1756)))+(((IkReal(-1.00000000000000))*(x1742)*(x1743)))+(((IkReal(0.0620002000000000))*(x1744)*(x1745)))+(((x1751)*(x1752)))+(((IkReal(0.0701403000000000))*(x1740)))+(((IkReal(-0.0620002000000000))*(x1748)*(x1749)))+(((IkReal(-0.0616850000000000))*(x1760)))+(((IkReal(-1.00000000000000))*(pz)*(x1750))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1763=((IkReal(1.00000000000000))*(sj7));
IkReal x1764=((cj6)*(r02));
IkReal x1765=((IkReal(1.00000000000000))*(cj7));
IkReal x1766=((r12)*(sj6));
if( IKabs(((gconst14)*(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1764)*(x1765))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1763)*(x1766)))+(((IkReal(-1.00000000000000))*(x1763)*(x1764)))+(((IkReal(-1.00000000000000))*(r22)*(x1765))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst14)*(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1764)*(x1765)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x1763)*(x1766)))+(((IkReal(-1.00000000000000))*(x1763)*(x1764)))+(((IkReal(-1.00000000000000))*(r22)*(x1765)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1767=IKcos(j8);
IkReal x1768=IKsin(j8);
IkReal x1769=((cj7)*(sj11));
IkReal x1770=((IkReal(0.0620002000000000))*(r21));
IkReal x1771=((r10)*(sj6));
IkReal x1772=((cj11)*(sj7));
IkReal x1773=((cj6)*(r00));
IkReal x1774=((IkReal(1.00000000000000))*(r20));
IkReal x1775=((sj11)*(sj7));
IkReal x1776=((cj6)*(r01));
IkReal x1777=((IkReal(1.00000000000000))*(cj7));
IkReal x1778=((IkReal(0.0620002000000000))*(r20));
IkReal x1779=((cj11)*(cj7));
IkReal x1780=((IkReal(1.00000000000000))*(sj7));
IkReal x1781=((cj6)*(r02));
IkReal x1782=((py)*(sj6));
IkReal x1783=((r11)*(sj6));
IkReal x1784=((cj6)*(px));
IkReal x1785=((r12)*(sj6));
IkReal x1786=((cj9)*(x1768));
IkReal x1787=((sj9)*(x1767));
IkReal x1788=((cj9)*(x1767));
IkReal x1789=((sj9)*(x1768));
evalcond[0]=((x1786)+(((cj7)*(x1785)))+(((IkReal(-1.00000000000000))*(r22)*(x1780)))+(((cj7)*(x1781))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1780)*(x1785)))+(((IkReal(-1.00000000000000))*(x1780)*(x1781)))+(((IkReal(-1.00000000000000))*(x1788)))+(((IkReal(-1.00000000000000))*(r22)*(x1777))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1774)*(x1779)))+(x1787)+(((r21)*(x1769)))+(((x1775)*(x1783)))+(((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((x1775)*(x1776)))+(((IkReal(-1.00000000000000))*(x1771)*(x1772))));
evalcond[3]=((((x1773)*(x1779)))+(((r21)*(x1775)))+(((IkReal(-1.00000000000000))*(x1769)*(x1776)))+(((IkReal(-1.00000000000000))*(x1769)*(x1783)))+(((IkReal(-1.00000000000000))*(x1772)*(x1774)))+(((x1771)*(x1779)))+(((IkReal(-1.00000000000000))*(x1789))));
evalcond[4]=((x1768)+(((r20)*(x1769)))+(((x1773)*(x1775)))+(((x1772)*(x1783)))+(((x1772)*(x1776)))+(((x1771)*(x1775)))+(((r21)*(x1779))));
evalcond[5]=((((r21)*(x1772)))+(((IkReal(-1.00000000000000))*(cj11)*(x1777)*(x1783)))+(((r20)*(x1775)))+(x1767)+(((IkReal(-1.00000000000000))*(cj11)*(x1776)*(x1777)))+(((IkReal(-1.00000000000000))*(x1769)*(x1773)))+(((IkReal(-1.00000000000000))*(x1769)*(x1771))));
evalcond[6]=((((IkReal(-0.00151567000000000))*(x1786)))+(((IkReal(-1.00000000000000))*(pz)*(x1780)))+(((x1772)*(x1778)))+(((IkReal(-0.302000000000000))*(x1767)))+(((cj7)*(x1782)))+(((IkReal(-1.00000000000000))*(x1770)*(x1775)))+(((cj7)*(x1784)))+(((IkReal(-0.0701403000000000))*(x1768)))+(((IkReal(0.0616850000000000))*(x1789)))+(((IkReal(0.0620002000000000))*(x1769)*(x1783)))+(((IkReal(-0.0620002000000000))*(x1773)*(x1779)))+(((IkReal(-0.0620002000000000))*(x1771)*(x1779)))+(((IkReal(0.0620002000000000))*(x1769)*(x1776))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1780)*(x1784)))+(((IkReal(0.00151567000000000))*(x1788)))+(((IkReal(-0.302000000000000))*(x1768)))+(((x1778)*(x1779)))+(((IkReal(-0.0620002000000000))*(x1775)*(x1783)))+(((IkReal(-0.0620002000000000))*(x1775)*(x1776)))+(((IkReal(0.0620002000000000))*(x1771)*(x1772)))+(((IkReal(0.0701403000000000))*(x1767)))+(((IkReal(-1.00000000000000))*(x1780)*(x1782)))+(((IkReal(0.0620002000000000))*(x1772)*(x1773)))+(((IkReal(-0.0616850000000000))*(x1787)))+(((IkReal(-1.00000000000000))*(pz)*(x1777)))+(((IkReal(-1.00000000000000))*(x1769)*(x1770))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1790=((cj6)*(r10));
IkReal x1791=((IkReal(1.00000000000000))*(cj6));
IkReal x1792=((cj6)*(r11));
IkReal x1793=((r01)*(sj6));
IkReal x1794=((IkReal(0.0620002000000000))*(sj11));
IkReal x1795=((IkReal(0.0620002000000000))*(cj11));
IkReal x1796=((IkReal(1.00000000000000))*(cj11));
IkReal x1797=((r00)*(sj6));
IkReal x1798=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x1791))));
evalcond[2]=((((sj11)*(x1792)))+(((IkReal(-1.00000000000000))*(x1790)*(x1796)))+(cj9)+(((IkReal(-1.00000000000000))*(x1793)*(x1798)))+(((cj11)*(x1797))));
evalcond[3]=((((cj11)*(x1792)))+(((sj11)*(x1790)))+(((IkReal(-1.00000000000000))*(x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(x1793)*(x1796))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(x1792)*(x1794)))+(((x1793)*(x1794)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(py)*(x1791)))+(((IkReal(-1.00000000000000))*(x1795)*(x1797)))+(((px)*(sj6)))+(((x1790)*(x1795))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj9);
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1799=((r01)*(sj6));
IkReal x1800=((IkReal(1.00000000000000))*(cj11));
IkReal x1801=((IkReal(1.00000000000000))*(r22));
IkReal x1802=((IkReal(1.00000000000000))*(cj6));
IkReal x1803=((IkReal(0.0620002000000000))*(sj11));
IkReal x1804=((cj6)*(r10));
IkReal x1805=((IkReal(0.0620002000000000))*(cj11));
IkReal x1806=((r00)*(sj6));
IkReal x1807=((cj6)*(r11));
IkReal x1808=((IkReal(1.00000000000000))*(sj11));
IkReal x1809=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1802))));
evalcond[2]=((((sj11)*(x1807)))+(((IkReal(-1.00000000000000))*(x1799)*(x1808)))+(((cj11)*(x1806)))+(((IkReal(-1.00000000000000))*(x1800)*(x1804))));
evalcond[3]=((((cj6)*(cj7)*(r02)))+(((cj7)*(x1809)))+(((IkReal(-1.00000000000000))*(sj7)*(x1801))));
evalcond[4]=((((cj11)*(x1807)))+(((IkReal(-1.00000000000000))*(x1799)*(x1800)))+(((sj11)*(x1804)))+(((IkReal(-1.00000000000000))*(x1806)*(x1808))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1809)))+(((IkReal(-1.00000000000000))*(cj7)*(x1801)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1802))));
evalcond[6]=((IkReal(-0.0116089700000000))+(((px)*(sj6)))+(((x1799)*(x1803)))+(((IkReal(-1.00000000000000))*(py)*(x1802)))+(((IkReal(-1.00000000000000))*(x1803)*(x1807)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((x1804)*(x1805))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1810=((IkReal(1.00000000000000))*(sj11));
IkReal x1811=((sj6)*(sj7));
IkReal x1812=((cj7)*(r21));
IkReal x1813=((cj7)*(r20));
IkReal x1814=((cj6)*(sj7));
if( IKabs(((((cj11)*(r11)*(x1811)))+(((r10)*(sj11)*(x1811)))+(((cj11)*(x1812)))+(((sj11)*(x1813)))+(((cj11)*(r01)*(x1814)))+(((r00)*(sj11)*(x1814))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1810)*(x1812)))+(((IkReal(-1.00000000000000))*(r11)*(x1810)*(x1811)))+(((cj11)*(r10)*(x1811)))+(((cj11)*(x1813)))+(((IkReal(-1.00000000000000))*(r01)*(x1810)*(x1814)))+(((cj11)*(r00)*(x1814))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj11)*(r11)*(x1811)))+(((r10)*(sj11)*(x1811)))+(((cj11)*(x1812)))+(((sj11)*(x1813)))+(((cj11)*(r01)*(x1814)))+(((r00)*(sj11)*(x1814)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1810)*(x1812)))+(((IkReal(-1.00000000000000))*(r11)*(x1810)*(x1811)))+(((cj11)*(r10)*(x1811)))+(((cj11)*(x1813)))+(((IkReal(-1.00000000000000))*(r01)*(x1810)*(x1814)))+(((cj11)*(r00)*(x1814)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((cj11)*(r11)*(x1811)))+(((r10)*(sj11)*(x1811)))+(((cj11)*(x1812)))+(((sj11)*(x1813)))+(((cj11)*(r01)*(x1814)))+(((r00)*(sj11)*(x1814)))), ((((IkReal(-1.00000000000000))*(x1810)*(x1812)))+(((IkReal(-1.00000000000000))*(r11)*(x1810)*(x1811)))+(((cj11)*(r10)*(x1811)))+(((cj11)*(x1813)))+(((IkReal(-1.00000000000000))*(r01)*(x1810)*(x1814)))+(((cj11)*(r00)*(x1814)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1815=IKcos(j8);
IkReal x1816=IKsin(j8);
IkReal x1817=((cj7)*(sj11));
IkReal x1818=((IkReal(0.0620002000000000))*(r21));
IkReal x1819=((r10)*(sj6));
IkReal x1820=((cj11)*(sj7));
IkReal x1821=((cj6)*(r00));
IkReal x1822=((IkReal(1.00000000000000))*(r20));
IkReal x1823=((sj11)*(sj7));
IkReal x1824=((cj6)*(r01));
IkReal x1825=((IkReal(0.0620002000000000))*(r20));
IkReal x1826=((cj11)*(cj7));
IkReal x1827=((IkReal(1.00000000000000))*(pz));
IkReal x1828=((py)*(sj6));
IkReal x1829=((r11)*(sj6));
IkReal x1830=((IkReal(1.00000000000000))*(sj7));
IkReal x1831=((cj6)*(px));
IkReal x1832=((IkReal(1.00000000000000))*(x1816));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1819)*(x1820)))+(x1815)+(((r21)*(x1817)))+(((IkReal(-1.00000000000000))*(x1820)*(x1821)))+(((x1823)*(x1829)))+(((x1823)*(x1824)))+(((IkReal(-1.00000000000000))*(x1822)*(x1826))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1817)*(x1829)))+(((IkReal(-1.00000000000000))*(x1832)))+(((IkReal(-1.00000000000000))*(x1817)*(x1824)))+(((x1821)*(x1826)))+(((r21)*(x1823)))+(((x1819)*(x1826)))+(((IkReal(-1.00000000000000))*(x1820)*(x1822))));
evalcond[2]=((((r20)*(x1817)))+(((x1820)*(x1829)))+(((x1821)*(x1823)))+(((IkReal(-1.00000000000000))*(x1832)))+(((r21)*(x1826)))+(((x1820)*(x1824)))+(((x1819)*(x1823))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1817)*(x1819)))+(((IkReal(-1.00000000000000))*(x1817)*(x1821)))+(((IkReal(-1.00000000000000))*(x1826)*(x1829)))+(((r21)*(x1820)))+(((IkReal(-1.00000000000000))*(x1815)))+(((IkReal(-1.00000000000000))*(x1824)*(x1826)))+(((r20)*(x1823))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj7)*(x1827)))+(((cj7)*(x1831)))+(((IkReal(-0.302000000000000))*(x1815)))+(((IkReal(0.0620002000000000))*(x1817)*(x1824)))+(((IkReal(-0.0620002000000000))*(x1819)*(x1826)))+(((IkReal(-0.00845530000000000))*(x1816)))+(((cj7)*(x1828)))+(((IkReal(-1.00000000000000))*(x1818)*(x1823)))+(((IkReal(0.0620002000000000))*(x1817)*(x1829)))+(((IkReal(-0.0620002000000000))*(x1821)*(x1826)))+(((x1820)*(x1825))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1817)*(x1818)))+(((IkReal(-0.0620002000000000))*(x1823)*(x1829)))+(((x1825)*(x1826)))+(((IkReal(0.00845530000000000))*(x1815)))+(((IkReal(-1.00000000000000))*(x1828)*(x1830)))+(((IkReal(0.0620002000000000))*(x1819)*(x1820)))+(((IkReal(-0.0620002000000000))*(x1823)*(x1824)))+(((IkReal(-1.00000000000000))*(x1830)*(x1831)))+(((IkReal(0.0620002000000000))*(x1820)*(x1821)))+(((IkReal(-0.302000000000000))*(x1816)))+(((IkReal(-1.00000000000000))*(cj7)*(x1827))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1833=((r01)*(sj6));
IkReal x1834=((IkReal(1.00000000000000))*(cj11));
IkReal x1835=((IkReal(1.00000000000000))*(r22));
IkReal x1836=((IkReal(1.00000000000000))*(cj6));
IkReal x1837=((IkReal(0.0620002000000000))*(sj11));
IkReal x1838=((cj6)*(r10));
IkReal x1839=((IkReal(0.0620002000000000))*(cj11));
IkReal x1840=((r00)*(sj6));
IkReal x1841=((cj6)*(r11));
IkReal x1842=((IkReal(1.00000000000000))*(sj11));
IkReal x1843=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1836))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1833)*(x1842)))+(((cj11)*(x1840)))+(((sj11)*(x1841)))+(((IkReal(-1.00000000000000))*(x1834)*(x1838))));
evalcond[3]=((((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(sj7)*(x1835)))+(((cj7)*(x1843))));
evalcond[4]=((((sj11)*(x1838)))+(((cj11)*(x1841)))+(((IkReal(-1.00000000000000))*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(x1840)*(x1842))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x1835)))+(((IkReal(-1.00000000000000))*(sj7)*(x1843)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1836))));
evalcond[6]=((IkReal(-0.00857763000000000))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((IkReal(-1.00000000000000))*(x1837)*(x1841)))+(((px)*(sj6)))+(((x1833)*(x1837)))+(((x1838)*(x1839)))+(((IkReal(-1.00000000000000))*(py)*(x1836))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1844=((cj7)*(r20));
IkReal x1845=((cj7)*(r21));
IkReal x1846=((IkReal(1.00000000000000))*(cj11));
IkReal x1847=((sj11)*(sj7));
IkReal x1848=((cj6)*(r01));
IkReal x1849=((r11)*(sj6));
IkReal x1850=((cj11)*(sj7));
IkReal x1851=((cj6)*(r00));
IkReal x1852=((r10)*(sj6)*(sj7));
if( IKabs(((((x1849)*(x1850)))+(((x1848)*(x1850)))+(((cj11)*(x1845)))+(((x1847)*(x1851)))+(((sj11)*(x1844)))+(((r10)*(sj6)*(x1847))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1844)*(x1846)))+(((IkReal(-1.00000000000000))*(x1846)*(x1852)))+(((x1847)*(x1849)))+(((IkReal(-1.00000000000000))*(sj7)*(x1846)*(x1851)))+(((x1847)*(x1848)))+(((sj11)*(x1845))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1849)*(x1850)))+(((x1848)*(x1850)))+(((cj11)*(x1845)))+(((x1847)*(x1851)))+(((sj11)*(x1844)))+(((r10)*(sj6)*(x1847)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1844)*(x1846)))+(((IkReal(-1.00000000000000))*(x1846)*(x1852)))+(((x1847)*(x1849)))+(((IkReal(-1.00000000000000))*(sj7)*(x1846)*(x1851)))+(((x1847)*(x1848)))+(((sj11)*(x1845)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((x1849)*(x1850)))+(((x1848)*(x1850)))+(((cj11)*(x1845)))+(((x1847)*(x1851)))+(((sj11)*(x1844)))+(((r10)*(sj6)*(x1847)))), ((((IkReal(-1.00000000000000))*(x1844)*(x1846)))+(((IkReal(-1.00000000000000))*(x1846)*(x1852)))+(((x1847)*(x1849)))+(((IkReal(-1.00000000000000))*(sj7)*(x1846)*(x1851)))+(((x1847)*(x1848)))+(((sj11)*(x1845)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1853=IKsin(j8);
IkReal x1854=IKcos(j8);
IkReal x1855=((cj7)*(sj11));
IkReal x1856=((IkReal(0.0620002000000000))*(r21));
IkReal x1857=((r10)*(sj6));
IkReal x1858=((cj11)*(sj7));
IkReal x1859=((cj6)*(r00));
IkReal x1860=((IkReal(1.00000000000000))*(r20));
IkReal x1861=((sj11)*(sj7));
IkReal x1862=((cj6)*(r01));
IkReal x1863=((IkReal(0.0620002000000000))*(r20));
IkReal x1864=((cj11)*(cj7));
IkReal x1865=((IkReal(1.00000000000000))*(pz));
IkReal x1866=((py)*(sj6));
IkReal x1867=((r11)*(sj6));
IkReal x1868=((IkReal(1.00000000000000))*(sj7));
IkReal x1869=((cj6)*(px));
IkReal x1870=((IkReal(1.00000000000000))*(x1854));
evalcond[0]=((((r21)*(x1855)))+(((IkReal(-1.00000000000000))*(x1870)))+(((IkReal(-1.00000000000000))*(x1858)*(x1859)))+(((x1861)*(x1867)))+(((x1861)*(x1862)))+(((IkReal(-1.00000000000000))*(x1860)*(x1864)))+(((IkReal(-1.00000000000000))*(x1857)*(x1858))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1858)*(x1860)))+(x1853)+(((x1857)*(x1864)))+(((IkReal(-1.00000000000000))*(x1855)*(x1862)))+(((IkReal(-1.00000000000000))*(x1855)*(x1867)))+(((r21)*(x1861)))+(((x1859)*(x1864))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1853)))+(((r20)*(x1855)))+(((x1857)*(x1861)))+(((x1858)*(x1867)))+(((r21)*(x1864)))+(((x1859)*(x1861)))+(((x1858)*(x1862))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1870)))+(((r20)*(x1861)))+(((IkReal(-1.00000000000000))*(x1862)*(x1864)))+(((IkReal(-1.00000000000000))*(x1855)*(x1857)))+(((IkReal(-1.00000000000000))*(x1864)*(x1867)))+(((r21)*(x1858)))+(((IkReal(-1.00000000000000))*(x1855)*(x1859))));
evalcond[4]=((((cj7)*(x1869)))+(((IkReal(-0.302000000000000))*(x1854)))+(((IkReal(-0.131825300000000))*(x1853)))+(((IkReal(-0.0620002000000000))*(x1857)*(x1864)))+(((IkReal(-0.0620002000000000))*(x1859)*(x1864)))+(((x1858)*(x1863)))+(((IkReal(0.0620002000000000))*(x1855)*(x1867)))+(((cj7)*(x1866)))+(((IkReal(0.0620002000000000))*(x1855)*(x1862)))+(((IkReal(-1.00000000000000))*(sj7)*(x1865)))+(((IkReal(-1.00000000000000))*(x1856)*(x1861))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-0.0620002000000000))*(x1861)*(x1867)))+(((IkReal(0.0620002000000000))*(x1858)*(x1859)))+(((IkReal(-1.00000000000000))*(x1866)*(x1868)))+(((IkReal(0.131825300000000))*(x1854)))+(((IkReal(0.0620002000000000))*(x1857)*(x1858)))+(((x1863)*(x1864)))+(((IkReal(-1.00000000000000))*(x1868)*(x1869)))+(((IkReal(-1.00000000000000))*(x1855)*(x1856)))+(((IkReal(-0.0620002000000000))*(x1861)*(x1862)))+(((IkReal(-1.00000000000000))*(cj7)*(x1865)))+(((IkReal(-0.302000000000000))*(x1853))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1871=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1871)))+(((cj11)*(r21)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1871)))+(((r20)*(sj11)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1871)))+(((cj11)*(r21)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1871)))+(((r20)*(sj11)*(sj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))))), ((((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1871)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1871)))+(((cj11)*(r21)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1871)))+(((r20)*(sj11)*(sj7)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1872=IKcos(j8);
IkReal x1873=IKsin(j8);
IkReal x1874=((cj7)*(sj11));
IkReal x1875=((IkReal(0.0620002000000000))*(r21));
IkReal x1876=((r10)*(sj6));
IkReal x1877=((cj11)*(sj7));
IkReal x1878=((cj6)*(r00));
IkReal x1879=((IkReal(1.00000000000000))*(r20));
IkReal x1880=((sj11)*(sj7));
IkReal x1881=((cj6)*(r01));
IkReal x1882=((IkReal(1.00000000000000))*(cj7));
IkReal x1883=((IkReal(0.0620002000000000))*(r20));
IkReal x1884=((cj11)*(cj7));
IkReal x1885=((IkReal(1.00000000000000))*(sj7));
IkReal x1886=((cj6)*(r02));
IkReal x1887=((py)*(sj6));
IkReal x1888=((r11)*(sj6));
IkReal x1889=((cj6)*(px));
IkReal x1890=((r12)*(sj6));
IkReal x1891=((IkReal(1.00000000000000))*(x1873));
IkReal x1892=((sj9)*(x1872));
IkReal x1893=((cj9)*(x1872));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj9)*(x1891)))+(((cj7)*(x1886)))+(((cj7)*(x1890)))+(((IkReal(-1.00000000000000))*(r22)*(x1885))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((IkReal(-1.00000000000000))*(x1885)*(x1890)))+(((IkReal(-1.00000000000000))*(r22)*(x1882)))+(x1893));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1877)*(x1878)))+(((r21)*(x1874)))+(((IkReal(-1.00000000000000))*(x1876)*(x1877)))+(((x1880)*(x1881)))+(((x1880)*(x1888)))+(((IkReal(-1.00000000000000))*(x1879)*(x1884)))+(x1892));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1874)*(x1881)))+(((IkReal(-1.00000000000000))*(sj9)*(x1891)))+(((x1876)*(x1884)))+(((x1878)*(x1884)))+(((IkReal(-1.00000000000000))*(x1877)*(x1879)))+(((r21)*(x1880)))+(((IkReal(-1.00000000000000))*(x1874)*(x1888))));
evalcond[4]=((((r20)*(x1874)))+(((x1876)*(x1880)))+(((x1878)*(x1880)))+(((r21)*(x1884)))+(((IkReal(-1.00000000000000))*(x1891)))+(((x1877)*(x1888)))+(((x1877)*(x1881))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj11)*(x1882)*(x1888)))+(((IkReal(-1.00000000000000))*(x1872)))+(((r21)*(x1877)))+(((IkReal(-1.00000000000000))*(cj11)*(x1881)*(x1882)))+(((r20)*(x1880)))+(((IkReal(-1.00000000000000))*(x1874)*(x1878)))+(((IkReal(-1.00000000000000))*(x1874)*(x1876))));
evalcond[6]=((((IkReal(-0.0620002000000000))*(x1878)*(x1884)))+(((IkReal(-1.00000000000000))*(pz)*(x1885)))+(((IkReal(0.0620002000000000))*(x1874)*(x1881)))+(((IkReal(-0.0620002000000000))*(x1876)*(x1884)))+(((IkReal(-1.00000000000000))*(x1875)*(x1880)))+(((IkReal(-0.0701403000000000))*(x1873)))+(((IkReal(-0.302000000000000))*(x1872)))+(((cj7)*(x1887)))+(((IkReal(0.0620002000000000))*(x1874)*(x1888)))+(((IkReal(0.0616850000000000))*(sj9)*(x1873)))+(((cj7)*(x1889)))+(((x1877)*(x1883)))+(((IkReal(-0.00151567000000000))*(cj9)*(x1873))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1885)*(x1887)))+(((IkReal(-0.0620002000000000))*(x1880)*(x1881)))+(((IkReal(-0.302000000000000))*(x1873)))+(((IkReal(0.0701403000000000))*(x1872)))+(((IkReal(0.00151567000000000))*(x1893)))+(((IkReal(-0.0620002000000000))*(x1880)*(x1888)))+(((IkReal(-0.0616850000000000))*(x1892)))+(((x1883)*(x1884)))+(((IkReal(-1.00000000000000))*(x1885)*(x1889)))+(((IkReal(0.0620002000000000))*(x1876)*(x1877)))+(((IkReal(-1.00000000000000))*(pz)*(x1882)))+(((IkReal(0.0620002000000000))*(x1877)*(x1878)))+(((IkReal(-1.00000000000000))*(x1874)*(x1875))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1894=((sj6)*(sj7));
IkReal x1895=((cj6)*(sj7));
if( IKabs(((((r00)*(sj11)*(x1895)))+(((cj11)*(r11)*(x1894)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((r10)*(sj11)*(x1894)))+(((cj11)*(r01)*(x1895))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((r12)*(x1894)))+(((cj7)*(r22)))+(((r02)*(x1895))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj11)*(x1895)))+(((cj11)*(r11)*(x1894)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((r10)*(sj11)*(x1894)))+(((cj11)*(r01)*(x1895)))))+IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((r12)*(x1894)))+(((cj7)*(r22)))+(((r02)*(x1895)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((r00)*(sj11)*(x1895)))+(((cj11)*(r11)*(x1894)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((r10)*(sj11)*(x1894)))+(((cj11)*(r01)*(x1895)))), ((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((r12)*(x1894)))+(((cj7)*(r22)))+(((r02)*(x1895)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1896=IKcos(j8);
IkReal x1897=IKsin(j8);
IkReal x1898=((cj7)*(sj11));
IkReal x1899=((IkReal(0.0620002000000000))*(r21));
IkReal x1900=((r10)*(sj6));
IkReal x1901=((cj11)*(sj7));
IkReal x1902=((cj6)*(r00));
IkReal x1903=((IkReal(1.00000000000000))*(r20));
IkReal x1904=((sj11)*(sj7));
IkReal x1905=((cj6)*(r01));
IkReal x1906=((IkReal(1.00000000000000))*(cj7));
IkReal x1907=((IkReal(0.0620002000000000))*(r20));
IkReal x1908=((cj11)*(cj7));
IkReal x1909=((IkReal(1.00000000000000))*(sj7));
IkReal x1910=((cj6)*(r02));
IkReal x1911=((py)*(sj6));
IkReal x1912=((r11)*(sj6));
IkReal x1913=((cj6)*(px));
IkReal x1914=((r12)*(sj6));
IkReal x1915=((IkReal(1.00000000000000))*(x1897));
IkReal x1916=((sj9)*(x1896));
IkReal x1917=((cj9)*(x1896));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1909)))+(((cj7)*(x1914)))+(((IkReal(-1.00000000000000))*(cj9)*(x1915)))+(((cj7)*(x1910))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1909)*(x1910)))+(((IkReal(-1.00000000000000))*(r22)*(x1906)))+(x1917)+(((IkReal(-1.00000000000000))*(x1909)*(x1914))));
evalcond[2]=((((x1904)*(x1905)))+(((r21)*(x1898)))+(((x1904)*(x1912)))+(x1916)+(((IkReal(-1.00000000000000))*(x1900)*(x1901)))+(((IkReal(-1.00000000000000))*(x1903)*(x1908)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902))));
evalcond[3]=((((x1900)*(x1908)))+(((IkReal(-1.00000000000000))*(x1898)*(x1905)))+(((IkReal(-1.00000000000000))*(sj9)*(x1915)))+(((r21)*(x1904)))+(((x1902)*(x1908)))+(((IkReal(-1.00000000000000))*(x1898)*(x1912)))+(((IkReal(-1.00000000000000))*(x1901)*(x1903))));
evalcond[4]=((((x1900)*(x1904)))+(((IkReal(-1.00000000000000))*(x1915)))+(((x1901)*(x1905)))+(((x1902)*(x1904)))+(((x1901)*(x1912)))+(((r20)*(x1898)))+(((r21)*(x1908))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1898)*(x1902)))+(((IkReal(-1.00000000000000))*(cj11)*(x1906)*(x1912)))+(((IkReal(-1.00000000000000))*(x1896)))+(((r20)*(x1904)))+(((r21)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1900)))+(((IkReal(-1.00000000000000))*(cj11)*(x1905)*(x1906))));
evalcond[6]=((((IkReal(-0.0701403000000000))*(x1897)))+(((cj7)*(x1911)))+(((cj7)*(x1913)))+(((x1901)*(x1907)))+(((IkReal(-1.00000000000000))*(pz)*(x1909)))+(((IkReal(0.0620002000000000))*(x1898)*(x1912)))+(((IkReal(-0.0620002000000000))*(x1900)*(x1908)))+(((IkReal(-0.0620002000000000))*(x1902)*(x1908)))+(((IkReal(-0.302000000000000))*(x1896)))+(((IkReal(0.0620002000000000))*(x1898)*(x1905)))+(((IkReal(-1.00000000000000))*(x1899)*(x1904)))+(((IkReal(-0.00151567000000000))*(cj9)*(x1897)))+(((IkReal(0.0616850000000000))*(sj9)*(x1897))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x1896)))+(((IkReal(-1.00000000000000))*(pz)*(x1906)))+(((IkReal(-1.00000000000000))*(x1909)*(x1913)))+(((x1907)*(x1908)))+(((IkReal(0.0620002000000000))*(x1900)*(x1901)))+(((IkReal(-0.0620002000000000))*(x1904)*(x1905)))+(((IkReal(-0.0620002000000000))*(x1904)*(x1912)))+(((IkReal(0.0620002000000000))*(x1901)*(x1902)))+(((IkReal(-0.302000000000000))*(x1897)))+(((IkReal(0.00151567000000000))*(x1917)))+(((IkReal(-0.0616850000000000))*(x1916)))+(((IkReal(-1.00000000000000))*(x1909)*(x1911)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1918=((r12)*(sj6));
IkReal x1919=((cj6)*(r02));
if( IKabs(((gconst15)*(((((cj7)*(x1918)))+(((cj7)*(x1919)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((sj7)*(x1918)))+(((cj7)*(r22)))+(((sj7)*(x1919))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst15)*(((((cj7)*(x1918)))+(((cj7)*(x1919)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))))), ((gconst15)*(((((sj7)*(x1918)))+(((cj7)*(r22)))+(((sj7)*(x1919)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1920=IKcos(j8);
IkReal x1921=IKsin(j8);
IkReal x1922=((cj7)*(sj11));
IkReal x1923=((IkReal(0.0620002000000000))*(r21));
IkReal x1924=((r10)*(sj6));
IkReal x1925=((cj11)*(sj7));
IkReal x1926=((cj6)*(r00));
IkReal x1927=((IkReal(1.00000000000000))*(r20));
IkReal x1928=((sj11)*(sj7));
IkReal x1929=((cj6)*(r01));
IkReal x1930=((IkReal(1.00000000000000))*(cj7));
IkReal x1931=((IkReal(0.0620002000000000))*(r20));
IkReal x1932=((cj11)*(cj7));
IkReal x1933=((IkReal(1.00000000000000))*(sj7));
IkReal x1934=((cj6)*(r02));
IkReal x1935=((py)*(sj6));
IkReal x1936=((r11)*(sj6));
IkReal x1937=((cj6)*(px));
IkReal x1938=((r12)*(sj6));
IkReal x1939=((IkReal(1.00000000000000))*(x1921));
IkReal x1940=((sj9)*(x1920));
IkReal x1941=((cj9)*(x1920));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj9)*(x1939)))+(((cj7)*(x1934)))+(((IkReal(-1.00000000000000))*(r22)*(x1933)))+(((cj7)*(x1938))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1930)))+(x1941)+(((IkReal(-1.00000000000000))*(x1933)*(x1938)))+(((IkReal(-1.00000000000000))*(x1933)*(x1934))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1924)*(x1925)))+(x1940)+(((IkReal(-1.00000000000000))*(x1927)*(x1932)))+(((x1928)*(x1936)))+(((r21)*(x1922)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((x1928)*(x1929))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj9)*(x1939)))+(((IkReal(-1.00000000000000))*(x1925)*(x1927)))+(((x1924)*(x1932)))+(((x1926)*(x1932)))+(((IkReal(-1.00000000000000))*(x1922)*(x1936)))+(((r21)*(x1928)))+(((IkReal(-1.00000000000000))*(x1922)*(x1929))));
evalcond[4]=((((r21)*(x1932)))+(((IkReal(-1.00000000000000))*(x1939)))+(((x1924)*(x1928)))+(((x1925)*(x1929)))+(((x1926)*(x1928)))+(((r20)*(x1922)))+(((x1925)*(x1936))));
evalcond[5]=((((r21)*(x1925)))+(((r20)*(x1928)))+(((IkReal(-1.00000000000000))*(x1922)*(x1924)))+(((IkReal(-1.00000000000000))*(cj11)*(x1930)*(x1936)))+(((IkReal(-1.00000000000000))*(x1920)))+(((IkReal(-1.00000000000000))*(cj11)*(x1929)*(x1930)))+(((IkReal(-1.00000000000000))*(x1922)*(x1926))));
evalcond[6]=((((IkReal(-1.00000000000000))*(pz)*(x1933)))+(((IkReal(-1.00000000000000))*(x1923)*(x1928)))+(((cj7)*(x1937)))+(((IkReal(0.0620002000000000))*(x1922)*(x1936)))+(((IkReal(-0.302000000000000))*(x1920)))+(((x1925)*(x1931)))+(((IkReal(0.0620002000000000))*(x1922)*(x1929)))+(((IkReal(-0.0620002000000000))*(x1924)*(x1932)))+(((IkReal(0.0616850000000000))*(sj9)*(x1921)))+(((IkReal(-0.0620002000000000))*(x1926)*(x1932)))+(((IkReal(-0.0701403000000000))*(x1921)))+(((cj7)*(x1935)))+(((IkReal(-0.00151567000000000))*(cj9)*(x1921))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-0.302000000000000))*(x1921)))+(((IkReal(0.0620002000000000))*(x1925)*(x1926)))+(((IkReal(-1.00000000000000))*(pz)*(x1930)))+(((IkReal(-1.00000000000000))*(x1933)*(x1935)))+(((IkReal(-1.00000000000000))*(x1922)*(x1923)))+(((IkReal(0.0620002000000000))*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1933)*(x1937)))+(((IkReal(0.00151567000000000))*(x1941)))+(((IkReal(-0.0620002000000000))*(x1928)*(x1936)))+(((IkReal(-0.0616850000000000))*(x1940)))+(((x1931)*(x1932)))+(((IkReal(-0.0620002000000000))*(x1928)*(x1929)))+(((IkReal(0.0701403000000000))*(x1920))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1942=((IkReal(1.00000000000000))*(cj11));
IkReal x1943=((r01)*(sj6));
IkReal x1944=((cj6)*(sj7));
IkReal x1945=((r01)*(sj11));
IkReal x1946=((IkReal(1.00000000000000))*(cj6));
IkReal x1947=((IkReal(0.0620002000000000))*(sj11));
IkReal x1948=((cj11)*(r10));
IkReal x1949=((r11)*(sj11));
IkReal x1950=((sj6)*(sj7));
IkReal x1951=((r21)*(sj11));
IkReal x1952=((r00)*(sj6));
IkReal x1953=((cj7)*(sj6));
IkReal x1954=((cj6)*(r10));
IkReal x1955=((IkReal(1.00000000000000))*(sj11));
IkReal x1956=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(6.28318530717959))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1946))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1943)*(x1955)))+(((cj6)*(x1949)))+(((cj11)*(x1952)))+(((IkReal(-1.00000000000000))*(x1942)*(x1954))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1952)*(x1955)))+(((r11)*(x1956)))+(((IkReal(-1.00000000000000))*(x1942)*(x1943)))+(((sj11)*(x1954))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1943)*(x1947)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1947)))+(((px)*(sj6)))+(((IkReal(0.0620002000000000))*(cj6)*(x1948)))+(((IkReal(-0.0620002000000000))*(cj11)*(x1952)))+(((IkReal(-1.00000000000000))*(py)*(x1946))));
evalcond[5]=((((cj7)*(x1951)))+(((IkReal(-1.00000000000000))*(r10)*(x1942)*(x1950)))+(((x1949)*(x1950)))+(((IkReal(-1.00000000000000))*(r00)*(x1942)*(x1944)))+(((x1944)*(x1945)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1942))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1942)))+(((cj7)*(r00)*(x1956)))+(((x1948)*(x1953)))+(((sj7)*(x1951)))+(((IkReal(-1.00000000000000))*(x1949)*(x1953)))+(((IkReal(-1.00000000000000))*(cj7)*(x1945)*(x1946))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1957=((r20)*(sj11));
IkReal x1958=((sj6)*(sj7));
IkReal x1959=((IkReal(1.00000000000000))*(sj11));
IkReal x1960=((IkReal(1.00000000000000))*(sj10));
IkReal x1961=((cj11)*(r11));
IkReal x1962=((cj11)*(r21));
IkReal x1963=((IkReal(1.00000000000000))*(cj10));
IkReal x1964=((cj7)*(x1963));
IkReal x1965=((cj6)*(sj10)*(sj7));
IkReal x1966=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1967=((cj10)*(cj6)*(sj7));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(x1958)*(x1963)))+(((IkReal(-1.00000000000000))*(r22)*(x1964)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)*(x1961)))+(((IkReal(-1.00000000000000))*(cj7)*(x1960)*(x1962)))+(((IkReal(-1.00000000000000))*(cj7)*(x1957)*(x1960)))+(((IkReal(-1.00000000000000))*(r10)*(sj10)*(x1958)*(x1959)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1960)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(sj7)*(x1963)))+(((IkReal(-1.00000000000000))*(r00)*(x1959)*(x1965))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(cj10)*(r10)*(x1958)*(x1959)))+(((IkReal(-1.00000000000000))*(x1958)*(x1961)*(x1963)))+(((r12)*(sj10)*(x1958)))+(((IkReal(-1.00000000000000))*(x1962)*(x1964)))+(((IkReal(-1.00000000000000))*(r00)*(x1959)*(x1967)))+(((cj7)*(r22)*(sj10)))+(((IkReal(-1.00000000000000))*(x1957)*(x1964)))+(((r02)*(x1965)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1963))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(x1958)*(x1963)))+(((IkReal(-1.00000000000000))*(r22)*(x1964)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)*(x1961)))+(((IkReal(-1.00000000000000))*(cj7)*(x1960)*(x1962)))+(((IkReal(-1.00000000000000))*(cj7)*(x1957)*(x1960)))+(((IkReal(-1.00000000000000))*(r10)*(sj10)*(x1958)*(x1959)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1960)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(sj7)*(x1963)))+(((IkReal(-1.00000000000000))*(r00)*(x1959)*(x1965)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(cj10)*(r10)*(x1958)*(x1959)))+(((IkReal(-1.00000000000000))*(x1958)*(x1961)*(x1963)))+(((r12)*(sj10)*(x1958)))+(((IkReal(-1.00000000000000))*(x1962)*(x1964)))+(((IkReal(-1.00000000000000))*(r00)*(x1959)*(x1967)))+(((cj7)*(r22)*(sj10)))+(((IkReal(-1.00000000000000))*(x1957)*(x1964)))+(((r02)*(x1965)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1963)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1968=IKcos(j8);
IkReal x1969=IKsin(j8);
IkReal x1970=((cj7)*(sj11));
IkReal x1971=((IkReal(0.0620002000000000))*(r21));
IkReal x1972=((IkReal(1.00000000000000))*(sj6));
IkReal x1973=((cj6)*(sj7));
IkReal x1974=((IkReal(0.0620002000000000))*(cj11));
IkReal x1975=((IkReal(1.00000000000000))*(cj7));
IkReal x1976=((r20)*(sj7));
IkReal x1977=((cj11)*(cj7));
IkReal x1978=((sj11)*(sj7));
IkReal x1979=((r10)*(sj6));
IkReal x1980=((cj11)*(r01));
IkReal x1981=((cj6)*(cj7));
IkReal x1982=((cj7)*(sj6));
IkReal x1983=((IkReal(1.00000000000000))*(cj10));
IkReal x1984=((IkReal(1.00000000000000))*(sj7));
IkReal x1985=((IkReal(0.0620002000000000))*(r01));
IkReal x1986=((r11)*(sj6));
IkReal x1987=((cj11)*(sj7));
IkReal x1988=((sj10)*(x1968));
IkReal x1989=((sj10)*(x1969));
IkReal x1990=((x1969)*(x1983));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1968)*(x1983)))+(((r12)*(x1982)))+(((r02)*(x1981)))+(((IkReal(-1.00000000000000))*(r22)*(x1984)))+(((IkReal(-1.00000000000000))*(x1989))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x1973)))+(x1988)+(((IkReal(-1.00000000000000))*(r22)*(x1975)))+(((IkReal(-1.00000000000000))*(x1990)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1972))));
evalcond[2]=((((r00)*(sj11)*(x1973)))+(((cj10)*(x1968)))+(x1989)+(((r21)*(x1977)))+(((x1986)*(x1987)))+(((x1973)*(x1980)))+(((x1978)*(x1979)))+(((r20)*(x1970))));
evalcond[3]=((x1988)+(((IkReal(-1.00000000000000))*(cj6)*(x1975)*(x1980)))+(((sj11)*(x1976)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1970)))+(((IkReal(-1.00000000000000))*(r10)*(x1970)*(x1972)))+(((r21)*(x1987)))+(((IkReal(-1.00000000000000))*(r11)*(x1972)*(x1977)))+(((IkReal(-1.00000000000000))*(x1990))));
evalcond[4]=((((px)*(x1981)))+(((IkReal(-1.00000000000000))*(cj7)*(x1974)*(x1979)))+(((IkReal(-1.00000000000000))*(pz)*(x1984)))+(((IkReal(-1.00000000000000))*(x1971)*(x1978)))+(((IkReal(-0.0686246300000000))*(x1969)))+(((cj6)*(x1970)*(x1985)))+(((py)*(x1982)))+(((x1974)*(x1976)))+(((IkReal(-0.302000000000000))*(x1968)))+(((IkReal(-1.00000000000000))*(r00)*(x1974)*(x1981)))+(((IkReal(0.0620002000000000))*(x1970)*(x1986))));
evalcond[5]=((IkReal(0.270000000000000))+(((r00)*(x1973)*(x1974)))+(((IkReal(-0.302000000000000))*(x1969)))+(((cj7)*(r20)*(x1974)))+(((IkReal(0.0686246300000000))*(x1968)))+(((IkReal(-0.0620002000000000))*(x1978)*(x1986)))+(((sj7)*(x1974)*(x1979)))+(((IkReal(-1.00000000000000))*(sj11)*(x1973)*(x1985)))+(((IkReal(-1.00000000000000))*(x1970)*(x1971)))+(((IkReal(-1.00000000000000))*(pz)*(x1975)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1972)))+(((IkReal(-1.00000000000000))*(px)*(x1973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1991=((IkReal(1.00000000000000))*(r22));
IkReal x1992=((sj10)*(sj7));
IkReal x1993=((cj10)*(cj7));
IkReal x1994=((cj7)*(sj10));
IkReal x1995=((r12)*(sj6));
IkReal x1996=((cj6)*(r02));
IkReal x1997=((cj10)*(sj7));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x1995)*(x1997)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((x1994)*(x1996)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1991)*(x1993)))+(((IkReal(-1.00000000000000))*(x1996)*(x1997))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((x1993)*(x1995)))+(((x1992)*(x1995)))+(((x1992)*(x1996)))+(((IkReal(-1.00000000000000))*(x1991)*(x1997)))+(((r22)*(x1994)))+(((x1993)*(x1996))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x1995)*(x1997)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((x1994)*(x1996)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1991)*(x1993)))+(((IkReal(-1.00000000000000))*(x1996)*(x1997)))))), ((gconst16)*(((((x1993)*(x1995)))+(((x1992)*(x1995)))+(((x1992)*(x1996)))+(((IkReal(-1.00000000000000))*(x1991)*(x1997)))+(((r22)*(x1994)))+(((x1993)*(x1996)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1998=IKcos(j8);
IkReal x1999=IKsin(j8);
IkReal x2000=((cj7)*(sj11));
IkReal x2001=((IkReal(0.0620002000000000))*(r21));
IkReal x2002=((IkReal(1.00000000000000))*(sj6));
IkReal x2003=((cj6)*(sj7));
IkReal x2004=((IkReal(0.0620002000000000))*(cj11));
IkReal x2005=((IkReal(1.00000000000000))*(cj7));
IkReal x2006=((r20)*(sj7));
IkReal x2007=((cj11)*(cj7));
IkReal x2008=((sj11)*(sj7));
IkReal x2009=((r10)*(sj6));
IkReal x2010=((cj11)*(r01));
IkReal x2011=((cj6)*(cj7));
IkReal x2012=((cj7)*(sj6));
IkReal x2013=((IkReal(1.00000000000000))*(cj10));
IkReal x2014=((IkReal(1.00000000000000))*(sj7));
IkReal x2015=((IkReal(0.0620002000000000))*(r01));
IkReal x2016=((r11)*(sj6));
IkReal x2017=((cj11)*(sj7));
IkReal x2018=((sj10)*(x1998));
IkReal x2019=((sj10)*(x1999));
IkReal x2020=((x1999)*(x2013));
evalcond[0]=((((r12)*(x2012)))+(((IkReal(-1.00000000000000))*(x1998)*(x2013)))+(((r02)*(x2011)))+(((IkReal(-1.00000000000000))*(x2019)))+(((IkReal(-1.00000000000000))*(r22)*(x2014))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2002)))+(((IkReal(-1.00000000000000))*(r02)*(x2003)))+(((IkReal(-1.00000000000000))*(r22)*(x2005)))+(((IkReal(-1.00000000000000))*(x2020)))+(x2018));
evalcond[2]=((((r00)*(sj11)*(x2003)))+(((r20)*(x2000)))+(((x2008)*(x2009)))+(((cj10)*(x1998)))+(((x2003)*(x2010)))+(((r21)*(x2007)))+(((x2016)*(x2017)))+(x2019));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2002)*(x2007)))+(((IkReal(-1.00000000000000))*(cj6)*(x2005)*(x2010)))+(((r21)*(x2017)))+(((IkReal(-1.00000000000000))*(x2020)))+(((IkReal(-1.00000000000000))*(r10)*(x2000)*(x2002)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2000)))+(((sj11)*(x2006)))+(x2018));
evalcond[4]=((((cj6)*(x2000)*(x2015)))+(((IkReal(-1.00000000000000))*(r00)*(x2004)*(x2011)))+(((py)*(x2012)))+(((IkReal(-1.00000000000000))*(pz)*(x2014)))+(((IkReal(-1.00000000000000))*(x2001)*(x2008)))+(((x2004)*(x2006)))+(((IkReal(0.0620002000000000))*(x2000)*(x2016)))+(((px)*(x2011)))+(((IkReal(-0.0686246300000000))*(x1999)))+(((IkReal(-0.302000000000000))*(x1998)))+(((IkReal(-1.00000000000000))*(cj7)*(x2004)*(x2009))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(sj11)*(x2003)*(x2015)))+(((IkReal(-1.00000000000000))*(x2000)*(x2001)))+(((IkReal(-1.00000000000000))*(pz)*(x2005)))+(((IkReal(-0.302000000000000))*(x1999)))+(((IkReal(0.0686246300000000))*(x1998)))+(((r00)*(x2003)*(x2004)))+(((cj7)*(r20)*(x2004)))+(((sj7)*(x2004)*(x2009)))+(((IkReal(-1.00000000000000))*(px)*(x2003)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2002)))+(((IkReal(-0.0620002000000000))*(x2008)*(x2016))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2021=((cj6)*(r10));
IkReal x2022=((IkReal(1.00000000000000))*(cj6));
IkReal x2023=((cj6)*(r11));
IkReal x2024=((r01)*(sj6));
IkReal x2025=((IkReal(0.0620002000000000))*(sj11));
IkReal x2026=((IkReal(0.0620002000000000))*(cj11));
IkReal x2027=((IkReal(1.00000000000000))*(cj11));
IkReal x2028=((r00)*(sj6));
IkReal x2029=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x2022))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2024)*(x2029)))+(((IkReal(-1.00000000000000))*(x2021)*(x2027)))+(((cj11)*(x2028)))+(((sj11)*(x2023)))+(cj9));
evalcond[3]=((((cj11)*(x2023)))+(sj9)+(((IkReal(-1.00000000000000))*(x2028)*(x2029)))+(((sj11)*(x2021)))+(((IkReal(-1.00000000000000))*(x2024)*(x2027))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x2026)*(x2028)))+(((px)*(sj6)))+(((x2024)*(x2025)))+(((x2021)*(x2026)))+(((IkReal(-1.00000000000000))*(py)*(x2022)))+(((IkReal(-1.00000000000000))*(x2023)*(x2025))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2030=((IkReal(1.00000000000000))*(sj7));
IkReal x2031=((r12)*(sj6));
IkReal x2032=((cj6)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x2030)*(x2032)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2030)*(x2031))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(x2031)))+(((cj7)*(x2032)))+(((IkReal(-1.00000000000000))*(r22)*(x2030))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2030)*(x2032)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2030)*(x2031)))))+IKsqr(((((cj7)*(x2031)))+(((cj7)*(x2032)))+(((IkReal(-1.00000000000000))*(r22)*(x2030)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2030)*(x2032)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x2030)*(x2031)))), ((((cj7)*(x2031)))+(((cj7)*(x2032)))+(((IkReal(-1.00000000000000))*(r22)*(x2030)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2033=IKcos(j8);
IkReal x2034=IKsin(j8);
IkReal x2035=((cj7)*(sj11));
IkReal x2036=((IkReal(0.0620002000000000))*(r21));
IkReal x2037=((r10)*(sj6));
IkReal x2038=((cj11)*(sj7));
IkReal x2039=((cj6)*(r00));
IkReal x2040=((IkReal(1.00000000000000))*(r20));
IkReal x2041=((sj11)*(sj7));
IkReal x2042=((cj6)*(r01));
IkReal x2043=((IkReal(1.00000000000000))*(cj7));
IkReal x2044=((IkReal(0.0620002000000000))*(r20));
IkReal x2045=((cj11)*(cj7));
IkReal x2046=((IkReal(1.00000000000000))*(sj7));
IkReal x2047=((cj6)*(r02));
IkReal x2048=((py)*(sj6));
IkReal x2049=((r11)*(sj6));
IkReal x2050=((cj6)*(px));
IkReal x2051=((r12)*(sj6));
IkReal x2052=((IkReal(1.00000000000000))*(x2034));
IkReal x2053=((cj9)*(x2034));
IkReal x2054=((sj9)*(x2033));
IkReal x2055=((cj9)*(x2033));
evalcond[0]=((((cj7)*(x2051)))+(((IkReal(-1.00000000000000))*(x2033)))+(((IkReal(-1.00000000000000))*(r22)*(x2046)))+(((cj7)*(x2047))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2046)*(x2047)))+(((IkReal(-1.00000000000000))*(x2046)*(x2051)))+(((IkReal(-1.00000000000000))*(x2052)))+(((IkReal(-1.00000000000000))*(r22)*(x2043))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2037)*(x2038)))+(((IkReal(-1.00000000000000))*(x2040)*(x2045)))+(((r21)*(x2035)))+(((x2041)*(x2049)))+(x2054)+(((IkReal(-1.00000000000000))*(x2038)*(x2039)))+(((x2041)*(x2042))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2035)*(x2042)))+(((x2039)*(x2045)))+(((IkReal(-1.00000000000000))*(x2038)*(x2040)))+(((IkReal(-1.00000000000000))*(x2035)*(x2049)))+(((r21)*(x2041)))+(((IkReal(-1.00000000000000))*(sj9)*(x2052)))+(((x2037)*(x2045))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2055)))+(((x2039)*(x2041)))+(((x2038)*(x2042)))+(((r21)*(x2045)))+(((x2037)*(x2041)))+(((r20)*(x2035)))+(((x2038)*(x2049))));
evalcond[5]=((((r20)*(x2041)))+(((r21)*(x2038)))+(((IkReal(-1.00000000000000))*(x2035)*(x2039)))+(x2053)+(((IkReal(-1.00000000000000))*(cj11)*(x2043)*(x2049)))+(((IkReal(-1.00000000000000))*(cj11)*(x2042)*(x2043)))+(((IkReal(-1.00000000000000))*(x2035)*(x2037))));
evalcond[6]=((((IkReal(-1.00000000000000))*(pz)*(x2046)))+(((IkReal(-0.0620002000000000))*(x2039)*(x2045)))+(((IkReal(0.0616850000000000))*(sj9)*(x2034)))+(((IkReal(-0.0620002000000000))*(x2037)*(x2045)))+(((IkReal(0.0620002000000000))*(x2035)*(x2049)))+(((x2038)*(x2044)))+(((cj7)*(x2050)))+(((IkReal(-0.0701403000000000))*(x2034)))+(((IkReal(-0.302000000000000))*(x2033)))+(((cj7)*(x2048)))+(((IkReal(-0.00151567000000000))*(x2053)))+(((IkReal(0.0620002000000000))*(x2035)*(x2042)))+(((IkReal(-1.00000000000000))*(x2036)*(x2041))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.00151567000000000))*(x2055)))+(((IkReal(-0.0620002000000000))*(x2041)*(x2049)))+(((IkReal(-1.00000000000000))*(pz)*(x2043)))+(((x2044)*(x2045)))+(((IkReal(-1.00000000000000))*(x2046)*(x2050)))+(((IkReal(-0.302000000000000))*(x2034)))+(((IkReal(0.0701403000000000))*(x2033)))+(((IkReal(-1.00000000000000))*(x2035)*(x2036)))+(((IkReal(0.0620002000000000))*(x2038)*(x2039)))+(((IkReal(-1.00000000000000))*(x2046)*(x2048)))+(((IkReal(-0.0620002000000000))*(x2041)*(x2042)))+(((IkReal(0.0620002000000000))*(x2037)*(x2038)))+(((IkReal(-0.0616850000000000))*(x2054))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2056=((cj6)*(r10));
IkReal x2057=((IkReal(1.00000000000000))*(cj6));
IkReal x2058=((cj6)*(r11));
IkReal x2059=((r01)*(sj6));
IkReal x2060=((IkReal(0.0620002000000000))*(sj11));
IkReal x2061=((IkReal(0.0620002000000000))*(cj11));
IkReal x2062=((IkReal(1.00000000000000))*(cj11));
IkReal x2063=((r00)*(sj6));
IkReal x2064=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x2057))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2059)*(x2064)))+(((cj11)*(x2063)))+(cj9)+(((sj11)*(x2058)))+(((IkReal(-1.00000000000000))*(x2056)*(x2062))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2063)*(x2064)))+(((IkReal(-1.00000000000000))*(x2059)*(x2062)))+(((cj11)*(x2058)))+(((sj11)*(x2056)))+(((IkReal(-1.00000000000000))*(sj9))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(x2061)*(x2063)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x2057)))+(((x2059)*(x2060)))+(((x2056)*(x2061)))+(((IkReal(-1.00000000000000))*(x2058)*(x2060))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2065=((r12)*(sj6));
IkReal x2066=((cj6)*(r02));
IkReal x2067=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((cj7)*(r22)))+(((sj7)*(x2066)))+(((sj7)*(x2065))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2066)*(x2067)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(r22)))+(((sj7)*(x2066)))+(((sj7)*(x2065)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2066)*(x2067)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((cj7)*(r22)))+(((sj7)*(x2066)))+(((sj7)*(x2065)))), ((((IkReal(-1.00000000000000))*(x2066)*(x2067)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2068=IKcos(j8);
IkReal x2069=IKsin(j8);
IkReal x2070=((cj7)*(sj11));
IkReal x2071=((IkReal(0.0620002000000000))*(r21));
IkReal x2072=((r10)*(sj6));
IkReal x2073=((cj11)*(sj7));
IkReal x2074=((cj6)*(r00));
IkReal x2075=((IkReal(1.00000000000000))*(r20));
IkReal x2076=((sj11)*(sj7));
IkReal x2077=((cj6)*(r01));
IkReal x2078=((IkReal(1.00000000000000))*(cj7));
IkReal x2079=((IkReal(0.0620002000000000))*(r20));
IkReal x2080=((cj11)*(cj7));
IkReal x2081=((IkReal(1.00000000000000))*(sj7));
IkReal x2082=((cj6)*(r02));
IkReal x2083=((py)*(sj6));
IkReal x2084=((r11)*(sj6));
IkReal x2085=((cj6)*(px));
IkReal x2086=((r12)*(sj6));
IkReal x2087=((sj9)*(x2068));
IkReal x2088=((cj9)*(x2068));
IkReal x2089=((IkReal(1.00000000000000))*(x2069));
evalcond[0]=((x2068)+(((cj7)*(x2086)))+(((IkReal(-1.00000000000000))*(r22)*(x2081)))+(((cj7)*(x2082))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2081)*(x2082)))+(((IkReal(-1.00000000000000))*(x2081)*(x2086)))+(x2069)+(((IkReal(-1.00000000000000))*(r22)*(x2078))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2072)*(x2073)))+(((IkReal(-1.00000000000000))*(x2075)*(x2080)))+(((x2076)*(x2084)))+(x2087)+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((r21)*(x2070)))+(((x2076)*(x2077))));
evalcond[3]=((((x2072)*(x2080)))+(((IkReal(-1.00000000000000))*(x2070)*(x2084)))+(((r21)*(x2076)))+(((IkReal(-1.00000000000000))*(x2073)*(x2075)))+(((x2074)*(x2080)))+(((IkReal(-1.00000000000000))*(x2070)*(x2077)))+(((IkReal(-1.00000000000000))*(sj9)*(x2089))));
evalcond[4]=((((r20)*(x2070)))+(((r21)*(x2080)))+(x2088)+(((x2074)*(x2076)))+(((x2073)*(x2077)))+(((x2072)*(x2076)))+(((x2073)*(x2084))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj9)*(x2089)))+(((IkReal(-1.00000000000000))*(x2070)*(x2072)))+(((r21)*(x2073)))+(((IkReal(-1.00000000000000))*(x2070)*(x2074)))+(((IkReal(-1.00000000000000))*(cj11)*(x2078)*(x2084)))+(((IkReal(-1.00000000000000))*(cj11)*(x2077)*(x2078)))+(((r20)*(x2076))));
evalcond[6]=((((cj7)*(x2085)))+(((IkReal(-0.302000000000000))*(x2068)))+(((IkReal(-0.0701403000000000))*(x2069)))+(((IkReal(-1.00000000000000))*(x2071)*(x2076)))+(((x2073)*(x2079)))+(((IkReal(-0.0620002000000000))*(x2074)*(x2080)))+(((IkReal(-1.00000000000000))*(pz)*(x2081)))+(((IkReal(-0.00151567000000000))*(cj9)*(x2069)))+(((IkReal(0.0620002000000000))*(x2070)*(x2084)))+(((cj7)*(x2083)))+(((IkReal(0.0620002000000000))*(x2070)*(x2077)))+(((IkReal(0.0616850000000000))*(sj9)*(x2069)))+(((IkReal(-0.0620002000000000))*(x2072)*(x2080))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x2068)))+(((IkReal(-1.00000000000000))*(pz)*(x2078)))+(((IkReal(-1.00000000000000))*(x2070)*(x2071)))+(((IkReal(0.00151567000000000))*(x2088)))+(((IkReal(0.0620002000000000))*(x2073)*(x2074)))+(((IkReal(-0.0620002000000000))*(x2076)*(x2077)))+(((IkReal(-0.0620002000000000))*(x2076)*(x2084)))+(((IkReal(-1.00000000000000))*(x2081)*(x2085)))+(((IkReal(-0.0616850000000000))*(x2087)))+(((IkReal(0.0620002000000000))*(x2072)*(x2073)))+(((IkReal(-1.00000000000000))*(x2081)*(x2083)))+(((IkReal(-0.302000000000000))*(x2069)))+(((x2079)*(x2080))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2090=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x2091=((cj6)*(cj7));
IkReal x2092=((IkReal(1.00000000000000))*(r01));
IkReal x2093=((r21)*(sj7));
IkReal x2094=((cj7)*(sj6));
IkReal x2095=((cj11)*(r10));
IkReal x2096=((cj11)*(r00));
IkReal x2097=((cj9)*(sj10));
IkReal x2098=((IkReal(1.00000000000000))*(sj7));
IkReal x2099=((cj11)*(r20));
IkReal x2100=((IkReal(1.00000000000000))*(r11));
IkReal x2101=((sj11)*(x2097));
if( IKabs(((x2090)*(((((x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(sj11)*(x2091)*(x2092)))+(((sj11)*(x2093)))+(((IkReal(-1.00000000000000))*(sj11)*(x2094)*(x2100)))+(((IkReal(-1.00000000000000))*(x2098)*(x2099)))+(((x2091)*(x2096))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2090)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2094)*(x2100)*(x2101)))+(((x2091)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2098)))+(((IkReal(-1.00000000000000))*(x2091)*(x2092)*(x2101)))+(((x2094)*(x2095)*(x2097)))+(((r02)*(sj9)*(x2091)))+(((r12)*(sj9)*(x2094)))+(((x2093)*(x2101))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2090)*(((((x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(sj11)*(x2091)*(x2092)))+(((sj11)*(x2093)))+(((IkReal(-1.00000000000000))*(sj11)*(x2094)*(x2100)))+(((IkReal(-1.00000000000000))*(x2098)*(x2099)))+(((x2091)*(x2096)))))))+IKsqr(((x2090)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2094)*(x2100)*(x2101)))+(((x2091)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2098)))+(((IkReal(-1.00000000000000))*(x2091)*(x2092)*(x2101)))+(((x2094)*(x2095)*(x2097)))+(((r02)*(sj9)*(x2091)))+(((r12)*(sj9)*(x2094)))+(((x2093)*(x2101)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((x2090)*(((((x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(sj11)*(x2091)*(x2092)))+(((sj11)*(x2093)))+(((IkReal(-1.00000000000000))*(sj11)*(x2094)*(x2100)))+(((IkReal(-1.00000000000000))*(x2098)*(x2099)))+(((x2091)*(x2096)))))), ((x2090)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2094)*(x2100)*(x2101)))+(((x2091)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2098)))+(((IkReal(-1.00000000000000))*(x2091)*(x2092)*(x2101)))+(((x2094)*(x2095)*(x2097)))+(((r02)*(sj9)*(x2091)))+(((r12)*(sj9)*(x2094)))+(((x2093)*(x2101)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2102=IKsin(j8);
IkReal x2103=IKcos(j8);
IkReal x2104=((cj7)*(sj11));
IkReal x2105=((IkReal(0.0620002000000000))*(r21));
IkReal x2106=((IkReal(1.00000000000000))*(sj6));
IkReal x2107=((cj11)*(sj7));
IkReal x2108=((cj6)*(r00));
IkReal x2109=((IkReal(1.00000000000000))*(r20));
IkReal x2110=((cj6)*(r01));
IkReal x2111=((sj11)*(sj7));
IkReal x2112=((IkReal(1.00000000000000))*(cj7));
IkReal x2113=((IkReal(0.0620002000000000))*(r20));
IkReal x2114=((cj11)*(cj7));
IkReal x2115=((IkReal(1.00000000000000))*(sj7));
IkReal x2116=((cj6)*(r02));
IkReal x2117=((r10)*(sj6));
IkReal x2118=((cj7)*(sj6));
IkReal x2119=((IkReal(1.00000000000000))*(cj10));
IkReal x2120=((r11)*(sj6));
IkReal x2121=((cj6)*(px));
IkReal x2122=((sj9)*(x2103));
IkReal x2123=((cj9)*(x2103));
IkReal x2124=((cj9)*(x2102));
IkReal x2125=((sj9)*(x2102));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2115)))+(((IkReal(-1.00000000000000))*(x2103)*(x2119)))+(((r12)*(x2118)))+(((cj7)*(x2116)))+(((sj10)*(x2124))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2102)*(x2119)))+(((IkReal(-1.00000000000000))*(sj10)*(x2123)))+(((IkReal(-1.00000000000000))*(r22)*(x2112)))+(((IkReal(-1.00000000000000))*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2106))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2107)*(x2108)))+(x2122)+(((IkReal(-1.00000000000000))*(x2109)*(x2114)))+(((r21)*(x2104)))+(((x2111)*(x2120)))+(((x2110)*(x2111)))+(((IkReal(-1.00000000000000))*(r10)*(x2106)*(x2107))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2107)*(x2109)))+(((x2108)*(x2114)))+(((r21)*(x2111)))+(((IkReal(-1.00000000000000))*(r11)*(x2104)*(x2106)))+(((IkReal(-1.00000000000000))*(x2125)))+(((x2114)*(x2117)))+(((IkReal(-1.00000000000000))*(x2104)*(x2110))));
evalcond[4]=((((sj10)*(x2102)))+(((IkReal(-1.00000000000000))*(x2119)*(x2123)))+(((x2108)*(x2111)))+(((r21)*(x2114)))+(((x2111)*(x2117)))+(((x2107)*(x2110)))+(((r20)*(x2104)))+(((x2107)*(x2120))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x2106)*(x2114)))+(((IkReal(-1.00000000000000))*(cj11)*(x2110)*(x2112)))+(((IkReal(-1.00000000000000))*(r10)*(x2104)*(x2106)))+(((IkReal(-1.00000000000000))*(x2104)*(x2108)))+(((r21)*(x2107)))+(((sj10)*(x2103)))+(((cj10)*(x2124)))+(((r20)*(x2111))));
evalcond[6]=((((IkReal(-0.0701403000000000))*(x2102)))+(((IkReal(-0.00151567000000000))*(x2124)))+(((IkReal(0.0620002000000000))*(x2104)*(x2110)))+(((py)*(x2118)))+(((IkReal(-1.00000000000000))*(pz)*(x2115)))+(((IkReal(-1.00000000000000))*(x2105)*(x2111)))+(((IkReal(-0.0620002000000000))*(x2114)*(x2117)))+(((x2107)*(x2113)))+(((IkReal(-0.0620002000000000))*(x2108)*(x2114)))+(((IkReal(-0.302000000000000))*(x2103)))+(((cj7)*(x2121)))+(((IkReal(0.0620002000000000))*(x2104)*(x2120)))+(((IkReal(0.0616850000000000))*(x2125))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2106)))+(((IkReal(0.0620002000000000))*(x2107)*(x2108)))+(((IkReal(0.00151567000000000))*(x2123)))+(((IkReal(-1.00000000000000))*(pz)*(x2112)))+(((IkReal(-0.302000000000000))*(x2102)))+(((x2113)*(x2114)))+(((IkReal(-0.0620002000000000))*(x2111)*(x2120)))+(((IkReal(-1.00000000000000))*(x2115)*(x2121)))+(((IkReal(0.0620002000000000))*(x2107)*(x2117)))+(((IkReal(-1.00000000000000))*(x2104)*(x2105)))+(((IkReal(-0.0620002000000000))*(x2110)*(x2111)))+(((IkReal(-0.0616850000000000))*(x2122)))+(((IkReal(0.0701403000000000))*(x2103))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2126=(cj9)*(cj9);
IkReal x2127=((r22)*(sj7));
IkReal x2128=((IkReal(1.00000000000000))*(cj7));
IkReal x2129=((r12)*(sj6));
IkReal x2130=((cj6)*(r01));
IkReal x2131=((r11)*(sj6));
IkReal x2132=((cj6)*(r02));
IkReal x2133=((cj11)*(sj7));
IkReal x2134=((cj7)*(r20)*(sj11));
IkReal x2135=((cj11)*(cj7)*(r21));
IkReal x2136=((cj9)*(x2133));
IkReal x2137=((r10)*(sj11)*(sj6)*(sj7));
IkReal x2138=((cj6)*(r00)*(sj11)*(sj7));
if( IKabs(((((IKabs(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((((x2130)*(x2133)))+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2129)))+(((cj9)*(x2127)))+(x2137)+(x2134)+(x2135)+(x2138)+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2132)))+(((x2131)*(x2133))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2128)*(x2132)))+(x2127)+(((cj9)*(x2137)))+(((cj9)*(x2135)))+(((cj9)*(x2138)))+(((x2131)*(x2136)))+(((x2130)*(x2136)))+(((IkReal(-1.00000000000000))*(x2128)*(x2129)))+(((cj9)*(x2134))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((((x2130)*(x2133)))+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2129)))+(((cj9)*(x2127)))+(x2137)+(x2134)+(x2135)+(x2138)+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2132)))+(((x2131)*(x2133)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2128)*(x2132)))+(x2127)+(((cj9)*(x2137)))+(((cj9)*(x2135)))+(((cj9)*(x2138)))+(((x2131)*(x2136)))+(((x2130)*(x2136)))+(((IkReal(-1.00000000000000))*(x2128)*(x2129)))+(((cj9)*(x2134)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2126)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((((x2130)*(x2133)))+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2129)))+(((cj9)*(x2127)))+(x2137)+(x2134)+(x2135)+(x2138)+(((IkReal(-1.00000000000000))*(cj9)*(x2128)*(x2132)))+(((x2131)*(x2133)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x2126)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2128)*(x2132)))+(x2127)+(((cj9)*(x2137)))+(((cj9)*(x2135)))+(((cj9)*(x2138)))+(((x2131)*(x2136)))+(((x2130)*(x2136)))+(((IkReal(-1.00000000000000))*(x2128)*(x2129)))+(((cj9)*(x2134)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2139=IKsin(j8);
IkReal x2140=IKcos(j8);
IkReal x2141=((cj7)*(sj11));
IkReal x2142=((IkReal(0.0620002000000000))*(r21));
IkReal x2143=((IkReal(1.00000000000000))*(sj6));
IkReal x2144=((cj11)*(sj7));
IkReal x2145=((cj6)*(r00));
IkReal x2146=((IkReal(1.00000000000000))*(r20));
IkReal x2147=((cj6)*(r01));
IkReal x2148=((sj11)*(sj7));
IkReal x2149=((IkReal(1.00000000000000))*(cj7));
IkReal x2150=((IkReal(0.0620002000000000))*(r20));
IkReal x2151=((cj11)*(cj7));
IkReal x2152=((IkReal(1.00000000000000))*(sj7));
IkReal x2153=((cj6)*(r02));
IkReal x2154=((r10)*(sj6));
IkReal x2155=((cj7)*(sj6));
IkReal x2156=((IkReal(1.00000000000000))*(cj10));
IkReal x2157=((r11)*(sj6));
IkReal x2158=((cj6)*(px));
IkReal x2159=((sj9)*(x2140));
IkReal x2160=((cj9)*(x2140));
IkReal x2161=((cj9)*(x2139));
IkReal x2162=((sj9)*(x2139));
evalcond[0]=((((cj7)*(x2153)))+(((IkReal(-1.00000000000000))*(x2140)*(x2156)))+(((IkReal(-1.00000000000000))*(r22)*(x2152)))+(((r12)*(x2155)))+(((sj10)*(x2161))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2152)*(x2153)))+(((IkReal(-1.00000000000000))*(r22)*(x2149)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2143)))+(((IkReal(-1.00000000000000))*(x2139)*(x2156)))+(((IkReal(-1.00000000000000))*(sj10)*(x2160))));
evalcond[2]=((((x2147)*(x2148)))+(x2159)+(((IkReal(-1.00000000000000))*(r10)*(x2143)*(x2144)))+(((IkReal(-1.00000000000000))*(x2146)*(x2151)))+(((r21)*(x2141)))+(((IkReal(-1.00000000000000))*(x2144)*(x2145)))+(((x2148)*(x2157))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2141)*(x2143)))+(((x2145)*(x2151)))+(((IkReal(-1.00000000000000))*(x2162)))+(((x2151)*(x2154)))+(((IkReal(-1.00000000000000))*(x2144)*(x2146)))+(((IkReal(-1.00000000000000))*(x2141)*(x2147)))+(((r21)*(x2148))));
evalcond[4]=((((r21)*(x2151)))+(((x2145)*(x2148)))+(((IkReal(-1.00000000000000))*(x2156)*(x2160)))+(((r20)*(x2141)))+(((x2144)*(x2147)))+(((x2148)*(x2154)))+(((sj10)*(x2139)))+(((x2144)*(x2157))));
evalcond[5]=((((r20)*(x2148)))+(((IkReal(-1.00000000000000))*(cj11)*(x2147)*(x2149)))+(((cj10)*(x2161)))+(((IkReal(-1.00000000000000))*(x2141)*(x2145)))+(((IkReal(-1.00000000000000))*(r11)*(x2143)*(x2151)))+(((IkReal(-1.00000000000000))*(r10)*(x2141)*(x2143)))+(((r21)*(x2144)))+(((sj10)*(x2140))));
evalcond[6]=((((IkReal(0.0620002000000000))*(x2141)*(x2147)))+(((IkReal(-0.302000000000000))*(x2140)))+(((IkReal(-1.00000000000000))*(x2142)*(x2148)))+(((IkReal(0.0616850000000000))*(x2162)))+(((IkReal(0.0620002000000000))*(x2141)*(x2157)))+(((py)*(x2155)))+(((IkReal(-1.00000000000000))*(pz)*(x2152)))+(((cj7)*(x2158)))+(((IkReal(-0.00151567000000000))*(x2161)))+(((IkReal(-0.0701403000000000))*(x2139)))+(((IkReal(-0.0620002000000000))*(x2151)*(x2154)))+(((x2144)*(x2150)))+(((IkReal(-0.0620002000000000))*(x2145)*(x2151))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x2140)))+(((IkReal(-0.0620002000000000))*(x2148)*(x2157)))+(((IkReal(-0.0616850000000000))*(x2159)))+(((IkReal(0.0620002000000000))*(x2144)*(x2154)))+(((IkReal(-1.00000000000000))*(pz)*(x2149)))+(((x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(x2152)*(x2158)))+(((IkReal(0.00151567000000000))*(x2160)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2143)))+(((IkReal(0.0620002000000000))*(x2144)*(x2145)))+(((IkReal(-0.0620002000000000))*(x2147)*(x2148)))+(((IkReal(-0.302000000000000))*(x2139)))+(((IkReal(-1.00000000000000))*(x2141)*(x2142))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2163=((IkReal(1.00000000000000))*(cj10));
IkReal x2164=((cj6)*(r02));
IkReal x2165=((cj7)*(r22));
IkReal x2166=((r12)*(sj6));
IkReal x2167=((cj10)*(cj7));
IkReal x2168=((r22)*(sj7));
IkReal x2169=((IkReal(1.00000000000000))*(cj9)*(sj10));
if( IKabs(((gconst9)*(((((cj9)*(sj10)*(x2168)))+(((IkReal(-1.00000000000000))*(cj7)*(x2166)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2165)))+(((IkReal(-1.00000000000000))*(sj7)*(x2163)*(x2164)))+(((IkReal(-1.00000000000000))*(cj7)*(x2164)*(x2169)))+(((IkReal(-1.00000000000000))*(sj7)*(x2163)*(x2166))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((x2166)*(x2167)))+(((x2164)*(x2167)))+(((IkReal(-1.00000000000000))*(sj7)*(x2164)*(x2169)))+(((IkReal(-1.00000000000000))*(sj7)*(x2166)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2168)))+(((IkReal(-1.00000000000000))*(x2165)*(x2169))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst9)*(((((cj9)*(sj10)*(x2168)))+(((IkReal(-1.00000000000000))*(cj7)*(x2166)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2165)))+(((IkReal(-1.00000000000000))*(sj7)*(x2163)*(x2164)))+(((IkReal(-1.00000000000000))*(cj7)*(x2164)*(x2169)))+(((IkReal(-1.00000000000000))*(sj7)*(x2163)*(x2166)))))), ((gconst9)*(((((x2166)*(x2167)))+(((x2164)*(x2167)))+(((IkReal(-1.00000000000000))*(sj7)*(x2164)*(x2169)))+(((IkReal(-1.00000000000000))*(sj7)*(x2166)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2168)))+(((IkReal(-1.00000000000000))*(x2165)*(x2169)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2170=IKsin(j8);
IkReal x2171=IKcos(j8);
IkReal x2172=((cj7)*(sj11));
IkReal x2173=((IkReal(0.0620002000000000))*(r21));
IkReal x2174=((IkReal(1.00000000000000))*(sj6));
IkReal x2175=((cj11)*(sj7));
IkReal x2176=((cj6)*(r00));
IkReal x2177=((IkReal(1.00000000000000))*(r20));
IkReal x2178=((cj6)*(r01));
IkReal x2179=((sj11)*(sj7));
IkReal x2180=((IkReal(1.00000000000000))*(cj7));
IkReal x2181=((IkReal(0.0620002000000000))*(r20));
IkReal x2182=((cj11)*(cj7));
IkReal x2183=((IkReal(1.00000000000000))*(sj7));
IkReal x2184=((cj6)*(r02));
IkReal x2185=((r10)*(sj6));
IkReal x2186=((cj7)*(sj6));
IkReal x2187=((IkReal(1.00000000000000))*(cj10));
IkReal x2188=((r11)*(sj6));
IkReal x2189=((cj6)*(px));
IkReal x2190=((sj9)*(x2171));
IkReal x2191=((cj9)*(x2171));
IkReal x2192=((cj9)*(x2170));
IkReal x2193=((sj9)*(x2170));
evalcond[0]=((((sj10)*(x2192)))+(((IkReal(-1.00000000000000))*(x2171)*(x2187)))+(((r12)*(x2186)))+(((cj7)*(x2184)))+(((IkReal(-1.00000000000000))*(r22)*(x2183))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2174)))+(((IkReal(-1.00000000000000))*(x2170)*(x2187)))+(((IkReal(-1.00000000000000))*(r22)*(x2180)))+(((IkReal(-1.00000000000000))*(sj10)*(x2191)))+(((IkReal(-1.00000000000000))*(x2183)*(x2184))));
evalcond[2]=((((x2179)*(x2188)))+(((r21)*(x2172)))+(((IkReal(-1.00000000000000))*(x2177)*(x2182)))+(((IkReal(-1.00000000000000))*(r10)*(x2174)*(x2175)))+(((x2178)*(x2179)))+(((IkReal(-1.00000000000000))*(x2175)*(x2176)))+(x2190));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2172)*(x2174)))+(((IkReal(-1.00000000000000))*(x2193)))+(((r21)*(x2179)))+(((x2176)*(x2182)))+(((IkReal(-1.00000000000000))*(x2172)*(x2178)))+(((x2182)*(x2185)))+(((IkReal(-1.00000000000000))*(x2175)*(x2177))));
evalcond[4]=((((x2179)*(x2185)))+(((IkReal(-1.00000000000000))*(x2187)*(x2191)))+(((x2176)*(x2179)))+(((x2175)*(x2178)))+(((r21)*(x2182)))+(((x2175)*(x2188)))+(((sj10)*(x2170)))+(((r20)*(x2172))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x2172)*(x2174)))+(((IkReal(-1.00000000000000))*(r11)*(x2174)*(x2182)))+(((IkReal(-1.00000000000000))*(x2172)*(x2176)))+(((sj10)*(x2171)))+(((r21)*(x2175)))+(((cj10)*(x2192)))+(((r20)*(x2179)))+(((IkReal(-1.00000000000000))*(cj11)*(x2178)*(x2180))));
evalcond[6]=((((IkReal(0.0620002000000000))*(x2172)*(x2188)))+(((IkReal(-1.00000000000000))*(pz)*(x2183)))+(((IkReal(-1.00000000000000))*(x2173)*(x2179)))+(((IkReal(0.0620002000000000))*(x2172)*(x2178)))+(((x2175)*(x2181)))+(((IkReal(0.0616850000000000))*(x2193)))+(((py)*(x2186)))+(((IkReal(-0.0620002000000000))*(x2176)*(x2182)))+(((cj7)*(x2189)))+(((IkReal(-0.00151567000000000))*(x2192)))+(((IkReal(-0.302000000000000))*(x2171)))+(((IkReal(-0.0701403000000000))*(x2170)))+(((IkReal(-0.0620002000000000))*(x2182)*(x2185))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x2171)))+(((IkReal(-1.00000000000000))*(x2183)*(x2189)))+(((IkReal(-0.0616850000000000))*(x2190)))+(((IkReal(0.0620002000000000))*(x2175)*(x2176)))+(((IkReal(0.0620002000000000))*(x2175)*(x2185)))+(((IkReal(-1.00000000000000))*(x2172)*(x2173)))+(((IkReal(0.00151567000000000))*(x2191)))+(((IkReal(-1.00000000000000))*(pz)*(x2180)))+(((IkReal(-0.302000000000000))*(x2170)))+(((x2181)*(x2182)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2174)))+(((IkReal(-0.0620002000000000))*(x2178)*(x2179)))+(((IkReal(-0.0620002000000000))*(x2179)*(x2188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - abby (5288f61bbe95d46f4c49134ed1c59e1d)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
