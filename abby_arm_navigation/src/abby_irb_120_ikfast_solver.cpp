/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-02-17 20:37:10.451317
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66;
x0=IKcos(j[0]);
x1=IKcos(j[5]);
x2=IKcos(j[1]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[2]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[3]);
x9=IKsin(j[5]);
x10=IKsin(j[4]);
x11=IKcos(j[4]);
x12=((IkReal(0.00151567000000000))*(x7));
x13=((IkReal(0.0720009000000000))*(x3));
x14=((IkReal(0.764840868008774))*(x1));
x15=((IkReal(0.764840868008774))*(x9));
x16=((IkReal(0.644219253533752))*(x1));
x17=((IkReal(1.00000000000000))*(x0));
x18=((IkReal(0.00151567000000000))*(x5));
x19=((IkReal(1.00000000000000))*(x7));
x20=((IkReal(0.301997930000000))*(x0));
x21=((IkReal(0.301997930000000))*(x6));
x22=((IkReal(0.644219253533752))*(x9));
x23=((IkReal(0.270000000000000))*(x4));
x24=((IkReal(0.0701403000000000))*(x5));
x25=((IkReal(0.0720009000000000))*(x8));
x26=((IkReal(1.00000000000000))*(x6));
x27=((IkReal(1.00000000000000))*(x8));
x28=((IkReal(1.00000000000000))*(x5));
x29=((IkReal(0.0720009000000000))*(x7));
x30=((IkReal(0.000315200000000000))*(x5));
x31=((x2)*(x3));
x32=((x0)*(x2));
x33=((x4)*(x5));
x34=((x2)*(x6));
x35=((x3)*(x4));
x36=((x2)*(x5));
x37=((x10)*(x8));
x38=((x0)*(x8));
x39=((x27)*(x6));
x40=((x19)*(x6));
x41=((x28)*(x4));
x42=((IkReal(1.00000000000000))*(x31));
x43=((x26)*(x33));
x44=((x26)*(x31));
x45=((x42)+(((IkReal(-1.00000000000000))*(x41))));
x46=((x41)+(((IkReal(-1.00000000000000))*(x42))));
x47=((((IkReal(-1.00000000000000))*(x2)*(x28)))+(((IkReal(-1.00000000000000))*(x35))));
x48=((x45)*(x7));
x49=((x46)*(x7));
x50=((x17)*(((((IkReal(-1.00000000000000))*(x33)))+(x31))));
x51=((x17)*(((x36)+(x35))));
x52=((IkReal(-1.00000000000000))*(x51));
x53=((x26)*(((x36)+(x35))));
x54=((IkReal(-1.00000000000000))*(x53));
x55=((x51)*(x7));
x56=((x52)*(x8));
x57=((x55)+(((IkReal(-1.00000000000000))*(x39))));
x58=((x38)+(((x53)*(x7))));
x59=((((IkReal(-1.00000000000000))*(x19)*(x51)))+(x39));
x60=((((IkReal(-1.00000000000000))*(x0)*(x27)))+(((IkReal(-1.00000000000000))*(x19)*(x53))));
x61=((((IkReal(-1.00000000000000))*(x0)*(x19)))+(((IkReal(-1.00000000000000))*(x27)*(x54))));
x62=((((x11)*(x45)*(x8)))+(((x10)*(x47))));
x63=((((IkReal(0.764840868008774))*(x11)*(x45)*(x8)))+(((IkReal(0.764840868008774))*(x10)*(x47))));
x64=((x1)*(x62));
x65=((((x11)*(((((IkReal(-1.00000000000000))*(x27)*(x52)))+(x40)))))+(((x10)*(x50))));
x66=((((x11)*(x61)))+(((x10)*(((x44)+(((IkReal(-1.00000000000000))*(x43))))))));
IkReal x67=((IkReal(1.00000000000000))*(x65));
eerot[0]=((((IkReal(-1.00000000000000))*(x14)*(x67)))+(((IkReal(-1.00000000000000))*(x22)*(x67)))+(((IkReal(-1.00000000000000))*(x15)*(x59)))+(((IkReal(-1.00000000000000))*(x16)*(x57))));
eerot[1]=((((IkReal(-1.00000000000000))*(x22)*(x59)))+(((x15)*(x65)))+(((IkReal(-1.00000000000000))*(x16)*(x65)))+(((x14)*(x57))));
eerot[2]=((((x11)*(x50)))+(((x10)*(((x56)+(((IkReal(-1.00000000000000))*(x40))))))));
IkReal x68=((x0)*(x35));
eetrans[0]=((IkReal(0.0420395000000000))+(((IkReal(-0.000315200000000000))*(x6)*(x8)))+(((x8)*(((((IkReal(0.00151567000000000))*(x68)))+(((x18)*(x32)))))))+(((IkReal(0.0701403000000000))*(x68)))+(((IkReal(-1.00000000000000))*(x20)*(x33)))+(((x24)*(x32)))+(((x12)*(x6)))+(((x20)*(x31)))+(((x10)*(((((IkReal(-1.00000000000000))*(x29)*(x6)))+(((x25)*(x52)))))))+(((x7)*(((((x30)*(x32)))+(((IkReal(0.000315200000000000))*(x68)))))))+(((x11)*(((((IkReal(-0.0720009000000000))*(x0)*(x33)))+(((x13)*(x32)))))))+(((x0)*(x23)))+(((IkReal(0.0100933000000000))*(x6))));
IkReal x69=((IkReal(1.00000000000000))*(x62));
eerot[3]=((((IkReal(-1.00000000000000))*(x15)*(x49)))+(((IkReal(-1.00000000000000))*(x14)*(x69)))+(((IkReal(-1.00000000000000))*(x22)*(x69)))+(((IkReal(-1.00000000000000))*(x16)*(x48))));
eerot[4]=((((x14)*(x48)))+(((x15)*(x62)))+(((IkReal(-1.00000000000000))*(x16)*(x62)))+(((IkReal(-1.00000000000000))*(x22)*(x49))));
eerot[5]=((((x11)*(x47)))+(((x37)*(x46))));
IkReal x70=((IkReal(1.00000000000000))*(x4));
eetrans[1]=((IkReal(0.210360400000000))+(((IkReal(-1.00000000000000))*(x24)*(x70)))+(((IkReal(0.0701403000000000))*(x31)))+(((x37)*(((((IkReal(0.0720009000000000))*(x33)))+(((IkReal(-1.00000000000000))*(x13)*(x2)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x18)*(x70)))+(((IkReal(0.00151567000000000))*(x31)))))))+(((x11)*(((((IkReal(-1.00000000000000))*(x13)*(x70)))+(((IkReal(-0.0720009000000000))*(x36)))))))+(((IkReal(-0.301997930000000))*(x35)))+(((IkReal(0.270000000000000))*(x2)))+(((IkReal(-0.301997930000000))*(x36)))+(((x7)*(((((IkReal(0.000315200000000000))*(x31)))+(((IkReal(-1.00000000000000))*(x30)*(x70))))))));
eerot[6]=((((x16)*(x58)))+(((x15)*(x60)))+(((x22)*(x66)))+(((x14)*(x66))));
eerot[7]=((((IkReal(-1.00000000000000))*(x14)*(x58)))+(((IkReal(-1.00000000000000))*(x15)*(x66)))+(((x16)*(x66)))+(((x22)*(x60))));
eerot[8]=((((x10)*(x61)))+(((x11)*(((x43)+(((IkReal(-1.00000000000000))*(x44))))))));
IkReal x71=((IkReal(1.00000000000000))*(x34));
IkReal x72=((x35)*(x6));
eetrans[2]=((((x10)*(((((IkReal(-1.00000000000000))*(x25)*(x54)))+(((IkReal(-1.00000000000000))*(x0)*(x29)))))))+(((x8)*(((((IkReal(-0.00151567000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x18)*(x71)))))))+(((IkReal(-0.000315200000000000))*(x38)))+(((IkReal(-0.0701403000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x24)*(x71)))+(((x7)*(((((IkReal(-1.00000000000000))*(x30)*(x71)))+(((IkReal(-0.000315200000000000))*(x72)))))))+(((IkReal(-1.00000000000000))*(x21)*(x31)))+(((x0)*(x12)))+(((IkReal(0.0100933000000000))*(x0)))+(((IkReal(-1.00000000000000))*(x23)*(x6)))+(((x21)*(x33)))+(((x11)*(((((IkReal(-1.00000000000000))*(x13)*(x71)))+(((IkReal(0.0720009000000000))*(x33)*(x6))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,j8,cj8,sj8,htj8,j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij6[2], _nj6,_ij7[2], _nj7,_ij8[2], _nj8,_ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; j8=numeric_limits<IkReal>::quiet_NaN(); _ij8[0] = -1; _ij8[1] = -1; _nj8 = -1; j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((IkReal(0.764840868008774))*(r01)))+(((IkReal(-0.644219253533752))*(r00))));
new_r01=((((IkReal(-0.644219253533752))*(r01)))+(((IkReal(-0.764840868008774))*(r00))));
new_r02=r02;
new_px=((IkReal(-0.0420395000000000))+(((IkReal(-0.0720009000000000))*(r02)))+(px));
new_r10=((((IkReal(0.644219253533752))*(r20)))+(((IkReal(-0.764840868008774))*(r21))));
new_r11=((((IkReal(0.764840868008774))*(r20)))+(((IkReal(0.644219253533752))*(r21))));
new_r12=((IkReal(-1.00000000000000))*(r22));
new_py=((((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0720009000000000))*(r22))));
new_r20=((((IkReal(-0.644219253533752))*(r10)))+(((IkReal(0.764840868008774))*(r11))));
new_r21=((((IkReal(-0.644219253533752))*(r11)))+(((IkReal(-0.764840868008774))*(r10))));
new_r22=r12;
new_pz=((IkReal(-0.210360400000000))+(((IkReal(-0.0720009000000000))*(r12)))+(py));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+(((IkReal(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+(((IkReal(-1.00000000000000))*(py)*(r21))));
rxp1_1=((((IkReal(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+(((IkReal(-1.00000000000000))*(px)*(r11))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+(((IkReal(-1.00000000000000))*(px)*(r12))));
IkReal op[162], zeror[48];
int numroots;
IkReal x73=((IkReal(0.000315200000000000))*(r10));
IkReal x74=((IkReal(0.00501880923488449))*(rxp0_1));
IkReal x75=((IkReal(0.00135507849341881))*(r00));
IkReal x76=((IkReal(0.00271015698683763))*(r01));
IkReal x77=((IkReal(0.000630400000000000))*(r11));
IkReal x78=((IkReal(0.0100376184697690))*(rxp1_1));
IkReal x79=((IkReal(0.270000000000000))*(r20));
IkReal x80=((IkReal(0.232254240947943))*(rxp0_1));
IkReal x81=((IkReal(0.0627086450559446))*(r00));
IkReal x82=((IkReal(0.0100933000000000))*(r10));
IkReal x83=((IkReal(0.540000000000000))*(r00));
IkReal x84=((IkReal(0.125417290111889))*(r20));
IkReal x85=((IkReal(0.464508481895886))*(rxp1_1));
IkReal x86=((IkReal(0.125417290111889))*(r01));
IkReal x87=((IkReal(2.00000000000000))*(npy));
IkReal x88=((IkReal(0.540000000000000))*(r21));
IkReal x89=((IkReal(0.0201866000000000))*(r11));
IkReal x90=((IkReal(1.00000000000000))*(npx));
IkReal x91=((IkReal(0.0201866000000000))*(npz));
IkReal x92=((IkReal(0.000630400000000000))*(rxp1_1));
IkReal x93=((IkReal(0.000170208000000000))*(r01));
IkReal x94=((IkReal(0.0233218895066760))*(r12));
IkReal x95=((IkReal(0.000915458405126200))*(r11));
IkReal x96=((IkReal(0.540000000000000))*(rxp2_0));
IkReal x97=((IkReal(0.00545038200000000))*(r22));
IkReal x98=((IkReal(0.0109007640000000))*(r02));
IkReal x99=((IkReal(0.000340416000000000))*(r21));
IkReal x100=((IkReal(1.08000000000000))*(rxp2_2));
IkReal x101=((IkReal(0.000340416000000000))*(r00));
IkReal x102=((IkReal(0.00126080000000000))*(rxp0_1));
IkReal x103=((IkReal(0.00183091681025240))*(r10));
IkReal x104=((IkReal(0.101000800000000))*(npx));
IkReal x105=((IkReal(0.0272702160000000))*(r20));
IkReal x106=((IkReal(0.540000000000000))*(rxp0_0));
IkReal x107=((IkReal(0.0221423881594338))*(r10));
IkReal x108=((IkReal(0.124000400000000))*(py));
IkReal x109=((IkReal(0.0275271171041470))*(rxp0_1));
IkReal x110=((IkReal(0.00743232161811970))*(r00));
IkReal x111=((IkReal(0.0545404320000000))*(r00));
IkReal x112=((IkReal(1.08000000000000))*(rxp1_0));
IkReal x113=((IkReal(0.0545404320000000))*(r21));
IkReal x114=((IkReal(0.0148646432362394))*(r01));
IkReal x115=((IkReal(0.202001600000000))*(npy));
IkReal x116=((IkReal(0.0442847763188676))*(r11));
IkReal x117=((IkReal(0.0550542342082941))*(rxp1_1));
IkReal x118=((pp)*(r10));
IkReal x119=((IkReal(0.540000000000000))*(rxp1_0));
IkReal x120=((IkReal(0.0201866000000000))*(npy));
IkReal x121=((IkReal(0.0233218895066760))*(r11));
IkReal x122=((IkReal(0.000630400000000000))*(rxp2_1));
IkReal x123=((IkReal(0.000915458405126200))*(r12));
IkReal x124=((IkReal(0.000170208000000000))*(r02));
IkReal x125=((IkReal(0.00545038200000000))*(r21));
IkReal x126=((IkReal(0.000340416000000000))*(r22));
IkReal x127=((IkReal(1.08000000000000))*(rxp1_2));
IkReal x128=((IkReal(0.0109007640000000))*(r01));
IkReal x129=((pp)*(r11));
IkReal x130=((IkReal(1.08000000000000))*(rxp0_0));
IkReal x131=((IkReal(0.0466437790133520))*(r10));
IkReal x132=((IkReal(0.0109007640000000))*(r20));
IkReal x133=((IkReal(0.0403732000000000))*(npx));
IkReal x134=((IkReal(0.0334801080000000))*(r20));
IkReal x135=((IkReal(0.00757214710113854))*(r00));
IkReal x136=((IkReal(0.0280449892634761))*(rxp0_1));
IkReal x137=((IkReal(0.540000000000000))*(pz));
IkReal x138=((IkReal(0.101000800000000))*(py));
IkReal x139=((IkReal(1.00000000000000))*(pp));
IkReal x140=((IkReal(0.124000400000000))*(npx));
IkReal x141=((IkReal(0.00142599406584200))*(r10));
IkReal x142=((IkReal(1.08000000000000))*(px));
IkReal x143=((IkReal(0.0669602160000000))*(r00));
IkReal x144=((IkReal(0.0151442942022771))*(r20));
IkReal x145=((IkReal(0.0560899785269522))*(rxp1_1));
IkReal x146=((IkReal(0.00285198813168400))*(r11));
IkReal x147=((IkReal(0.248000800000000))*(npy));
IkReal x148=((IkReal(0.0151442942022771))*(r01));
IkReal x149=((IkReal(0.0669602160000000))*(r21));
IkReal x150=((IkReal(0.0100376184697690))*(rxp0_0));
IkReal x151=((IkReal(0.00271015698683763))*(r10));
IkReal x152=((IkReal(0.000630400000000000))*(r00));
IkReal x153=((IkReal(2.00000000000000))*(px));
IkReal x154=((IkReal(0.00542031397367525))*(r11));
IkReal x155=((IkReal(0.0200752369395380))*(rxp1_0));
IkReal x156=((IkReal(0.00126080000000000))*(r01));
IkReal x157=((IkReal(0.464508481895886))*(rxp0_0));
IkReal x158=((IkReal(0.125417290111889))*(r10));
IkReal x159=((IkReal(0.0201866000000000))*(r00));
IkReal x160=((IkReal(0.0403732000000000))*(r01));
IkReal x161=((IkReal(0.929016963791772))*(rxp1_0));
IkReal x162=((IkReal(0.250834580223778))*(r11));
IkReal x163=((IkReal(1.08000000000000))*(rxp2_1));
IkReal x164=((IkReal(0.000340416000000000))*(r11));
IkReal x165=((IkReal(0.00183091681025240))*(r01));
IkReal x166=((IkReal(0.00126080000000000))*(rxp1_0));
IkReal x167=((IkReal(0.0466437790133520))*(r02));
IkReal x168=((IkReal(0.00252160000000000))*(rxp0_0));
IkReal x169=((IkReal(0.000680832000000000))*(r10));
IkReal x170=((IkReal(0.00366183362050480))*(r00));
IkReal x171=((IkReal(0.248000800000000))*(px));
IkReal x172=((IkReal(0.0550542342082941))*(rxp0_0));
IkReal x173=((IkReal(0.0442847763188676))*(r00));
IkReal x174=((IkReal(1.08000000000000))*(rxp0_1));
IkReal x175=((IkReal(0.0148646432362394))*(r10));
IkReal x176=((IkReal(0.0297292864724788))*(r11));
IkReal x177=((IkReal(0.0885695526377352))*(r01));
IkReal x178=((IkReal(2.16000000000000))*(rxp1_1));
IkReal x179=((IkReal(0.110108468416588))*(rxp1_0));
IkReal x180=((IkReal(0.00126080000000000))*(rxp2_0));
IkReal x181=((IkReal(1.08000000000000))*(rxp1_1));
IkReal x182=((IkReal(0.00183091681025240))*(r02));
IkReal x183=((IkReal(0.0466437790133520))*(r01));
IkReal x184=((IkReal(0.000340416000000000))*(r12));
IkReal x185=((IkReal(0.0932875580267040))*(r00));
IkReal x186=((IkReal(2.16000000000000))*(rxp0_1));
IkReal x187=((IkReal(0.00285198813168400))*(r00));
IkReal x188=((IkReal(0.0151442942022771))*(r10));
IkReal x189=((IkReal(0.0560899785269522))*(rxp0_0));
IkReal x190=((IkReal(0.202001600000000))*(px));
IkReal x191=((IkReal(2.16000000000000))*(py));
IkReal x192=((IkReal(0.133920432000000))*(r10));
IkReal x193=((IkReal(0.00570397626336800))*(r01));
IkReal x194=((IkReal(0.112179957053904))*(rxp1_0));
IkReal x195=((IkReal(0.0302885884045542))*(r11));
IkReal x196=((IkReal(1.00000000000000))*(py));
IkReal x197=((IkReal(0.00542031397367525))*(r21));
IkReal x198=((IkReal(0.00271015698683763))*(r20));
IkReal x199=((IkReal(1.08000000000000))*(r01));
IkReal x200=((IkReal(0.250834580223778))*(r21));
IkReal x201=((pp)*(r12));
IkReal x202=((IkReal(0.000680832000000000))*(r20));
IkReal x203=((IkReal(1.08000000000000))*(rxp0_2));
IkReal x204=((IkReal(0.0148646432362394))*(r20));
IkReal x205=((IkReal(0.0297292864724788))*(r21));
IkReal x206=((IkReal(2.16000000000000))*(rxp1_2));
IkReal x207=((IkReal(0.109080864000000))*(r01));
IkReal x208=((IkReal(2.16000000000000))*(rxp0_2));
IkReal x209=((IkReal(0.0218015280000000))*(r00));
IkReal x210=((IkReal(0.0302885884045542))*(r21));
IkReal x211=((IkReal(0.133920432000000))*(r01));
IkReal x212=((npy)*(px));
IkReal x213=((IkReal(2.00000000000000))*(py));
IkReal x214=((IkReal(4.00000000000000))*(py));
IkReal x215=((pp)*(r01));
IkReal x216=((npx)*(px));
IkReal x217=((IkReal(2.00000000000000))*(pp));
IkReal x218=((npz)*(x213));
IkReal x219=((r12)*(x139));
IkReal x220=((npx)*(x213));
IkReal x221=((IkReal(1.00000000000000))*(x118));
IkReal x222=((IkReal(2.00000000000000))*(x129));
IkReal x223=((npy)*(x214));
IkReal x224=((py)*(x87));
IkReal x225=((IkReal(2.00000000000000))*(x118));
IkReal x226=((npx)*(x214));
IkReal x227=((IkReal(1.00000000000000))*(x129));
IkReal x228=((r02)*(x217));
IkReal x229=((IkReal(4.00000000000000))*(npz)*(px));
IkReal x230=((IkReal(-0.0218015280000000))*(r12));
IkReal x231=((IkReal(4.00000000000000))*(x216));
IkReal x232=((r00)*(x217));
IkReal x233=((IkReal(8.00000000000000))*(x212));
IkReal x234=((IkReal(4.00000000000000))*(x215));
IkReal x235=((IkReal(2.00000000000000))*(x215));
IkReal x236=((IkReal(4.00000000000000))*(x212));
IkReal x237=((IkReal(8.00000000000000))*(x216));
IkReal x238=((IkReal(4.00000000000000))*(pp)*(r00));
IkReal x239=((IkReal(-0.00271015698683763))*(r20));
IkReal x240=((IkReal(-0.000315200000000000))+(x80));
IkReal x241=((npx)+(x79));
IkReal x242=((IkReal(0.0243070291684138))+(x138));
IkReal x243=((IkReal(0.0243070291684138))+(x134));
IkReal x244=((IkReal(0.0100933000000000))+(x74));
IkReal x245=((x204)+(x203));
IkReal x246=((x159)+(x158));
IkReal x247=((x157)+(x158));
IkReal x248=((x76)+(x78));
IkReal x249=((x77)+(x76));
IkReal x250=((x83)+(x84));
IkReal x251=((x102)+(x103));
IkReal x252=((x190)+(x187));
IkReal x253=((x188)+(x189));
IkReal x254=((x112)+(x114));
IkReal x255=((x178)+(x176));
IkReal x256=((x82)+(x81));
IkReal x257=((IkReal(0.0100933000000000))+(x73)+(py));
IkReal x258=((x135)+(x140));
IkReal x259=((x146)+(x147));
IkReal x260=((x99)+(x98));
IkReal x261=((x201)+(x91));
IkReal x262=((x125)+(x129));
IkReal x263=((x75)+(x74));
IkReal x264=((x170)+(x168));
IkReal x265=((x75)+(x73));
IkReal x266=((x122)+(x123));
IkReal x267=((x120)+(x119));
IkReal x268=((x130)+(x133));
IkReal x269=((x139)+(x138));
IkReal x270=((x137)+(x141));
IkReal x271=((x124)+(x125));
IkReal x272=((x142)+(x144));
IkReal x273=((x108)+(x104));
IkReal x274=((x151)+(x150));
IkReal x275=((x127)+(x128));
IkReal x276=((x79)+(x82));
IkReal x277=((x145)+(x149));
IkReal x278=((x97)+(x96));
IkReal x279=((x92)+(x95));
IkReal x280=((x86)+(x87));
IkReal x281=((x88)+(x89));
IkReal x282=((x166)+(x165));
IkReal x283=((x136)+(x139));
IkReal x284=((x163)+(x164));
IkReal x285=((x153)+(x152));
IkReal x286=((x80)+(x90));
IkReal x287=((x106)+(x110));
IkReal x288=((x88)+(x85));
IkReal x289=((x180)+(x182));
IkReal x290=((x91)+(x97));
IkReal x291=((x206)+(x205));
IkReal x292=((x135)+(x134));
IkReal x293=((x175)+(x174));
IkReal x294=((x137)+(x136));
IkReal x295=((x124)+(x129));
IkReal x296=((x79)+(x81));
IkReal x297=((x219)+(x97));
IkReal x298=((x167)+(x229));
IkReal x299=((IkReal(-0.00100075587183800))+(x104)+(x118));
IkReal x300=((x221)+(x105));
IkReal x301=((x236)+(x183));
IkReal x302=((x225)+(x132));
IkReal x303=((x226)+(x131));
IkReal x304=((x222)+(x115));
IkReal x305=((x237)+(x185));
IkReal x306=((x218)+(x94));
IkReal x307=((x121)+(x224));
IkReal x308=((IkReal(-0.00100075587183800))+(x108)+(x118));
IkReal x309=((x235)+(x181));
IkReal x310=((x219)+(x96));
IkReal x311=((x251)+(x101));
IkReal x312=((x245)+(x111));
IkReal x313=((x134)+(x138)+(x141));
IkReal x314=((x289)+(x184));
IkReal x315=((x171)+(x293));
IkReal x316=((x287)+(x105));
IkReal x317=((x173)+(x172)+(x231));
IkReal x318=((x220)+(x109)+(x107));
IkReal x319=((x223)+(x117)+(x116));
IkReal x320=((x179)+(x177)+(x233));
IkReal x321=((x319)+(x115));
IkReal x322=((x306)+(x279)+(x93)+(x96));
op[0]=((x75)+(py)+(x244)+(((IkReal(-1.00000000000000))*(x73))));
op[1]=((((IkReal(-1.00000000000000))*(x248)))+(x77));
op[2]=((x257)+(((IkReal(-1.00000000000000))*(x263))));
op[3]=x239;
op[4]=x197;
op[5]=x198;
op[6]=((((IkReal(-1.00000000000000))*(x265)))+(py)+(x244));
op[7]=((x249)+(((IkReal(-1.00000000000000))*(x78))));
op[8]=((((IkReal(-1.00000000000000))*(x74)))+(x257)+(x75));
op[9]=((IkReal(-0.000315200000000000))+(npx)+(((IkReal(-1.00000000000000))*(x296)))+(((IkReal(-1.00000000000000))*(x80)))+(x82));
op[10]=((x288)+(((IkReal(-1.00000000000000))*(x89)))+(x86)+(((IkReal(-1.00000000000000))*(x87))));
op[11]=((((IkReal(-1.00000000000000))*(x82)))+(((IkReal(-1.00000000000000))*(x90)))+(x296)+(x240));
op[12]=((((IkReal(-1.00000000000000))*(x83)))+(x84));
op[13]=((((IkReal(-1.00000000000000))*(x200)))+(x199));
op[14]=((((IkReal(-1.00000000000000))*(x84)))+(x83));
op[15]=((IkReal(-0.000315200000000000))+(x256)+(x241)+(((IkReal(-1.00000000000000))*(x80))));
op[16]=((((IkReal(-1.00000000000000))*(x281)))+(x85)+(((IkReal(-1.00000000000000))*(x280))));
op[17]=((((IkReal(-1.00000000000000))*(x256)))+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x79)))+(x240));
op[18]=((x306)+(((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x297)))+(((IkReal(-1.00000000000000))*(x279)))+(x91)+(x96));
op[19]=((IkReal(-1.00000000000000))*(x311));
op[20]=((x322)+(((IkReal(-1.00000000000000))*(x297)))+(x91));
op[21]=((((IkReal(-1.00000000000000))*(x98)))+(x99)+(((IkReal(-1.00000000000000))*(x100))));
op[22]=x202;
op[23]=((((IkReal(-1.00000000000000))*(x260)))+(((IkReal(-1.00000000000000))*(x100))));
op[24]=((x306)+(x290)+(((IkReal(-1.00000000000000))*(x310)))+(((IkReal(-1.00000000000000))*(x279)))+(x93));
op[25]=((((IkReal(-1.00000000000000))*(x251)))+(x101));
op[26]=((x306)+(((IkReal(-1.00000000000000))*(x93)))+(x290)+(((IkReal(-1.00000000000000))*(x310)))+(x279));
op[27]=((IkReal(-0.00100075587183800))+(((IkReal(-1.00000000000000))*(x221)))+(x318)+(x316)+(((IkReal(-1.00000000000000))*(x273))));
op[28]=((((IkReal(-1.00000000000000))*(x319)))+(x304)+(((IkReal(-1.00000000000000))*(x254)))+(((IkReal(-1.00000000000000))*(x113))));
op[29]=((((IkReal(-1.00000000000000))*(x318)))+(((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x316)))+(x299));
op[30]=((x111)+(((IkReal(-1.00000000000000))*(x245))));
op[31]=((x291)+(((IkReal(-1.00000000000000))*(x207))));
op[32]=((((IkReal(-1.00000000000000))*(x111)))+(x245));
op[33]=((IkReal(-0.00100075587183800))+(((IkReal(-1.00000000000000))*(x287)))+(x318)+(((IkReal(-1.00000000000000))*(x300)))+(((IkReal(-1.00000000000000))*(x273))));
op[34]=((((IkReal(-1.00000000000000))*(x319)))+(x304)+(x254)+(x113));
op[35]=((((IkReal(-1.00000000000000))*(x318)))+(((IkReal(-1.00000000000000))*(x108)))+(x299)+(x316));
op[36]=((((IkReal(-1.00000000000000))*(x267)))+(((IkReal(-1.00000000000000))*(x307)))+(((IkReal(-1.00000000000000))*(x266)))+(((IkReal(-1.00000000000000))*(x124)))+(x262));
op[37]=((x302)+(((IkReal(-1.00000000000000))*(x268)))+(((IkReal(-1.00000000000000))*(x303))));
op[38]=((x307)+(((IkReal(-1.00000000000000))*(x271)))+(((IkReal(-1.00000000000000))*(x266)))+(((IkReal(-1.00000000000000))*(x227)))+(x267));
op[39]=((x126)+(x275));
op[40]=((x209)+(x208));
op[41]=((x126)+(((IkReal(-1.00000000000000))*(x275))));
op[42]=((((IkReal(-1.00000000000000))*(x307)))+(((IkReal(-1.00000000000000))*(x266)))+(x295)+(((IkReal(-1.00000000000000))*(x125)))+(((IkReal(-1.00000000000000))*(x120)))+(x119));
op[43]=((x225)+(((IkReal(-1.00000000000000))*(x303)))+(((IkReal(-1.00000000000000))*(x132)))+(x130)+(((IkReal(-1.00000000000000))*(x133))));
op[44]=((x307)+(((IkReal(-1.00000000000000))*(x266)))+(x120)+(((IkReal(-1.00000000000000))*(x227)))+(x271)+(((IkReal(-1.00000000000000))*(x119))));
op[45]=((((IkReal(-1.00000000000000))*(x292)))+(x270)+(x242)+(((IkReal(-1.00000000000000))*(x283)))+(x140));
op[46]=((x277)+(((IkReal(-1.00000000000000))*(x259)))+(x148));
op[47]=((((IkReal(-1.00000000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x139)))+(x292)+(x294)+(((IkReal(-1.00000000000000))*(x140)))+(x242));
op[48]=((x272)+(((IkReal(-1.00000000000000))*(x143))));
op[49]=((((IkReal(-1.00000000000000))*(x210)))+(x211));
op[50]=((x142)+(x143)+(((IkReal(-1.00000000000000))*(x144))));
op[51]=((((IkReal(-1.00000000000000))*(x137)))+(x258)+(x242)+(((IkReal(-1.00000000000000))*(x283)))+(x134)+(x141));
op[52]=((((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x259)))+(x145)+(((IkReal(-1.00000000000000))*(x149))));
op[53]=((((IkReal(-1.00000000000000))*(x258)))+(((IkReal(-1.00000000000000))*(x139)))+(((IkReal(-1.00000000000000))*(x134)))+(x242)+(((IkReal(-1.00000000000000))*(x270)))+(x136));
op[54]=((x152)+(x151)+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x150))));
op[55]=((((IkReal(-1.00000000000000))*(x154)))+(x155)+(((IkReal(-1.00000000000000))*(x156))));
op[56]=((x150)+(((IkReal(-1.00000000000000))*(x285)))+(((IkReal(-1.00000000000000))*(x151))));
op[57]=IkReal(0);
op[58]=IkReal(0);
op[59]=IkReal(0);
op[60]=((x152)+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x274))));
op[61]=((x155)+(x154)+(((IkReal(-1.00000000000000))*(x156))));
op[62]=((((IkReal(-1.00000000000000))*(x285)))+(x274));
op[63]=((x157)+(((IkReal(-1.00000000000000))*(x246))));
op[64]=((x162)+(x160)+(((IkReal(-1.00000000000000))*(x161))));
op[65]=((((IkReal(-1.00000000000000))*(x157)))+(x246));
op[66]=((IkReal(-1.08000000000000))*(r10));
op[67]=((IkReal(2.16000000000000))*(r11));
op[68]=((IkReal(1.08000000000000))*(r10));
op[69]=((((IkReal(-1.00000000000000))*(x159)))+(x247));
op[70]=((x160)+(((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x162))));
op[71]=((x159)+(((IkReal(-1.00000000000000))*(x247))));
op[72]=((((IkReal(-1.00000000000000))*(x164)))+(x282)+(x163)+(((IkReal(-1.00000000000000))*(x298)))+(x228));
op[73]=((((IkReal(-1.00000000000000))*(x169)))+(x264));
op[74]=((x284)+(((IkReal(-1.00000000000000))*(x298)))+(x228)+(((IkReal(-1.00000000000000))*(x282))));
op[75]=x230;
op[76]=IkReal(0);
op[77]=x230;
op[78]=((x282)+(x164)+(((IkReal(-1.00000000000000))*(x298)))+(((IkReal(-1.00000000000000))*(x163)))+(x228));
op[79]=((x169)+(x264));
op[80]=((((IkReal(-1.00000000000000))*(x298)))+(x228)+(((IkReal(-1.00000000000000))*(x282)))+(((IkReal(-1.00000000000000))*(x284))));
op[81]=((x232)+(x315)+(((IkReal(-1.00000000000000))*(x317))));
op[82]=((((IkReal(-1.00000000000000))*(x255)))+(x320)+(((IkReal(-1.00000000000000))*(x234))));
op[83]=((x171)+(((IkReal(-1.00000000000000))*(x293)))+(x317)+(((IkReal(-1.00000000000000))*(x232))));
op[84]=((IkReal(0.109080864000000))*(r10));
op[85]=((IkReal(-0.218161728000000))*(r11));
op[86]=((IkReal(-0.109080864000000))*(r10));
op[87]=((x171)+(x232)+(((IkReal(-1.00000000000000))*(x293)))+(((IkReal(-1.00000000000000))*(x317))));
op[88]=((x255)+(x320)+(((IkReal(-1.00000000000000))*(x234))));
op[89]=((x315)+(x317)+(((IkReal(-1.00000000000000))*(x232))));
op[90]=((x289)+(x301)+(((IkReal(-1.00000000000000))*(x184)))+(((IkReal(-1.00000000000000))*(x309))));
op[91]=((((IkReal(-1.00000000000000))*(x238)))+(x305)+(((IkReal(-1.00000000000000))*(x186))));
op[92]=((((IkReal(-1.00000000000000))*(x301)))+(x289)+(x309)+(((IkReal(-1.00000000000000))*(x184))));
op[93]=((IkReal(0.0218015280000000))*(r11));
op[94]=((IkReal(0.0436030560000000))*(r10));
op[95]=((IkReal(-0.0218015280000000))*(r11));
op[96]=((((IkReal(-1.00000000000000))*(x235)))+(x301)+(x181)+(x314));
op[97]=((((IkReal(-1.00000000000000))*(x238)))+(x305)+(x186));
op[98]=((((IkReal(-1.00000000000000))*(x301)))+(x235)+(x314)+(((IkReal(-1.00000000000000))*(x181))));
op[99]=((((IkReal(-1.00000000000000))*(x188)))+(x189)+(((IkReal(-1.00000000000000))*(x252))));
op[100]=((x193)+(x195)+(((IkReal(-1.00000000000000))*(x194))));
op[101]=((((IkReal(-1.00000000000000))*(x189)))+(x187)+(x188)+(((IkReal(-1.00000000000000))*(x190))));
op[102]=((((IkReal(-1.00000000000000))*(x192)))+(x191));
op[103]=((IkReal(0.267840864000000))*(r11));
op[104]=((x192)+(x191));
op[105]=((x253)+(((IkReal(-1.00000000000000))*(x252))));
op[106]=((x193)+(((IkReal(-1.00000000000000))*(x195)))+(((IkReal(-1.00000000000000))*(x194))));
op[107]=((x187)+(((IkReal(-1.00000000000000))*(x253)))+(((IkReal(-1.00000000000000))*(x190))));
op[108]=((IkReal(0.0100933000000000))+(((IkReal(-1.00000000000000))*(x196)))+(((IkReal(-1.00000000000000))*(x263)))+(x73));
op[109]=((((IkReal(-1.00000000000000))*(x77)))+(x248));
op[110]=((((IkReal(-1.00000000000000))*(x196)))+(x75)+(x244)+(((IkReal(-1.00000000000000))*(x73))));
op[111]=x239;
op[112]=x197;
op[113]=x198;
op[114]=((IkReal(0.0100933000000000))+(((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-1.00000000000000))*(x196)))+(x265));
op[115]=((((IkReal(-1.00000000000000))*(x249)))+(x78));
op[116]=((((IkReal(-1.00000000000000))*(x196)))+(((IkReal(-1.00000000000000))*(x265)))+(x244));
op[117]=((npx)+(((IkReal(-1.00000000000000))*(x276)))+(x240)+(x81));
op[118]=((x281)+(((IkReal(-1.00000000000000))*(x85)))+(((IkReal(-1.00000000000000))*(x280))));
op[119]=((IkReal(-0.000315200000000000))+(x276)+(((IkReal(-1.00000000000000))*(x286)))+(((IkReal(-1.00000000000000))*(x81))));
op[120]=x250;
op[121]=((((IkReal(-1.00000000000000))*(x200)))+(((IkReal(-1.00000000000000))*(x199))));
op[122]=((IkReal(-1.00000000000000))*(x250));
op[123]=((((IkReal(-1.00000000000000))*(x256)))+(x241)+(x240));
op[124]=((((IkReal(-1.00000000000000))*(x288)))+(x89)+(x86)+(((IkReal(-1.00000000000000))*(x87))));
op[125]=((IkReal(-0.000315200000000000))+(x256)+(((IkReal(-1.00000000000000))*(x79)))+(((IkReal(-1.00000000000000))*(x286))));
op[126]=((((IkReal(-1.00000000000000))*(x278)))+(x279)+(((IkReal(-1.00000000000000))*(x306)))+(x261)+(x93));
op[127]=x311;
op[128]=((((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x278)))+(((IkReal(-1.00000000000000))*(x279)))+(((IkReal(-1.00000000000000))*(x306)))+(x261));
op[129]=((x260)+(((IkReal(-1.00000000000000))*(x100))));
op[130]=x202;
op[131]=((((IkReal(-1.00000000000000))*(x99)))+(x98)+(((IkReal(-1.00000000000000))*(x100))));
op[132]=((((IkReal(-1.00000000000000))*(x93)))+(x278)+(x279)+(((IkReal(-1.00000000000000))*(x306)))+(x261));
op[133]=((((IkReal(-1.00000000000000))*(x101)))+(x251));
op[134]=((x278)+(((IkReal(-1.00000000000000))*(x279)))+(((IkReal(-1.00000000000000))*(x306)))+(x261)+(x93));
op[135]=((((IkReal(-1.00000000000000))*(x318)))+(x308)+(((IkReal(-1.00000000000000))*(x287)))+(((IkReal(-1.00000000000000))*(x104)))+(x105));
op[136]=((x254)+(x321)+(((IkReal(-1.00000000000000))*(x222)))+(((IkReal(-1.00000000000000))*(x113))));
op[137]=((IkReal(-0.00100075587183800))+(x287)+(x318)+(x273)+(((IkReal(-1.00000000000000))*(x300))));
op[138]=((IkReal(-1.00000000000000))*(x312));
op[139]=((x291)+(x207));
op[140]=x312;
op[141]=((((IkReal(-1.00000000000000))*(x318)))+(x287)+(x308)+(((IkReal(-1.00000000000000))*(x104)))+(((IkReal(-1.00000000000000))*(x105))));
op[142]=((x321)+(((IkReal(-1.00000000000000))*(x254)))+(((IkReal(-1.00000000000000))*(x222)))+(x113));
op[143]=((IkReal(-0.00100075587183800))+(((IkReal(-1.00000000000000))*(x221)))+(((IkReal(-1.00000000000000))*(x287)))+(x318)+(x273)+(x105));
op[144]=((x307)+(((IkReal(-1.00000000000000))*(x227)))+(x271)+(((IkReal(-1.00000000000000))*(x120)))+(x119)+(x266));
op[145]=((x303)+(((IkReal(-1.00000000000000))*(x225)))+(x130)+(x132)+(((IkReal(-1.00000000000000))*(x133))));
op[146]=((((IkReal(-1.00000000000000))*(x307)))+(x295)+(x120)+(((IkReal(-1.00000000000000))*(x125)))+(x266)+(((IkReal(-1.00000000000000))*(x119))));
op[147]=((((IkReal(-1.00000000000000))*(x128)))+(x126)+(x127));
op[148]=((((IkReal(-1.00000000000000))*(x209)))+(x208));
op[149]=((((IkReal(-1.00000000000000))*(x127)))+(x126)+(x128));
op[150]=((((IkReal(-1.00000000000000))*(x267)))+(x307)+(((IkReal(-1.00000000000000))*(x271)))+(((IkReal(-1.00000000000000))*(x227)))+(x266));
op[151]=((((IkReal(-1.00000000000000))*(x302)))+(x303)+(((IkReal(-1.00000000000000))*(x268))));
op[152]=((((IkReal(-1.00000000000000))*(x307)))+(((IkReal(-1.00000000000000))*(x124)))+(x267)+(x266)+(x262));
op[153]=((IkReal(0.0243070291684138))+(((IkReal(-1.00000000000000))*(x141)))+(x258)+(((IkReal(-1.00000000000000))*(x269)))+(x294)+(((IkReal(-1.00000000000000))*(x134))));
op[154]=((((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x145)))+(((IkReal(-1.00000000000000))*(x147)))+(x146)+(x149));
op[155]=((((IkReal(-1.00000000000000))*(x258)))+(((IkReal(-1.00000000000000))*(x136)))+(((IkReal(-1.00000000000000))*(x269)))+(x270)+(x243));
op[156]=((((IkReal(-1.00000000000000))*(x142)))+(x143)+(x144));
op[157]=((((IkReal(-1.00000000000000))*(x210)))+(((IkReal(-1.00000000000000))*(x211))));
op[158]=((((IkReal(-1.00000000000000))*(x272)))+(((IkReal(-1.00000000000000))*(x143))));
op[159]=((((IkReal(-1.00000000000000))*(x135)))+(((IkReal(-1.00000000000000))*(x269)))+(x243)+(((IkReal(-1.00000000000000))*(x270)))+(x136)+(x140));
op[160]=((((IkReal(-1.00000000000000))*(x277)))+(((IkReal(-1.00000000000000))*(x147)))+(x146)+(x148));
op[161]=((IkReal(0.0243070291684138))+(((IkReal(-1.00000000000000))*(x269)))+(((IkReal(-1.00000000000000))*(x134)))+(((IkReal(-1.00000000000000))*(x140)))+(x135)+(x141)+(((IkReal(-1.00000000000000))*(x294))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j6array[16], cj6array[16], sj6array[16], j7array[16], cj7array[16], sj7array[16], j11array[16], cj11array[16], sj11array[16];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ij6 += 3)
{
IkReal htj6 = zeror[ij6+0], htj7 = zeror[ij6+1], htj11 = zeror[ij6+2];
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
j7array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj7)));
j11array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj11)));
IkReal x323=(htj6)*(htj6);
IkReal x324=(htj7)*(htj7);
IkReal x325=(htj11)*(htj11);
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x323))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x323)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x323))))));
cj7array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x324))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x324)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x324))))));
cj11array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x325))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x325)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x325))))));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
sj7array[numsolutions]=((IkReal(2.00000000000000))*(htj7)*(((IKabs(((IkReal(1.00000000000000))+((htj7)*(htj7)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj7)*(htj7))))):(IkReal)1.0e30)));
sj11array[numsolutions]=((IkReal(2.00000000000000))*(htj11)*(((IKabs(((IkReal(1.00000000000000))+((htj11)*(htj11)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj11)*(htj11))))):(IkReal)1.0e30)));
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j7array[numsolutions] > IKPI )
{
    j7array[numsolutions]-=IK2PI;
}
else if( j7array[numsolutions] < -IKPI )
{
    j7array[numsolutions]+=IK2PI;
}
if( j11array[numsolutions] > IKPI )
{
    j11array[numsolutions]-=IK2PI;
}
else if( j11array[numsolutions] < -IKPI )
{
    j11array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j6valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj6 = 16;
_nj7 = 1;
_nj11 = 1;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
_ij7[0] = 0; _ij7[1] = -1;
_ij11[0] = 0; _ij11[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( !j6valid[iij6] ) { continue; }
if( IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(cj7array[ij6]-cj7array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij6]-sj7array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(cj11array[ij6]-cj11array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij6]-sj11array[iij6]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j6valid[iij6]=false; _ij6[1] = iij6; _ij7[1] = 0; _ij11[1] = 0;  break; 
}
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

    j7 = j7array[ij6]; cj7 = cj7array[ij6]; sj7 = sj7array[ij6];

    j11 = j11array[ij6]; cj11 = cj11array[ij6]; sj11 = sj11array[ij6];

{
IkReal j9array[1], cj9array[1], sj9array[1];
bool j9valid[1]={false};
_nj9 = 1;
IkReal x326=((cj11)*(r00)*(sj6));
IkReal x327=((r01)*(sj11)*(sj6));
IkReal x328=((cj11)*(cj6)*(r10));
IkReal x329=((cj6)*(r11)*(sj11));
if( IKabs(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x327)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(-0.207960835801989))*(x329)))+(((IkReal(-0.207960835801989))*(x326)))+(((IkReal(0.207960835801989))*(x328)))+(((IkReal(659.774225260116))*(px)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x326)))+(x327)+(x328)+(((IkReal(-1.00000000000000))*(x329))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x327)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(-0.207960835801989))*(x329)))+(((IkReal(-0.207960835801989))*(x326)))+(((IkReal(0.207960835801989))*(x328)))+(((IkReal(659.774225260116))*(px)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(x326)))+(x327)+(x328)+(((IkReal(-1.00000000000000))*(x329)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j9array[0]=IKatan2(((IkReal(-6.65929918781793))+(((IkReal(0.207960835801989))*(x327)))+(((IkReal(-659.774225260116))*(cj6)*(py)))+(((IkReal(-0.207960835801989))*(x329)))+(((IkReal(-0.207960835801989))*(x326)))+(((IkReal(0.207960835801989))*(x328)))+(((IkReal(659.774225260116))*(px)*(sj6)))), ((((IkReal(-1.00000000000000))*(x326)))+(x327)+(x328)+(((IkReal(-1.00000000000000))*(x329)))));
sj9array[0]=IKsin(j9array[0]);
cj9array[0]=IKcos(j9array[0]);
if( j9array[0] > IKPI )
{
    j9array[0]-=IK2PI;
}
else if( j9array[0] < -IKPI )
{    j9array[0]+=IK2PI;
}
j9valid[0] = true;
for(int ij9 = 0; ij9 < 1; ++ij9)
{
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
for(int iij9 = ij9+1; iij9 < 1; ++iij9)
{
if( j9valid[iij9] && IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH )
{
    j9valid[iij9]=false; _ij9[1] = iij9; break; 
}
}
j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];
{
IkReal evalcond[2];
IkReal x330=IKcos(j9);
IkReal x331=((IkReal(0.0620002000000000))*(sj11));
IkReal x332=((r01)*(sj6));
IkReal x333=((cj6)*(r11));
IkReal x334=((cj11)*(cj6)*(r10));
IkReal x335=((cj11)*(r00)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)*(x332)))+(((sj11)*(x333)))+(x330)+(x335)+(((IkReal(-1.00000000000000))*(x334))));
evalcond[1]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(x331)*(x333)))+(((x331)*(x332)))+(((px)*(sj6)))+(((IkReal(-0.0616850000000000))*(x330)))+(((IkReal(-1.00000000000000))*(cj6)*(py)))+(((IkReal(-0.00151567000000000))*(IKsin(j9))))+(((IkReal(-0.0620002000000000))*(x335)))+(((IkReal(0.0620002000000000))*(x334))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=((((IkReal(-46.2767620920121))*(sj9)))+(((IkReal(40.6981730851703))*((sj9)*(sj9))))+(((IkReal(-1.00000000000000))*(cj9)*(sj9))));
dummyeval[1]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x336=((IkReal(1.00000000000000))*(cj11));
IkReal x337=((r01)*(sj6));
IkReal x338=((cj6)*(sj7));
IkReal x339=((r01)*(sj11));
IkReal x340=((IkReal(1.00000000000000))*(cj6));
IkReal x341=((IkReal(0.0620002000000000))*(sj11));
IkReal x342=((cj11)*(r10));
IkReal x343=((r11)*(sj11));
IkReal x344=((sj6)*(sj7));
IkReal x345=((r21)*(sj11));
IkReal x346=((r00)*(sj6));
IkReal x347=((cj7)*(sj6));
IkReal x348=((cj6)*(r10));
IkReal x349=((IkReal(1.00000000000000))*(sj11));
IkReal x350=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x340))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x343)))+(((IkReal(-1.00000000000000))*(x336)*(x348)))+(((cj11)*(x346)))+(((IkReal(-1.00000000000000))*(x337)*(x349))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x336)*(x337)))+(((r11)*(x350)))+(((sj11)*(x348)))+(((IkReal(-1.00000000000000))*(x346)*(x349))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((x337)*(x341)))+(((IkReal(-0.0620002000000000))*(cj11)*(x346)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x340)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x341)))+(((IkReal(0.0620002000000000))*(cj6)*(x342))));
evalcond[5]=((((x343)*(x344)))+(((cj7)*(x345)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x336)))+(((IkReal(-1.00000000000000))*(r00)*(x336)*(x338)))+(((x338)*(x339)))+(((IkReal(-1.00000000000000))*(r10)*(x336)*(x344))));
evalcond[6]=((((sj7)*(x345)))+(((IkReal(-1.00000000000000))*(cj7)*(x339)*(x340)))+(((cj7)*(r00)*(x350)))+(((IkReal(-1.00000000000000))*(x343)*(x347)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x336)))+(((x342)*(x347))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x351=((IkReal(0.0461159197006079))*(sj7));
IkReal x352=((IkReal(0.194358017756648))*(cj7));
IkReal x353=((IkReal(3.13479662576327))*(sj7));
IkReal x354=((cj7)*(sj6));
IkReal x355=((r11)*(sj11));
IkReal x356=((r21)*(sj11));
IkReal x357=((IkReal(0.194358017756648))*(sj7));
IkReal x358=((IkReal(0.743802757097685))*(py));
IkReal x359=((IkReal(0.0461159197006079))*(cj7));
IkReal x360=((cj11)*(r20));
IkReal x361=((IkReal(0.743802757097685))*(pz));
IkReal x362=((cj6)*(px));
IkReal x363=((IkReal(3.13479662576327))*(cj7));
IkReal x364=((cj11)*(r10)*(sj6));
IkReal x365=((cj11)*(cj6)*(r00));
IkReal x366=((IkReal(0.743802757097685))*(x362));
IkReal x367=((cj6)*(r01)*(sj11));
IkReal x368=((IkReal(0.194358017756648))*(x367));
if( IKabs(((IkReal(0.846395088956082))+(((cj7)*(x366)))+(((IkReal(0.0461159197006079))*(x354)*(x355)))+(((IkReal(-1.00000000000000))*(x359)*(x365)))+(((x359)*(x367)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x356)))+(((IkReal(-0.0461159197006079))*(cj11)*(r10)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x356)))+(((x354)*(x358)))+(((IkReal(-1.00000000000000))*(x353)*(x362)))+(((x352)*(x360)))+(((IkReal(-1.00000000000000))*(sj6)*(x355)*(x357)))+(((IkReal(-1.00000000000000))*(x357)*(x367)))+(((IkReal(-1.00000000000000))*(pz)*(x363)))+(((x357)*(x364)))+(((x351)*(x360)))+(((x357)*(x365))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.200826744416375))+(((x357)*(x360)))+(((IkReal(3.13479662576327))*(py)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x364)))+(((sj6)*(x352)*(x355)))+(((IkReal(-1.00000000000000))*(pz)*(x353)))+(((IkReal(-1.00000000000000))*(x351)*(x364)))+(((sj7)*(x366)))+(((cj7)*(x361)))+(((x352)*(x367)))+(((sj6)*(x351)*(x355)))+(((x351)*(x367)))+(((x356)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x365)))+(((IkReal(-1.00000000000000))*(x359)*(x360)))+(((IkReal(-1.00000000000000))*(x356)*(x357)))+(((sj6)*(sj7)*(x358)))+(((x362)*(x363)))+(((IkReal(-1.00000000000000))*(x351)*(x365))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.846395088956082))+(((cj7)*(x366)))+(((IkReal(0.0461159197006079))*(x354)*(x355)))+(((IkReal(-1.00000000000000))*(x359)*(x365)))+(((x359)*(x367)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x356)))+(((IkReal(-0.0461159197006079))*(cj11)*(r10)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x356)))+(((x354)*(x358)))+(((IkReal(-1.00000000000000))*(x353)*(x362)))+(((x352)*(x360)))+(((IkReal(-1.00000000000000))*(sj6)*(x355)*(x357)))+(((IkReal(-1.00000000000000))*(x357)*(x367)))+(((IkReal(-1.00000000000000))*(pz)*(x363)))+(((x357)*(x364)))+(((x351)*(x360)))+(((x357)*(x365)))))+IKsqr(((IkReal(-0.200826744416375))+(((x357)*(x360)))+(((IkReal(3.13479662576327))*(py)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x364)))+(((sj6)*(x352)*(x355)))+(((IkReal(-1.00000000000000))*(pz)*(x353)))+(((IkReal(-1.00000000000000))*(x351)*(x364)))+(((sj7)*(x366)))+(((cj7)*(x361)))+(((x352)*(x367)))+(((sj6)*(x351)*(x355)))+(((x351)*(x367)))+(((x356)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x365)))+(((IkReal(-1.00000000000000))*(x359)*(x360)))+(((IkReal(-1.00000000000000))*(x356)*(x357)))+(((sj6)*(sj7)*(x358)))+(((x362)*(x363)))+(((IkReal(-1.00000000000000))*(x351)*(x365)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(0.846395088956082))+(((cj7)*(x366)))+(((IkReal(0.0461159197006079))*(x354)*(x355)))+(((IkReal(-1.00000000000000))*(x359)*(x365)))+(((x359)*(x367)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x353)))+(((IkReal(-1.00000000000000))*(sj7)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x356)))+(((IkReal(-0.0461159197006079))*(cj11)*(r10)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x356)))+(((x354)*(x358)))+(((IkReal(-1.00000000000000))*(x353)*(x362)))+(((x352)*(x360)))+(((IkReal(-1.00000000000000))*(sj6)*(x355)*(x357)))+(((IkReal(-1.00000000000000))*(x357)*(x367)))+(((IkReal(-1.00000000000000))*(pz)*(x363)))+(((x357)*(x364)))+(((x351)*(x360)))+(((x357)*(x365)))), ((IkReal(-0.200826744416375))+(((x357)*(x360)))+(((IkReal(3.13479662576327))*(py)*(x354)))+(((IkReal(-1.00000000000000))*(x352)*(x364)))+(((sj6)*(x352)*(x355)))+(((IkReal(-1.00000000000000))*(pz)*(x353)))+(((IkReal(-1.00000000000000))*(x351)*(x364)))+(((sj7)*(x366)))+(((cj7)*(x361)))+(((x352)*(x367)))+(((sj6)*(x351)*(x355)))+(((x351)*(x367)))+(((x356)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x365)))+(((IkReal(-1.00000000000000))*(x359)*(x360)))+(((IkReal(-1.00000000000000))*(x356)*(x357)))+(((sj6)*(sj7)*(x358)))+(((x362)*(x363)))+(((IkReal(-1.00000000000000))*(x351)*(x365)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[2];
IkReal x369=IKcos(j8);
IkReal x370=IKsin(j8);
IkReal x371=((IkReal(0.0620002000000000))*(sj11));
IkReal x372=((cj6)*(sj7));
IkReal x373=((IkReal(0.0620002000000000))*(cj11));
IkReal x374=((cj7)*(sj6));
IkReal x375=((IkReal(1.00000000000000))*(pz));
IkReal x376=((sj6)*(sj7));
IkReal x377=((cj6)*(cj7));
evalcond[0]=((((IkReal(-0.301997930000000))*(x369)))+(((r01)*(x371)*(x377)))+(((IkReal(-1.00000000000000))*(r00)*(x373)*(x377)))+(((r11)*(x371)*(x374)))+(((r20)*(sj7)*(x373)))+(((px)*(x377)))+(((IkReal(-0.0716559700000000))*(x370)))+(((py)*(x374)))+(((IkReal(-1.00000000000000))*(sj7)*(x375)))+(((IkReal(-1.00000000000000))*(r10)*(x373)*(x374)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x371))));
evalcond[1]=((IkReal(0.270000000000000))+(((IkReal(0.0716559700000000))*(x369)))+(((cj7)*(r20)*(x373)))+(((IkReal(-1.00000000000000))*(cj7)*(x375)))+(((r10)*(x373)*(x376)))+(((IkReal(-0.301997930000000))*(x370)))+(((IkReal(-1.00000000000000))*(r01)*(x371)*(x372)))+(((IkReal(-1.00000000000000))*(px)*(x372)))+(((IkReal(-1.00000000000000))*(py)*(x376)))+(((r00)*(x372)*(x373)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x371)))+(((IkReal(-1.00000000000000))*(r11)*(x371)*(x376))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x378=((sj7)*(sj8));
IkReal x379=((cj11)*(r21));
IkReal x380=((cj6)*(r00));
IkReal x381=((cj8)*(sj7));
IkReal x382=((r10)*(sj6));
IkReal x383=((IkReal(1.00000000000000))*(cj8));
IkReal x384=((cj7)*(sj11));
IkReal x385=((r20)*(sj11));
IkReal x386=((cj6)*(cj7));
IkReal x387=((cj11)*(r01));
IkReal x388=((IkReal(1.00000000000000))*(sj8));
IkReal x389=((cj7)*(r12)*(sj6));
IkReal x390=((x384)*(x388));
IkReal x391=((cj11)*(cj7)*(r11)*(sj6));
if( IKabs(((gconst19)*(((((x381)*(x385)))+(((IkReal(-1.00000000000000))*(x380)*(x383)*(x384)))+(((IkReal(-1.00000000000000))*(x383)*(x386)*(x387)))+(((r02)*(sj8)*(x386)))+(((sj8)*(x389)))+(((IkReal(-1.00000000000000))*(x383)*(x391)))+(((x379)*(x381)))+(((IkReal(-1.00000000000000))*(r22)*(x378)))+(((IkReal(-1.00000000000000))*(x382)*(x383)*(x384))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x380)*(x390)))+(((IkReal(-1.00000000000000))*(r02)*(x383)*(x386)))+(((x378)*(x385)))+(((r22)*(x381)))+(((IkReal(-1.00000000000000))*(x386)*(x387)*(x388)))+(((x378)*(x379)))+(((IkReal(-1.00000000000000))*(x383)*(x389)))+(((IkReal(-1.00000000000000))*(x382)*(x390)))+(((IkReal(-1.00000000000000))*(x388)*(x391))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst19)*(((((x381)*(x385)))+(((IkReal(-1.00000000000000))*(x380)*(x383)*(x384)))+(((IkReal(-1.00000000000000))*(x383)*(x386)*(x387)))+(((r02)*(sj8)*(x386)))+(((sj8)*(x389)))+(((IkReal(-1.00000000000000))*(x383)*(x391)))+(((x379)*(x381)))+(((IkReal(-1.00000000000000))*(r22)*(x378)))+(((IkReal(-1.00000000000000))*(x382)*(x383)*(x384)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(x380)*(x390)))+(((IkReal(-1.00000000000000))*(r02)*(x383)*(x386)))+(((x378)*(x385)))+(((r22)*(x381)))+(((IkReal(-1.00000000000000))*(x386)*(x387)*(x388)))+(((x378)*(x379)))+(((IkReal(-1.00000000000000))*(x383)*(x389)))+(((IkReal(-1.00000000000000))*(x382)*(x390)))+(((IkReal(-1.00000000000000))*(x388)*(x391)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x392=IKcos(j10);
IkReal x393=IKsin(j10);
IkReal x394=((IkReal(1.00000000000000))*(cj7));
IkReal x395=((cj6)*(r02));
IkReal x396=((IkReal(1.00000000000000))*(sj7));
IkReal x397=((r20)*(sj11));
IkReal x398=((cj11)*(r21));
IkReal x399=((r12)*(sj6));
IkReal x400=((sj8)*(x393));
IkReal x401=((cj8)*(x393));
IkReal x402=((r10)*(sj11)*(sj6));
IkReal x403=((IkReal(1.00000000000000))*(x392));
IkReal x404=((cj11)*(cj6)*(r01));
IkReal x405=((cj11)*(r11)*(sj6));
IkReal x406=((cj6)*(r00)*(sj11));
IkReal x407=((cj8)*(x403));
evalcond[0]=((((IkReal(-1.00000000000000))*(x407)))+(((IkReal(-1.00000000000000))*(r22)*(x396)))+(x400)+(((cj7)*(x399)))+(((cj7)*(x395))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x396)*(x399)))+(((IkReal(-1.00000000000000))*(x401)))+(((IkReal(-1.00000000000000))*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(sj8)*(x403)))+(((IkReal(-1.00000000000000))*(r22)*(x394))));
evalcond[2]=((((sj7)*(x404)))+(((sj7)*(x405)))+(((IkReal(-1.00000000000000))*(x407)))+(((sj7)*(x406)))+(((cj7)*(x397)))+(((cj7)*(x398)))+(x400)+(((sj7)*(x402))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x394)*(x402)))+(((sj8)*(x392)))+(((IkReal(-1.00000000000000))*(x394)*(x406)))+(((IkReal(-1.00000000000000))*(x394)*(x404)))+(((sj7)*(x398)))+(x401)+(((IkReal(-1.00000000000000))*(x394)*(x405)))+(((sj7)*(x397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x408=((cj7)*(cj8));
IkReal x409=((r12)*(sj6));
IkReal x410=((cj6)*(r02));
IkReal x411=((IkReal(1.00000000000000))*(r22));
IkReal x412=((sj7)*(sj8));
IkReal x413=((cj7)*(sj8));
IkReal x414=((IkReal(1.00000000000000))*(cj8)*(sj7));
if( IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(x410)*(x414)))+(((IkReal(-1.00000000000000))*(x408)*(x411)))+(((IkReal(-1.00000000000000))*(x410)*(x413)))+(((r22)*(x412)))+(((IkReal(-1.00000000000000))*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(x409)*(x414))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(x409)*(x412)))+(((IkReal(-1.00000000000000))*(x411)*(x413)))+(((x408)*(x409)))+(((x408)*(x410)))+(((IkReal(-1.00000000000000))*(x410)*(x412)))+(((IkReal(-1.00000000000000))*(cj8)*(sj7)*(x411))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst18)*(((((IkReal(-1.00000000000000))*(x410)*(x414)))+(((IkReal(-1.00000000000000))*(x408)*(x411)))+(((IkReal(-1.00000000000000))*(x410)*(x413)))+(((r22)*(x412)))+(((IkReal(-1.00000000000000))*(x409)*(x413)))+(((IkReal(-1.00000000000000))*(x409)*(x414)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(x409)*(x412)))+(((IkReal(-1.00000000000000))*(x411)*(x413)))+(((x408)*(x409)))+(((x408)*(x410)))+(((IkReal(-1.00000000000000))*(x410)*(x412)))+(((IkReal(-1.00000000000000))*(cj8)*(sj7)*(x411)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x415=IKcos(j10);
IkReal x416=IKsin(j10);
IkReal x417=((IkReal(1.00000000000000))*(cj7));
IkReal x418=((cj6)*(r02));
IkReal x419=((IkReal(1.00000000000000))*(sj7));
IkReal x420=((r20)*(sj11));
IkReal x421=((cj11)*(r21));
IkReal x422=((r12)*(sj6));
IkReal x423=((sj8)*(x416));
IkReal x424=((cj8)*(x416));
IkReal x425=((r10)*(sj11)*(sj6));
IkReal x426=((IkReal(1.00000000000000))*(x415));
IkReal x427=((cj11)*(cj6)*(r01));
IkReal x428=((cj11)*(r11)*(sj6));
IkReal x429=((cj6)*(r00)*(sj11));
IkReal x430=((cj8)*(x426));
evalcond[0]=((((cj7)*(x422)))+(x423)+(((cj7)*(x418)))+(((IkReal(-1.00000000000000))*(r22)*(x419)))+(((IkReal(-1.00000000000000))*(x430))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x419)*(x422)))+(((IkReal(-1.00000000000000))*(r22)*(x417)))+(((IkReal(-1.00000000000000))*(x424)))+(((IkReal(-1.00000000000000))*(x418)*(x419)))+(((IkReal(-1.00000000000000))*(sj8)*(x426))));
evalcond[2]=((((sj7)*(x428)))+(((cj7)*(x420)))+(x423)+(((sj7)*(x427)))+(((cj7)*(x421)))+(((sj7)*(x425)))+(((IkReal(-1.00000000000000))*(x430)))+(((sj7)*(x429))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x417)*(x428)))+(((sj8)*(x415)))+(((sj7)*(x421)))+(((IkReal(-1.00000000000000))*(x417)*(x429)))+(((sj7)*(x420)))+(x424)+(((IkReal(-1.00000000000000))*(x417)*(x425)))+(((IkReal(-1.00000000000000))*(x417)*(x427))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x431=((IkReal(1.00000000000000))*(cj11));
IkReal x432=((r01)*(sj6));
IkReal x433=((cj6)*(sj7));
IkReal x434=((r01)*(sj11));
IkReal x435=((IkReal(1.00000000000000))*(cj6));
IkReal x436=((IkReal(0.0620002000000000))*(sj11));
IkReal x437=((cj11)*(r10));
IkReal x438=((r11)*(sj11));
IkReal x439=((sj6)*(sj7));
IkReal x440=((r21)*(sj11));
IkReal x441=((r00)*(sj6));
IkReal x442=((cj7)*(sj6));
IkReal x443=((cj6)*(r10));
IkReal x444=((IkReal(1.00000000000000))*(sj11));
IkReal x445=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x435))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x431)*(x443)))+(((cj11)*(x441)))+(((IkReal(-1.00000000000000))*(x432)*(x444)))+(((cj6)*(x438))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x441)*(x444)))+(((sj11)*(x443)))+(((IkReal(-1.00000000000000))*(x431)*(x432)))+(((r11)*(x445))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(0.0620002000000000))*(cj6)*(x437)))+(((IkReal(-1.00000000000000))*(py)*(x435)))+(((IkReal(-0.0620002000000000))*(cj11)*(x441)))+(((x432)*(x436)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x436))));
evalcond[5]=((((x438)*(x439)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x431)))+(((IkReal(-1.00000000000000))*(r00)*(x431)*(x433)))+(((cj7)*(x440)))+(((x433)*(x434)))+(((IkReal(-1.00000000000000))*(r10)*(x431)*(x439))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x438)*(x442)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x431)))+(((sj7)*(x440)))+(((IkReal(-1.00000000000000))*(cj7)*(x434)*(x435)))+(((cj7)*(r00)*(x445)))+(((x437)*(x442))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x446=((pz)*(sj7));
IkReal x447=((IkReal(0.195219728233755))*(cj11));
IkReal x448=((cj6)*(r00));
IkReal x449=((cj7)*(r20));
IkReal x450=((IkReal(0.0443608392241032))*(sj11));
IkReal x451=((cj6)*(cj7));
IkReal x452=((r21)*(sj7));
IkReal x453=((cj7)*(sj6));
IkReal x454=((IkReal(3.14869513701173))*(py));
IkReal x455=((cj7)*(pz));
IkReal x456=((IkReal(0.0443608392241032))*(cj11));
IkReal x457=((cj7)*(r21));
IkReal x458=((IkReal(0.195219728233755))*(sj11));
IkReal x459=((IkReal(0.715495098791668))*(px));
IkReal x460=((sj6)*(sj7));
IkReal x461=((cj6)*(sj7));
IkReal x462=((IkReal(3.14869513701173))*(px));
IkReal x463=((IkReal(0.715495098791668))*(py));
IkReal x464=((r20)*(sj7));
if( IKabs(((IkReal(0.850147686993167))+(((IkReal(-1.00000000000000))*(cj7)*(x448)*(x456)))+(((x456)*(x464)))+(((IkReal(-1.00000000000000))*(r01)*(x458)*(x461)))+(((IkReal(-1.00000000000000))*(r11)*(x458)*(x460)))+(((IkReal(-3.14869513701173))*(x455)))+(((IkReal(-1.00000000000000))*(x454)*(x460)))+(((IkReal(-0.715495098791668))*(x446)))+(((x447)*(x449)))+(((r01)*(x450)*(x451)))+(((x453)*(x463)))+(((IkReal(-1.00000000000000))*(x457)*(x458)))+(((IkReal(-1.00000000000000))*(r10)*(x453)*(x456)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(x461)*(x462)))+(((sj7)*(x447)*(x448)))+(((x451)*(x459)))+(((r10)*(x447)*(x460)))+(((r11)*(x450)*(x453))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.193183676673750))+(((r01)*(x451)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(x447)*(x448)))+(((IkReal(-3.14869513701173))*(x446)))+(((IkReal(-1.00000000000000))*(r10)*(x447)*(x453)))+(((x450)*(x457)))+(((x460)*(x463)))+(((r01)*(x450)*(x461)))+(((IkReal(0.715495098791668))*(x455)))+(((x447)*(x464)))+(((x451)*(x462)))+(((IkReal(-1.00000000000000))*(x449)*(x456)))+(((IkReal(-1.00000000000000))*(r10)*(x456)*(x460)))+(((r11)*(x453)*(x458)))+(((x453)*(x454)))+(((x459)*(x461)))+(((r11)*(x450)*(x460)))+(((IkReal(-1.00000000000000))*(sj7)*(x448)*(x456)))+(((IkReal(-1.00000000000000))*(x452)*(x458))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.850147686993167))+(((IkReal(-1.00000000000000))*(cj7)*(x448)*(x456)))+(((x456)*(x464)))+(((IkReal(-1.00000000000000))*(r01)*(x458)*(x461)))+(((IkReal(-1.00000000000000))*(r11)*(x458)*(x460)))+(((IkReal(-3.14869513701173))*(x455)))+(((IkReal(-1.00000000000000))*(x454)*(x460)))+(((IkReal(-0.715495098791668))*(x446)))+(((x447)*(x449)))+(((r01)*(x450)*(x451)))+(((x453)*(x463)))+(((IkReal(-1.00000000000000))*(x457)*(x458)))+(((IkReal(-1.00000000000000))*(r10)*(x453)*(x456)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(x461)*(x462)))+(((sj7)*(x447)*(x448)))+(((x451)*(x459)))+(((r10)*(x447)*(x460)))+(((r11)*(x450)*(x453)))))+IKsqr(((IkReal(-0.193183676673750))+(((r01)*(x451)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(x447)*(x448)))+(((IkReal(-3.14869513701173))*(x446)))+(((IkReal(-1.00000000000000))*(r10)*(x447)*(x453)))+(((x450)*(x457)))+(((x460)*(x463)))+(((r01)*(x450)*(x461)))+(((IkReal(0.715495098791668))*(x455)))+(((x447)*(x464)))+(((x451)*(x462)))+(((IkReal(-1.00000000000000))*(x449)*(x456)))+(((IkReal(-1.00000000000000))*(r10)*(x456)*(x460)))+(((r11)*(x453)*(x458)))+(((x453)*(x454)))+(((x459)*(x461)))+(((r11)*(x450)*(x460)))+(((IkReal(-1.00000000000000))*(sj7)*(x448)*(x456)))+(((IkReal(-1.00000000000000))*(x452)*(x458)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((IkReal(0.850147686993167))+(((IkReal(-1.00000000000000))*(cj7)*(x448)*(x456)))+(((x456)*(x464)))+(((IkReal(-1.00000000000000))*(r01)*(x458)*(x461)))+(((IkReal(-1.00000000000000))*(r11)*(x458)*(x460)))+(((IkReal(-3.14869513701173))*(x455)))+(((IkReal(-1.00000000000000))*(x454)*(x460)))+(((IkReal(-0.715495098791668))*(x446)))+(((x447)*(x449)))+(((r01)*(x450)*(x451)))+(((x453)*(x463)))+(((IkReal(-1.00000000000000))*(x457)*(x458)))+(((IkReal(-1.00000000000000))*(r10)*(x453)*(x456)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(x461)*(x462)))+(((sj7)*(x447)*(x448)))+(((x451)*(x459)))+(((r10)*(x447)*(x460)))+(((r11)*(x450)*(x453)))), ((IkReal(-0.193183676673750))+(((r01)*(x451)*(x458)))+(((IkReal(-1.00000000000000))*(cj7)*(x447)*(x448)))+(((IkReal(-3.14869513701173))*(x446)))+(((IkReal(-1.00000000000000))*(r10)*(x447)*(x453)))+(((x450)*(x457)))+(((x460)*(x463)))+(((r01)*(x450)*(x461)))+(((IkReal(0.715495098791668))*(x455)))+(((x447)*(x464)))+(((x451)*(x462)))+(((IkReal(-1.00000000000000))*(x449)*(x456)))+(((IkReal(-1.00000000000000))*(r10)*(x456)*(x460)))+(((r11)*(x453)*(x458)))+(((x453)*(x454)))+(((x459)*(x461)))+(((r11)*(x450)*(x460)))+(((IkReal(-1.00000000000000))*(sj7)*(x448)*(x456)))+(((IkReal(-1.00000000000000))*(x452)*(x458)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[2];
IkReal x465=IKcos(j8);
IkReal x466=IKsin(j8);
IkReal x467=((IkReal(0.0620002000000000))*(sj11));
IkReal x468=((cj6)*(sj7));
IkReal x469=((IkReal(0.0620002000000000))*(cj11));
IkReal x470=((cj7)*(sj6));
IkReal x471=((IkReal(1.00000000000000))*(pz));
IkReal x472=((sj6)*(sj7));
IkReal x473=((cj6)*(cj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x469)*(x470)))+(((r20)*(sj7)*(x469)))+(((IkReal(-1.00000000000000))*(r00)*(x469)*(x473)))+(((IkReal(-1.00000000000000))*(sj7)*(x471)))+(((IkReal(-1.00000000000000))*(r21)*(sj7)*(x467)))+(((r01)*(x467)*(x473)))+(((r11)*(x467)*(x470)))+(((py)*(x470)))+(((IkReal(-0.301997930000000))*(x465)))+(((IkReal(-0.0686246300000000))*(x466)))+(((px)*(x473))));
evalcond[1]=((IkReal(0.270000000000000))+(((IkReal(-0.301997930000000))*(x466)))+(((r00)*(x468)*(x469)))+(((IkReal(-1.00000000000000))*(cj7)*(x471)))+(((r10)*(x469)*(x472)))+(((IkReal(-1.00000000000000))*(px)*(x468)))+(((IkReal(-1.00000000000000))*(r11)*(x467)*(x472)))+(((cj7)*(r20)*(x469)))+(((IkReal(-1.00000000000000))*(py)*(x472)))+(((IkReal(0.0686246300000000))*(x465)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x467)))+(((IkReal(-1.00000000000000))*(r01)*(x467)*(x468))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x474=((IkReal(1.00000000000000))*(cj8));
IkReal x475=((cj6)*(sj7));
IkReal x476=((r10)*(sj11));
IkReal x477=((cj7)*(r22));
IkReal x478=((cj8)*(sj11));
IkReal x479=((cj11)*(r01));
IkReal x480=((cj7)*(r20));
IkReal x481=((cj11)*(r11));
IkReal x482=((sj6)*(sj7));
IkReal x483=((sj11)*(sj8));
IkReal x484=((cj11)*(cj7)*(r21));
IkReal x485=((sj8)*(x482));
if( IKabs(((gconst21)*(((((sj8)*(x475)*(x479)))+(((x480)*(x483)))+(((x476)*(x485)))+(((IkReal(-1.00000000000000))*(x474)*(x477)))+(((IkReal(-1.00000000000000))*(r02)*(x474)*(x475)))+(((sj8)*(x484)))+(((IkReal(-1.00000000000000))*(r12)*(x474)*(x482)))+(((r00)*(x475)*(x483)))+(((x481)*(x485))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((sj8)*(x477)))+(((cj8)*(x484)))+(((r12)*(x485)))+(((r02)*(sj8)*(x475)))+(((cj8)*(x475)*(x479)))+(((cj8)*(x481)*(x482)))+(((x478)*(x480)))+(((cj8)*(x476)*(x482)))+(((r00)*(x475)*(x478))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst21)*(((((sj8)*(x475)*(x479)))+(((x480)*(x483)))+(((x476)*(x485)))+(((IkReal(-1.00000000000000))*(x474)*(x477)))+(((IkReal(-1.00000000000000))*(r02)*(x474)*(x475)))+(((sj8)*(x484)))+(((IkReal(-1.00000000000000))*(r12)*(x474)*(x482)))+(((r00)*(x475)*(x483)))+(((x481)*(x485)))))), ((gconst21)*(((((sj8)*(x477)))+(((cj8)*(x484)))+(((r12)*(x485)))+(((r02)*(sj8)*(x475)))+(((cj8)*(x475)*(x479)))+(((cj8)*(x481)*(x482)))+(((x478)*(x480)))+(((cj8)*(x476)*(x482)))+(((r00)*(x475)*(x478)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x486=IKsin(j10);
IkReal x487=IKcos(j10);
IkReal x488=((IkReal(1.00000000000000))*(cj7));
IkReal x489=((cj6)*(r02));
IkReal x490=((IkReal(1.00000000000000))*(sj7));
IkReal x491=((r20)*(sj11));
IkReal x492=((cj11)*(r21));
IkReal x493=((r12)*(sj6));
IkReal x494=((cj8)*(x486));
IkReal x495=((r10)*(sj11)*(sj6));
IkReal x496=((IkReal(1.00000000000000))*(x487));
IkReal x497=((cj11)*(cj6)*(r01));
IkReal x498=((sj8)*(x486));
IkReal x499=((cj11)*(r11)*(sj6));
IkReal x500=((cj6)*(r00)*(sj11));
IkReal x501=((sj8)*(x496));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(x496)))+(((cj7)*(x489)))+(((IkReal(-1.00000000000000))*(x498)))+(((IkReal(-1.00000000000000))*(r22)*(x490)))+(((cj7)*(x493))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x490)*(x493)))+(x494)+(((IkReal(-1.00000000000000))*(r22)*(x488))));
evalcond[2]=((((sj7)*(x495)))+(((cj7)*(x492)))+(((sj7)*(x500)))+(x498)+(((cj8)*(x487)))+(((sj7)*(x499)))+(((cj7)*(x491)))+(((sj7)*(x497))));
evalcond[3]=((((sj7)*(x492)))+(((sj7)*(x491)))+(((IkReal(-1.00000000000000))*(x501)))+(x494)+(((IkReal(-1.00000000000000))*(x488)*(x497)))+(((IkReal(-1.00000000000000))*(x488)*(x500)))+(((IkReal(-1.00000000000000))*(x488)*(x499)))+(((IkReal(-1.00000000000000))*(x488)*(x495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x502=((r12)*(sj6));
IkReal x503=((cj7)*(cj8));
IkReal x504=((cj6)*(r02));
IkReal x505=((cj8)*(sj7));
IkReal x506=((cj7)*(sj8));
IkReal x507=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x508=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(sj8)*(x507)))+(((x504)*(x505)))+(((x502)*(x505)))+(((r22)*(x503)))+(((x502)*(x506)))+(((x504)*(x506))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r22)*(x505)))+(((IkReal(-1.00000000000000))*(r22)*(x506)))+(((x503)*(x504)))+(((x502)*(x503)))+(((IkReal(-1.00000000000000))*(x502)*(x508)))+(((IkReal(-1.00000000000000))*(x504)*(x508))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(sj8)*(x507)))+(((x504)*(x505)))+(((x502)*(x505)))+(((r22)*(x503)))+(((x502)*(x506)))+(((x504)*(x506)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(r22)*(x505)))+(((IkReal(-1.00000000000000))*(r22)*(x506)))+(((x503)*(x504)))+(((x502)*(x503)))+(((IkReal(-1.00000000000000))*(x502)*(x508)))+(((IkReal(-1.00000000000000))*(x504)*(x508)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x509=IKsin(j10);
IkReal x510=IKcos(j10);
IkReal x511=((IkReal(1.00000000000000))*(cj7));
IkReal x512=((cj6)*(r02));
IkReal x513=((IkReal(1.00000000000000))*(sj7));
IkReal x514=((r20)*(sj11));
IkReal x515=((cj11)*(r21));
IkReal x516=((r12)*(sj6));
IkReal x517=((cj8)*(x509));
IkReal x518=((r10)*(sj11)*(sj6));
IkReal x519=((IkReal(1.00000000000000))*(x510));
IkReal x520=((cj11)*(cj6)*(r01));
IkReal x521=((sj8)*(x509));
IkReal x522=((cj11)*(r11)*(sj6));
IkReal x523=((cj6)*(r00)*(sj11));
IkReal x524=((sj8)*(x519));
evalcond[0]=((((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(cj8)*(x519)))+(((cj7)*(x512)))+(((IkReal(-1.00000000000000))*(r22)*(x513)))+(((cj7)*(x516))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(x513)*(x516)))+(x517)+(((IkReal(-1.00000000000000))*(x524)))+(((IkReal(-1.00000000000000))*(r22)*(x511))));
evalcond[2]=((((cj7)*(x514)))+(((cj7)*(x515)))+(((sj7)*(x518)))+(((sj7)*(x523)))+(((sj7)*(x520)))+(((cj8)*(x510)))+(((sj7)*(x522)))+(x521));
evalcond[3]=((x517)+(((IkReal(-1.00000000000000))*(x524)))+(((sj7)*(x515)))+(((IkReal(-1.00000000000000))*(x511)*(x522)))+(((IkReal(-1.00000000000000))*(x511)*(x520)))+(((sj7)*(x514)))+(((IkReal(-1.00000000000000))*(x511)*(x523)))+(((IkReal(-1.00000000000000))*(x511)*(x518))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x525=((cj11)*(r20));
IkReal x526=((sj7)*(sj9));
IkReal x527=((IkReal(30199793.0000000))*(cj7));
IkReal x528=((IkReal(6200020.00000000))*(sj11));
IkReal x529=((cj7)*(sj9));
IkReal x530=((cj6)*(r01));
IkReal x531=((sj6)*(sj7));
IkReal x532=((cj11)*(r10));
IkReal x533=((IkReal(1.00000000000000))*(sj11));
IkReal x534=((IkReal(30199793.0000000))*(sj11));
IkReal x535=((cj11)*(cj6)*(r00)*(sj7));
if( IKabs(((((IKabs(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(30199793.0000000))*(x531)*(x532)))+(((IkReal(-6200020.00000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x528)*(x529)*(x530)))+(((x525)*(x527)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x534)))+(((IkReal(30199793.0000000))*(x535)))+(((IkReal(6200020.00000000))*(cj11)*(cj6)*(r00)*(x529)))+(((IkReal(-100000000.000000))*(py)*(sj6)*(x529)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x527)))+(((IkReal(-100000000.000000))*(cj6)*(px)*(x529)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x528)*(x529)))+(((IkReal(100000000.000000))*(pz)*(x526)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x534)))+(((r21)*(x526)*(x528)))+(((IkReal(6200020.00000000))*(sj6)*(x529)*(x532))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((x531)*(x532)))+(((cj7)*(x525)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x533)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x533)))+(x535))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(30199793.0000000))*(x531)*(x532)))+(((IkReal(-6200020.00000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x528)*(x529)*(x530)))+(((x525)*(x527)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x534)))+(((IkReal(30199793.0000000))*(x535)))+(((IkReal(6200020.00000000))*(cj11)*(cj6)*(r00)*(x529)))+(((IkReal(-100000000.000000))*(py)*(sj6)*(x529)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x527)))+(((IkReal(-100000000.000000))*(cj6)*(px)*(x529)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x528)*(x529)))+(((IkReal(100000000.000000))*(pz)*(x526)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x534)))+(((r21)*(x526)*(x528)))+(((IkReal(6200020.00000000))*(sj6)*(x529)*(x532)))))))+IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((x531)*(x532)))+(((cj7)*(x525)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x533)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x533)))+(x535)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9))))) != 0)?((IkReal)1/(((((IkReal(-7014030.00000000))*(sj9)))+(((IkReal(6168500.00000000))*((sj9)*(sj9))))+(((IkReal(-151567.000000000))*(cj9)*(sj9)))))):(IkReal)1.0e30))*(((((IkReal(30199793.0000000))*(x531)*(x532)))+(((IkReal(-6200020.00000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x528)*(x529)*(x530)))+(((x525)*(x527)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x534)))+(((IkReal(30199793.0000000))*(x535)))+(((IkReal(6200020.00000000))*(cj11)*(cj6)*(r00)*(x529)))+(((IkReal(-100000000.000000))*(py)*(sj6)*(x529)))+(((IkReal(-1.00000000000000))*(r21)*(sj11)*(x527)))+(((IkReal(-100000000.000000))*(cj6)*(px)*(x529)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x528)*(x529)))+(((IkReal(100000000.000000))*(pz)*(x526)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x534)))+(((r21)*(x526)*(x528)))+(((IkReal(6200020.00000000))*(sj6)*(x529)*(x532)))))), ((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((x531)*(x532)))+(((cj7)*(x525)))+(((IkReal(-1.00000000000000))*(sj7)*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(r11)*(x531)*(x533)))+(((IkReal(-1.00000000000000))*(cj7)*(r21)*(x533)))+(x535)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x536=IKsin(j8);
IkReal x537=IKcos(j8);
IkReal x538=((IkReal(0.0620002000000000))*(sj11));
IkReal x539=((cj7)*(r21));
IkReal x540=((IkReal(1.00000000000000))*(cj11));
IkReal x541=((cj7)*(r20));
IkReal x542=((IkReal(0.00151567000000000))*(cj9));
IkReal x543=((r21)*(sj7));
IkReal x544=((IkReal(1.00000000000000))*(cj7));
IkReal x545=((cj7)*(sj6));
IkReal x546=((IkReal(0.0620002000000000))*(cj11));
IkReal x547=((IkReal(1.00000000000000))*(sj7));
IkReal x548=((cj6)*(px));
IkReal x549=((cj6)*(r01));
IkReal x550=((sj7)*(x549));
IkReal x551=((cj11)*(r20)*(sj7));
IkReal x552=((sj9)*(x537));
IkReal x553=((cj6)*(r00)*(sj7));
IkReal x554=((r11)*(sj6)*(sj7));
IkReal x555=((sj9)*(x536));
IkReal x556=((r10)*(sj6)*(sj7));
IkReal x557=((cj6)*(cj7)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(x540)*(x556)))+(((sj11)*(x550)))+(((sj11)*(x539)))+(((IkReal(-1.00000000000000))*(x540)*(x553)))+(x552)+(((sj11)*(x554)))+(((IkReal(-1.00000000000000))*(x540)*(x541))));
evalcond[1]=((((sj11)*(x543)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x540)))+(((IkReal(-1.00000000000000))*(r11)*(sj11)*(sj6)*(x544)))+(((IkReal(-1.00000000000000))*(x555)))+(((IkReal(-1.00000000000000))*(sj11)*(x544)*(x549)))+(((cj11)*(x557)))+(((cj11)*(r10)*(x545))));
evalcond[2]=((((py)*(x545)))+(((IkReal(-1.00000000000000))*(x546)*(x557)))+(((IkReal(-0.301997930000000))*(x537)))+(((r20)*(sj7)*(x546)))+(((IkReal(0.0616850000000000))*(x555)))+(((IkReal(-1.00000000000000))*(pz)*(x547)))+(((IkReal(-1.00000000000000))*(r10)*(x545)*(x546)))+(((IkReal(-1.00000000000000))*(x536)*(x542)))+(((cj7)*(x538)*(x549)))+(((cj7)*(x548)))+(((r11)*(x538)*(x545)))+(((IkReal(-0.0701403000000000))*(x536)))+(((IkReal(-1.00000000000000))*(x538)*(x543))));
evalcond[3]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x538)*(x554)))+(((IkReal(0.0701403000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x538)*(x550)))+(((x546)*(x556)))+(((x541)*(x546)))+(((x537)*(x542)))+(((IkReal(-0.0616850000000000))*(x552)))+(((IkReal(-1.00000000000000))*(pz)*(x544)))+(((x546)*(x553)))+(((IkReal(-1.00000000000000))*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((IkReal(-0.301997930000000))*(x536)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x547))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x558=((IkReal(0.0620002000000000))*(cj7));
IkReal x559=((r21)*(sj11));
IkReal x560=((IkReal(1.00000000000000))*(cj11));
IkReal x561=((r01)*(sj6));
IkReal x562=((r20)*(sj7));
IkReal x563=((IkReal(1.00000000000000))*(cj6));
IkReal x564=((IkReal(0.0620002000000000))*(cj11));
IkReal x565=((IkReal(1.00000000000000))*(sj7));
IkReal x566=((IkReal(0.0620002000000000))*(sj11));
IkReal x567=((cj6)*(r10));
IkReal x568=((IkReal(1.00000000000000))*(cj7));
IkReal x569=((cj7)*(sj6));
IkReal x570=((r00)*(sj6));
IkReal x571=((r11)*(sj11));
IkReal x572=((IkReal(0.0620002000000000))*(sj7));
IkReal x573=((cj11)*(r10));
IkReal x574=((IkReal(1.00000000000000))*(sj11));
IkReal x575=((cj6)*(r11));
IkReal x576=((r01)*(sj11));
IkReal x577=((cj11)*(cj6)*(r00));
IkReal x578=((r11)*(sj6)*(sj7));
IkReal x579=((r10)*(sj6)*(sj7));
IkReal x580=((cj6)*(sj7)*(x576));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x563))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x571)))+(((IkReal(-1.00000000000000))*(x560)*(x567)))+(((IkReal(-1.00000000000000))*(x561)*(x574)))+(((cj11)*(x570))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x570)*(x574)))+(((cj11)*(x575)))+(((sj11)*(x567)))+(((IkReal(-1.00000000000000))*(x560)*(x561))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((x561)*(x566)))+(((x564)*(x567)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x566)*(x575)))+(((IkReal(-1.00000000000000))*(x564)*(x570)))+(((IkReal(-1.00000000000000))*(py)*(x563))));
evalcond[5]=((((cj7)*(x559)))+(((IkReal(-1.00000000000000))*(x560)*(x579)))+(((sj6)*(sj7)*(x571)))+(x580)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x560)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x560))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj6)*(x568)*(x571)))+(((x569)*(x573)))+(((IkReal(-1.00000000000000))*(cj7)*(x563)*(x576)))+(((sj7)*(x559)))+(((IkReal(-1.00000000000000))*(x560)*(x562)))+(((cj7)*(x577))));
evalcond[7]=((((IkReal(-1.00000000000000))*(pz)*(x565)))+(((py)*(x569)))+(((x562)*(x564)))+(((IkReal(-0.0716559700000000))*(sj8)))+(((IkReal(-1.00000000000000))*(x559)*(x572)))+(((sj6)*(x558)*(x571)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x558)*(x577)))+(((IkReal(-1.00000000000000))*(sj6)*(x558)*(x573)))+(((IkReal(-0.301997930000000))*(cj8)))+(((cj6)*(x558)*(x576))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x563)))+(((IkReal(0.0716559700000000))*(cj8)))+(((cj6)*(r00)*(sj7)*(x564)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x566)))+(((x564)*(x579)))+(((IkReal(-1.00000000000000))*(x558)*(x559)))+(((IkReal(-1.00000000000000))*(pz)*(x568)))+(((cj11)*(r20)*(x558)))+(((IkReal(-1.00000000000000))*(x566)*(x578)))+(((IkReal(-0.301997930000000))*(sj8)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x565))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x581=((sj7)*(sj8));
IkReal x582=((cj11)*(r21));
IkReal x583=((r20)*(sj11));
IkReal x584=((cj8)*(sj7));
IkReal x585=((IkReal(1.00000000000000))*(sj11));
IkReal x586=((IkReal(1.00000000000000))*(cj11));
IkReal x587=((cj7)*(sj6)*(sj8));
IkReal x588=((cj6)*(cj7)*(sj8));
IkReal x589=((cj7)*(cj8)*(sj6));
IkReal x590=((cj6)*(cj7)*(cj8));
if( IKabs(((gconst4)*(((((r02)*(x588)))+(((IkReal(-1.00000000000000))*(r22)*(x581)))+(((IkReal(-1.00000000000000))*(r10)*(x585)*(x589)))+(((r12)*(x587)))+(((IkReal(-1.00000000000000))*(r01)*(x586)*(x590)))+(((x582)*(x584)))+(((x583)*(x584)))+(((IkReal(-1.00000000000000))*(r00)*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(r11)*(x586)*(x589))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r22)*(x584)))+(((x581)*(x583)))+(((IkReal(-1.00000000000000))*(r01)*(x586)*(x588)))+(((IkReal(-1.00000000000000))*(r12)*(x589)))+(((IkReal(-1.00000000000000))*(r10)*(x585)*(x587)))+(((IkReal(-1.00000000000000))*(r02)*(x590)))+(((IkReal(-1.00000000000000))*(r11)*(x586)*(x587)))+(((x581)*(x582)))+(((IkReal(-1.00000000000000))*(r00)*(x585)*(x588))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((r02)*(x588)))+(((IkReal(-1.00000000000000))*(r22)*(x581)))+(((IkReal(-1.00000000000000))*(r10)*(x585)*(x589)))+(((r12)*(x587)))+(((IkReal(-1.00000000000000))*(r01)*(x586)*(x590)))+(((x582)*(x584)))+(((x583)*(x584)))+(((IkReal(-1.00000000000000))*(r00)*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(r11)*(x586)*(x589)))))), ((gconst4)*(((((r22)*(x584)))+(((x581)*(x583)))+(((IkReal(-1.00000000000000))*(r01)*(x586)*(x588)))+(((IkReal(-1.00000000000000))*(r12)*(x589)))+(((IkReal(-1.00000000000000))*(r10)*(x585)*(x587)))+(((IkReal(-1.00000000000000))*(r02)*(x590)))+(((IkReal(-1.00000000000000))*(r11)*(x586)*(x587)))+(((x581)*(x582)))+(((IkReal(-1.00000000000000))*(r00)*(x585)*(x588)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x591=IKcos(j10);
IkReal x592=IKsin(j10);
IkReal x593=((IkReal(1.00000000000000))*(cj7));
IkReal x594=((cj6)*(r02));
IkReal x595=((IkReal(1.00000000000000))*(sj7));
IkReal x596=((r20)*(sj11));
IkReal x597=((cj11)*(r21));
IkReal x598=((r12)*(sj6));
IkReal x599=((sj8)*(x592));
IkReal x600=((cj8)*(x592));
IkReal x601=((r10)*(sj11)*(sj6));
IkReal x602=((IkReal(1.00000000000000))*(x591));
IkReal x603=((cj11)*(cj6)*(r01));
IkReal x604=((cj11)*(r11)*(sj6));
IkReal x605=((cj6)*(r00)*(sj11));
IkReal x606=((cj8)*(x602));
evalcond[0]=((((IkReal(-1.00000000000000))*(x606)))+(((IkReal(-1.00000000000000))*(r22)*(x595)))+(((cj7)*(x594)))+(x599)+(((cj7)*(x598))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x593)))+(((IkReal(-1.00000000000000))*(x600)))+(((IkReal(-1.00000000000000))*(sj8)*(x602)))+(((IkReal(-1.00000000000000))*(x594)*(x595)))+(((IkReal(-1.00000000000000))*(x595)*(x598))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x606)))+(((cj7)*(x597)))+(((sj7)*(x604)))+(((sj7)*(x605)))+(((cj7)*(x596)))+(((sj7)*(x603)))+(x599)+(((sj7)*(x601))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x593)*(x601)))+(((IkReal(-1.00000000000000))*(x593)*(x604)))+(((IkReal(-1.00000000000000))*(x593)*(x603)))+(((sj7)*(x597)))+(((sj7)*(x596)))+(((sj8)*(x591)))+(((IkReal(-1.00000000000000))*(x593)*(x605)))+(x600));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x607=((cj7)*(cj8));
IkReal x608=((r12)*(sj6));
IkReal x609=((IkReal(1.00000000000000))*(sj7));
IkReal x610=((cj6)*(r02));
IkReal x611=((IkReal(1.00000000000000))*(r22));
IkReal x612=((cj7)*(sj8));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x608)*(x612)))+(((IkReal(-1.00000000000000))*(x610)*(x612)))+(((IkReal(-1.00000000000000))*(x607)*(x611)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(x608)*(x609)))+(((IkReal(-1.00000000000000))*(cj8)*(x609)*(x610))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(r22)*(x609)))+(((IkReal(-1.00000000000000))*(sj8)*(x609)*(x610)))+(((x607)*(x610)))+(((x607)*(x608)))+(((IkReal(-1.00000000000000))*(x611)*(x612)))+(((IkReal(-1.00000000000000))*(sj8)*(x608)*(x609))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x608)*(x612)))+(((IkReal(-1.00000000000000))*(x610)*(x612)))+(((IkReal(-1.00000000000000))*(x607)*(x611)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(cj8)*(x608)*(x609)))+(((IkReal(-1.00000000000000))*(cj8)*(x609)*(x610)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(r22)*(x609)))+(((IkReal(-1.00000000000000))*(sj8)*(x609)*(x610)))+(((x607)*(x610)))+(((x607)*(x608)))+(((IkReal(-1.00000000000000))*(x611)*(x612)))+(((IkReal(-1.00000000000000))*(sj8)*(x608)*(x609)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x613=IKcos(j10);
IkReal x614=IKsin(j10);
IkReal x615=((IkReal(1.00000000000000))*(cj7));
IkReal x616=((cj6)*(r02));
IkReal x617=((IkReal(1.00000000000000))*(sj7));
IkReal x618=((r20)*(sj11));
IkReal x619=((cj11)*(r21));
IkReal x620=((r12)*(sj6));
IkReal x621=((sj8)*(x614));
IkReal x622=((cj8)*(x614));
IkReal x623=((r10)*(sj11)*(sj6));
IkReal x624=((IkReal(1.00000000000000))*(x613));
IkReal x625=((cj11)*(cj6)*(r01));
IkReal x626=((cj11)*(r11)*(sj6));
IkReal x627=((cj6)*(r00)*(sj11));
IkReal x628=((cj8)*(x624));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x617)))+(((cj7)*(x616)))+(((IkReal(-1.00000000000000))*(x628)))+(x621)+(((cj7)*(x620))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x622)))+(((IkReal(-1.00000000000000))*(x617)*(x620)))+(((IkReal(-1.00000000000000))*(sj8)*(x624)))+(((IkReal(-1.00000000000000))*(r22)*(x615)))+(((IkReal(-1.00000000000000))*(x616)*(x617))));
evalcond[2]=((((cj7)*(x619)))+(((sj7)*(x625)))+(((cj7)*(x618)))+(((sj7)*(x623)))+(((sj7)*(x627)))+(((IkReal(-1.00000000000000))*(x628)))+(((sj7)*(x626)))+(x621));
evalcond[3]=((((IkReal(-1.00000000000000))*(x615)*(x626)))+(((sj7)*(x619)))+(((sj7)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x623)))+(((IkReal(-1.00000000000000))*(x615)*(x627)))+(x622)+(((IkReal(-1.00000000000000))*(x615)*(x625)))+(((sj8)*(x613))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x629=((IkReal(0.0620002000000000))*(cj7));
IkReal x630=((r21)*(sj11));
IkReal x631=((IkReal(1.00000000000000))*(cj11));
IkReal x632=((r01)*(sj6));
IkReal x633=((r20)*(sj7));
IkReal x634=((IkReal(1.00000000000000))*(cj6));
IkReal x635=((IkReal(0.0620002000000000))*(cj11));
IkReal x636=((IkReal(1.00000000000000))*(sj7));
IkReal x637=((IkReal(0.0620002000000000))*(sj11));
IkReal x638=((cj6)*(r10));
IkReal x639=((IkReal(1.00000000000000))*(cj7));
IkReal x640=((cj7)*(sj6));
IkReal x641=((r00)*(sj6));
IkReal x642=((r11)*(sj11));
IkReal x643=((IkReal(0.0620002000000000))*(sj7));
IkReal x644=((cj11)*(r10));
IkReal x645=((IkReal(1.00000000000000))*(sj11));
IkReal x646=((cj6)*(r11));
IkReal x647=((r01)*(sj11));
IkReal x648=((cj11)*(cj6)*(r00));
IkReal x649=((r11)*(sj6)*(sj7));
IkReal x650=((r10)*(sj6)*(sj7));
IkReal x651=((cj6)*(sj7)*(x647));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x634))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x631)*(x638)))+(((IkReal(-1.00000000000000))*(x632)*(x645)))+(((cj11)*(x641)))+(((cj6)*(x642))));
evalcond[3]=((((cj11)*(x646)))+(((sj11)*(x638)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(-1.00000000000000))*(x641)*(x645))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(x635)*(x641)))+(((x632)*(x637)))+(((px)*(sj6)))+(((x635)*(x638)))+(((IkReal(-1.00000000000000))*(py)*(x634)))+(((IkReal(-1.00000000000000))*(x637)*(x646))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x631)))+(x651)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x631)))+(((sj6)*(sj7)*(x642)))+(((IkReal(-1.00000000000000))*(x631)*(x650)))+(((cj7)*(x630))));
evalcond[6]=((((cj7)*(x648)))+(((IkReal(-1.00000000000000))*(cj7)*(x634)*(x647)))+(((x640)*(x644)))+(((IkReal(-1.00000000000000))*(x631)*(x633)))+(((sj7)*(x630)))+(((IkReal(-1.00000000000000))*(sj6)*(x639)*(x642))));
evalcond[7]=((((IkReal(-0.0686246300000000))*(sj8)))+(((IkReal(-1.00000000000000))*(sj6)*(x629)*(x644)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(pz)*(x636)))+(((x633)*(x635)))+(((sj6)*(x629)*(x642)))+(((IkReal(-1.00000000000000))*(x630)*(x643)))+(((IkReal(-1.00000000000000))*(x629)*(x648)))+(((IkReal(-0.301997930000000))*(cj8)))+(((cj6)*(x629)*(x647)))+(((py)*(x640))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x629)*(x630)))+(((x635)*(x650)))+(((IkReal(-1.00000000000000))*(pz)*(x639)))+(((IkReal(-1.00000000000000))*(x637)*(x649)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x637)))+(((cj11)*(r20)*(x629)))+(((cj6)*(r00)*(sj7)*(x635)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x634)))+(((IkReal(0.0686246300000000))*(cj8)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x636)))+(((IkReal(-0.301997930000000))*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x652=((IkReal(1.00000000000000))*(cj8));
IkReal x653=((cj6)*(sj7));
IkReal x654=((cj8)*(sj11));
IkReal x655=((cj7)*(r20));
IkReal x656=((sj6)*(sj7));
IkReal x657=((sj11)*(sj8));
IkReal x658=((cj7)*(r22));
IkReal x659=((cj11)*(sj8));
IkReal x660=((cj11)*(cj8));
IkReal x661=((cj11)*(cj7)*(r21));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x652)*(x658)))+(((r01)*(x653)*(x659)))+(((IkReal(-1.00000000000000))*(r12)*(x652)*(x656)))+(((cj7)*(r21)*(x659)))+(((r10)*(x656)*(x657)))+(((r00)*(x653)*(x657)))+(((r11)*(x656)*(x659)))+(((x655)*(x657)))+(((IkReal(-1.00000000000000))*(r02)*(x652)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x654)*(x655)))+(((cj7)*(r21)*(x660)))+(((r01)*(x653)*(x660)))+(((r02)*(sj8)*(x653)))+(((r10)*(x654)*(x656)))+(((sj8)*(x658)))+(((r00)*(x653)*(x654)))+(((r11)*(x656)*(x660)))+(((r12)*(sj8)*(x656))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x652)*(x658)))+(((r01)*(x653)*(x659)))+(((IkReal(-1.00000000000000))*(r12)*(x652)*(x656)))+(((cj7)*(r21)*(x659)))+(((r10)*(x656)*(x657)))+(((r00)*(x653)*(x657)))+(((r11)*(x656)*(x659)))+(((x655)*(x657)))+(((IkReal(-1.00000000000000))*(r02)*(x652)*(x653)))))), ((gconst6)*(((((x654)*(x655)))+(((cj7)*(r21)*(x660)))+(((r01)*(x653)*(x660)))+(((r02)*(sj8)*(x653)))+(((r10)*(x654)*(x656)))+(((sj8)*(x658)))+(((r00)*(x653)*(x654)))+(((r11)*(x656)*(x660)))+(((r12)*(sj8)*(x656)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x662=IKsin(j10);
IkReal x663=IKcos(j10);
IkReal x664=((IkReal(1.00000000000000))*(cj7));
IkReal x665=((cj6)*(r02));
IkReal x666=((IkReal(1.00000000000000))*(sj7));
IkReal x667=((r20)*(sj11));
IkReal x668=((cj11)*(r21));
IkReal x669=((r12)*(sj6));
IkReal x670=((cj8)*(x662));
IkReal x671=((r10)*(sj11)*(sj6));
IkReal x672=((IkReal(1.00000000000000))*(x663));
IkReal x673=((cj11)*(cj6)*(r01));
IkReal x674=((sj8)*(x662));
IkReal x675=((cj11)*(r11)*(sj6));
IkReal x676=((cj6)*(r00)*(sj11));
IkReal x677=((sj8)*(x672));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj8)*(x672)))+(((cj7)*(x665)))+(((cj7)*(x669)))+(((IkReal(-1.00000000000000))*(r22)*(x666)))+(((IkReal(-1.00000000000000))*(x674))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x666)*(x669)))+(((IkReal(-1.00000000000000))*(x665)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((IkReal(-1.00000000000000))*(x677)))+(x670));
evalcond[2]=((((sj7)*(x671)))+(((cj7)*(x668)))+(((sj7)*(x676)))+(((cj8)*(x663)))+(((sj7)*(x675)))+(((cj7)*(x667)))+(((sj7)*(x673)))+(x674));
evalcond[3]=((((IkReal(-1.00000000000000))*(x664)*(x673)))+(((sj7)*(x667)))+(((sj7)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x671)))+(((IkReal(-1.00000000000000))*(x677)))+(((IkReal(-1.00000000000000))*(x664)*(x676)))+(x670)+(((IkReal(-1.00000000000000))*(x664)*(x675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x678=((cj6)*(r02));
IkReal x679=((cj7)*(cj8));
IkReal x680=((r12)*(sj6));
IkReal x681=((cj8)*(sj7));
IkReal x682=((cj7)*(sj8));
IkReal x683=((cj7)*(x680));
IkReal x684=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x685=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst5)*(((((x680)*(x681)))+(((x678)*(x681)))+(((r22)*(x679)))+(((IkReal(-1.00000000000000))*(sj8)*(x684)))+(((x680)*(x682)))+(((x678)*(x682))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x679)*(x680)))+(((IkReal(-1.00000000000000))*(x680)*(x685)))+(((IkReal(-1.00000000000000))*(r22)*(x682)))+(((IkReal(-1.00000000000000))*(r22)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x685)))+(((x678)*(x679))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((x680)*(x681)))+(((x678)*(x681)))+(((r22)*(x679)))+(((IkReal(-1.00000000000000))*(sj8)*(x684)))+(((x680)*(x682)))+(((x678)*(x682)))))), ((gconst5)*(((((x679)*(x680)))+(((IkReal(-1.00000000000000))*(x680)*(x685)))+(((IkReal(-1.00000000000000))*(r22)*(x682)))+(((IkReal(-1.00000000000000))*(r22)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x685)))+(((x678)*(x679)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x686=IKsin(j10);
IkReal x687=IKcos(j10);
IkReal x688=((IkReal(1.00000000000000))*(cj7));
IkReal x689=((cj6)*(r02));
IkReal x690=((IkReal(1.00000000000000))*(sj7));
IkReal x691=((r20)*(sj11));
IkReal x692=((cj11)*(r21));
IkReal x693=((r12)*(sj6));
IkReal x694=((cj8)*(x686));
IkReal x695=((r10)*(sj11)*(sj6));
IkReal x696=((IkReal(1.00000000000000))*(x687));
IkReal x697=((cj11)*(cj6)*(r01));
IkReal x698=((sj8)*(x686));
IkReal x699=((cj11)*(r11)*(sj6));
IkReal x700=((cj6)*(r00)*(sj11));
IkReal x701=((sj8)*(x696));
evalcond[0]=((((cj7)*(x693)))+(((IkReal(-1.00000000000000))*(cj8)*(x696)))+(((IkReal(-1.00000000000000))*(r22)*(x690)))+(((IkReal(-1.00000000000000))*(x698)))+(((cj7)*(x689))));
evalcond[1]=((x694)+(((IkReal(-1.00000000000000))*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(r22)*(x688)))+(((IkReal(-1.00000000000000))*(x701)))+(((IkReal(-1.00000000000000))*(x690)*(x693))));
evalcond[2]=((x698)+(((sj7)*(x695)))+(((cj8)*(x687)))+(((sj7)*(x699)))+(((cj7)*(x691)))+(((sj7)*(x700)))+(((cj7)*(x692)))+(((sj7)*(x697))));
evalcond[3]=((x694)+(((sj7)*(x692)))+(((IkReal(-1.00000000000000))*(x688)*(x695)))+(((IkReal(-1.00000000000000))*(x688)*(x699)))+(((IkReal(-1.00000000000000))*(x688)*(x700)))+(((IkReal(-1.00000000000000))*(x701)))+(((IkReal(-1.00000000000000))*(x688)*(x697)))+(((sj7)*(x691))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x702=((IkReal(0.0620002000000000))*(sj11));
IkReal x703=((cj7)*(r21));
IkReal x704=((IkReal(1.00000000000000))*(cj11));
IkReal x705=((cj7)*(r20));
IkReal x706=((cj6)*(sj7));
IkReal x707=((r01)*(sj6));
IkReal x708=((IkReal(0.0620002000000000))*(cj11));
IkReal x709=((cj6)*(r10));
IkReal x710=((IkReal(1.00000000000000))*(cj7));
IkReal x711=((cj7)*(sj6));
IkReal x712=((r00)*(sj6));
IkReal x713=((r11)*(sj11));
IkReal x714=((IkReal(1.00000000000000))*(py));
IkReal x715=((sj6)*(sj7));
IkReal x716=((r21)*(sj7));
IkReal x717=((cj6)*(cj7));
IkReal x718=((r01)*(x706));
IkReal x719=((cj11)*(r20)*(sj7));
IkReal x720=((r11)*(x715));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(x713)))+(((IkReal(-1.00000000000000))*(sj11)*(x707)))+(cj9)+(((cj11)*(x712)))+(((IkReal(-1.00000000000000))*(x704)*(x709))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((x702)*(x707)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x702)))+(((x708)*(x709)))+(((IkReal(-1.00000000000000))*(cj6)*(x714)))+(((IkReal(-1.00000000000000))*(x708)*(x712))));
evalcond[3]=((((sj11)*(x718)))+(((IkReal(-1.00000000000000))*(x704)*(x705)))+(((sj11)*(x703)))+(((IkReal(-1.00000000000000))*(r10)*(x704)*(x715)))+(((x713)*(x715)))+(((IkReal(-1.00000000000000))*(r00)*(x704)*(x706))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x704)))+(((IkReal(-1.00000000000000))*(sj6)*(x710)*(x713)))+(((sj11)*(x716)))+(((cj11)*(r00)*(x717)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x710)))+(((cj11)*(r10)*(x711)))+(((IkReal(-1.00000000000000))*(sj9))));
evalcond[5]=((IkReal(-0.0701403000000000))+(((py)*(x711)))+(((r11)*(x702)*(x711)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((r20)*(sj7)*(x708)))+(((px)*(x717)))+(((IkReal(-1.00000000000000))*(r00)*(x708)*(x717)))+(((IkReal(0.0616850000000000))*(sj9)))+(((r01)*(x702)*(x717)))+(((IkReal(-0.00151567000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(r10)*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(x702)*(x716))));
evalcond[6]=((IkReal(-0.0319979300000000))+(((IkReal(-1.00000000000000))*(x702)*(x720)))+(((IkReal(-1.00000000000000))*(px)*(x706)))+(((x705)*(x708)))+(((IkReal(-1.00000000000000))*(pz)*(x710)))+(((IkReal(-1.00000000000000))*(x714)*(x715)))+(((IkReal(-1.00000000000000))*(x702)*(x703)))+(((r10)*(x708)*(x715)))+(((IkReal(-1.00000000000000))*(x702)*(x718)))+(((r00)*(x706)*(x708))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x721=((IkReal(0.0620002000000000))*(cj7));
IkReal x722=((r21)*(sj11));
IkReal x723=((IkReal(1.00000000000000))*(cj11));
IkReal x724=((r01)*(sj6));
IkReal x725=((r20)*(sj7));
IkReal x726=((IkReal(1.00000000000000))*(cj6));
IkReal x727=((IkReal(0.0620002000000000))*(cj11));
IkReal x728=((IkReal(1.00000000000000))*(sj7));
IkReal x729=((IkReal(0.0620002000000000))*(sj11));
IkReal x730=((cj6)*(r10));
IkReal x731=((IkReal(1.00000000000000))*(cj7));
IkReal x732=((cj7)*(sj6));
IkReal x733=((r00)*(sj6));
IkReal x734=((r11)*(sj11));
IkReal x735=((IkReal(0.0620002000000000))*(sj7));
IkReal x736=((cj11)*(r10));
IkReal x737=((IkReal(1.00000000000000))*(sj11));
IkReal x738=((cj6)*(r11));
IkReal x739=((r01)*(sj11));
IkReal x740=((cj11)*(cj6)*(r00));
IkReal x741=((r11)*(sj6)*(sj7));
IkReal x742=((r10)*(sj6)*(sj7));
IkReal x743=((cj6)*(sj7)*(x739));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x726))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj11)*(x733)))+(((IkReal(-1.00000000000000))*(x723)*(x730)))+(((IkReal(-1.00000000000000))*(x724)*(x737)))+(((cj6)*(x734))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x723)*(x724)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((cj11)*(x738)))+(((sj11)*(x730))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(py)*(x726)))+(((IkReal(-1.00000000000000))*(x727)*(x733)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x729)*(x738)))+(((x724)*(x729)))+(((x727)*(x730))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x723)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x723)))+(x743)+(((IkReal(-1.00000000000000))*(x723)*(x742)))+(((sj6)*(sj7)*(x734)))+(((cj7)*(x722))));
evalcond[6]=((((x732)*(x736)))+(((sj7)*(x722)))+(((IkReal(-1.00000000000000))*(sj6)*(x731)*(x734)))+(((IkReal(-1.00000000000000))*(x723)*(x725)))+(((IkReal(-1.00000000000000))*(cj7)*(x726)*(x739)))+(((cj7)*(x740))));
evalcond[7]=((IkReal(-0.0716559700000000))+(((x725)*(x727)))+(((IkReal(-1.00000000000000))*(sj6)*(x721)*(x736)))+(((IkReal(-1.00000000000000))*(x721)*(x740)))+(((cj6)*(x721)*(x739)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(pz)*(x728)))+(((sj6)*(x721)*(x734)))+(((py)*(x732)))+(((IkReal(-1.00000000000000))*(x722)*(x735))));
evalcond[8]=((IkReal(-0.0319979300000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x726)))+(((cj6)*(r00)*(sj7)*(x727)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x728)))+(((IkReal(-1.00000000000000))*(x721)*(x722)))+(((IkReal(-1.00000000000000))*(pz)*(x731)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x729)))+(((cj11)*(r20)*(x721)))+(((x727)*(x742)))+(((IkReal(-1.00000000000000))*(x729)*(x741))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x744=((IkReal(1.00000000000000))*(sj7));
IkReal x745=((cj6)*(r02));
IkReal x746=((IkReal(1.00000000000000))*(cj7));
IkReal x747=((r12)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x746)*(x747)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x745)*(x746))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x746)))+(((IkReal(-1.00000000000000))*(x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x746)*(x747)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x745)*(x746)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x746)))+(((IkReal(-1.00000000000000))*(x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x746)*(x747)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x745)*(x746)))), ((((IkReal(-1.00000000000000))*(r22)*(x746)))+(((IkReal(-1.00000000000000))*(x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x748=IKsin(j10);
IkReal x749=IKcos(j10);
IkReal x750=((IkReal(1.00000000000000))*(r22));
IkReal x751=((cj7)*(sj11));
IkReal x752=((r10)*(sj6));
IkReal x753=((cj11)*(r21));
IkReal x754=((sj11)*(sj7));
IkReal x755=((cj6)*(r01));
IkReal x756=((r11)*(sj6));
IkReal x757=((cj6)*(r02));
IkReal x758=((r12)*(sj6));
IkReal x759=((IkReal(1.00000000000000))*(sj7));
IkReal x760=((cj11)*(sj7));
IkReal x761=((cj6)*(r00));
IkReal x762=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj7)*(x750)))+(((cj7)*(x758)))+(x748)+(((cj7)*(x757))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(x750)))+(((IkReal(-1.00000000000000))*(x758)*(x759)))+(((IkReal(-1.00000000000000))*(x749)))+(((IkReal(-1.00000000000000))*(x757)*(x759))));
evalcond[2]=((((x755)*(x760)))+(((x754)*(x761)))+(((cj7)*(x753)))+(x748)+(((r20)*(x751)))+(((x756)*(x760)))+(((x752)*(x754))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x751)*(x752)))+(((sj7)*(x753)))+(x749)+(((IkReal(-1.00000000000000))*(x756)*(x762)))+(((IkReal(-1.00000000000000))*(x755)*(x762)))+(((r20)*(x754)))+(((IkReal(-1.00000000000000))*(x751)*(x761))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x763=((IkReal(0.0620002000000000))*(cj7));
IkReal x764=((r21)*(sj11));
IkReal x765=((IkReal(1.00000000000000))*(cj11));
IkReal x766=((r01)*(sj6));
IkReal x767=((r20)*(sj7));
IkReal x768=((IkReal(1.00000000000000))*(cj6));
IkReal x769=((IkReal(0.0620002000000000))*(cj11));
IkReal x770=((IkReal(1.00000000000000))*(sj7));
IkReal x771=((IkReal(0.0620002000000000))*(sj11));
IkReal x772=((cj6)*(r10));
IkReal x773=((IkReal(1.00000000000000))*(cj7));
IkReal x774=((cj7)*(sj6));
IkReal x775=((r00)*(sj6));
IkReal x776=((r11)*(sj11));
IkReal x777=((IkReal(0.0620002000000000))*(sj7));
IkReal x778=((cj11)*(r10));
IkReal x779=((IkReal(1.00000000000000))*(sj11));
IkReal x780=((cj6)*(r11));
IkReal x781=((r01)*(sj11));
IkReal x782=((cj11)*(cj6)*(r00));
IkReal x783=((r11)*(sj6)*(sj7));
IkReal x784=((r10)*(sj6)*(sj7));
IkReal x785=((cj6)*(sj7)*(x781));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x768))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x775)))+(((IkReal(-1.00000000000000))*(x766)*(x779)))+(((cj6)*(x776)))+(((IkReal(-1.00000000000000))*(x765)*(x772))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x775)*(x779)))+(((sj11)*(x772)))+(((cj11)*(x780)))+(((IkReal(-1.00000000000000))*(x765)*(x766))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(py)*(x768)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x769)*(x775)))+(((x769)*(x772)))+(((x766)*(x771)))+(((IkReal(-1.00000000000000))*(x771)*(x780))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x765)))+(x785)+(((sj6)*(sj7)*(x776)))+(((IkReal(-1.00000000000000))*(x765)*(x784)))+(((cj7)*(x764)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x765))));
evalcond[6]=((((sj7)*(x764)))+(((x774)*(x778)))+(((IkReal(-1.00000000000000))*(x765)*(x767)))+(((IkReal(-1.00000000000000))*(cj7)*(x768)*(x781)))+(((IkReal(-1.00000000000000))*(sj6)*(x773)*(x776)))+(((cj7)*(x782))));
evalcond[7]=((IkReal(-0.0686246300000000))+(((IkReal(-1.00000000000000))*(pz)*(x770)))+(((sj6)*(x763)*(x776)))+(((x767)*(x769)))+(((IkReal(-1.00000000000000))*(sj6)*(x763)*(x778)))+(((IkReal(-1.00000000000000))*(x764)*(x777)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x763)*(x782)))+(((py)*(x774)))+(((cj6)*(x763)*(x781))));
evalcond[8]=((IkReal(-0.0319979300000000))+(((x769)*(x784)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x770)))+(((IkReal(-1.00000000000000))*(x771)*(x783)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x768)))+(((IkReal(-1.00000000000000))*(pz)*(x773)))+(((IkReal(-1.00000000000000))*(x763)*(x764)))+(((cj6)*(r00)*(sj7)*(x769)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x771)))+(((cj11)*(r20)*(x763))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x786=((IkReal(1.00000000000000))*(r22));
IkReal x787=((cj6)*(r02));
IkReal x788=((r12)*(sj6));
IkReal x789=((IkReal(1.00000000000000))*(sj7));
if( IKabs(((((IkReal(-1.00000000000000))*(sj7)*(x786)))+(((cj7)*(x788)))+(((cj7)*(x787))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x787)*(x789)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)))+(((IkReal(-1.00000000000000))*(x788)*(x789))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj7)*(x786)))+(((cj7)*(x788)))+(((cj7)*(x787)))))+IKsqr(((((IkReal(-1.00000000000000))*(x787)*(x789)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)))+(((IkReal(-1.00000000000000))*(x788)*(x789)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj7)*(x786)))+(((cj7)*(x788)))+(((cj7)*(x787)))), ((((IkReal(-1.00000000000000))*(x787)*(x789)))+(((IkReal(-1.00000000000000))*(cj7)*(x786)))+(((IkReal(-1.00000000000000))*(x788)*(x789)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x790=IKsin(j10);
IkReal x791=((IkReal(1.00000000000000))*(cj6));
IkReal x792=((cj7)*(sj11));
IkReal x793=((r10)*(sj6));
IkReal x794=((cj11)*(r21));
IkReal x795=((sj11)*(sj7));
IkReal x796=((cj11)*(cj7));
IkReal x797=((IkReal(1.00000000000000))*(sj7));
IkReal x798=((r11)*(sj6));
IkReal x799=((r12)*(sj6));
IkReal x800=((cj11)*(sj7));
IkReal x801=((IkReal(1.00000000000000))*(IKcos(j10)));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x797)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(x790)))+(((cj7)*(x799))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x797)*(x799)))+(((IkReal(-1.00000000000000))*(x801)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x791)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((x798)*(x800)))+(((x793)*(x795)))+(((cj6)*(r01)*(x800)))+(((cj6)*(r00)*(x795)))+(x790)+(((cj7)*(x794)))+(((r20)*(x792))));
evalcond[3]=((((sj7)*(x794)))+(((IkReal(-1.00000000000000))*(r01)*(x791)*(x796)))+(((IkReal(-1.00000000000000))*(x792)*(x793)))+(((IkReal(-1.00000000000000))*(x801)))+(((IkReal(-1.00000000000000))*(r00)*(x791)*(x792)))+(((IkReal(-1.00000000000000))*(x796)*(x798)))+(((r20)*(x795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x802=((IkReal(1.00000000000000))*(r02));
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x802)))+(((cj6)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x802)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x802)))+(((cj6)*(r12)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x802)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x802)))+(((cj6)*(r12)))))), ((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x802)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x803=IKsin(j10);
IkReal x804=IKcos(j10);
IkReal x805=((IkReal(1.00000000000000))*(sj6));
IkReal x806=((cj7)*(sj11));
IkReal x807=((cj11)*(r01));
IkReal x808=((IkReal(1.00000000000000))*(cj7));
IkReal x809=((IkReal(1.00000000000000))*(cj6));
IkReal x810=((cj11)*(r21));
IkReal x811=((r10)*(sj11));
IkReal x812=((sj6)*(sj7));
IkReal x813=((cj11)*(r11));
IkReal x814=((r00)*(sj11));
IkReal x815=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x809)))+(((sj9)*(x803))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj9)*(x803))));
evalcond[2]=((((sj9)*(x804)))+(((cj6)*(x813)))+(((IkReal(-1.00000000000000))*(x805)*(x814)))+(((cj6)*(x811)))+(((IkReal(-1.00000000000000))*(x805)*(x807))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x804)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x809)))+(((IkReal(-1.00000000000000))*(r22)*(x808)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x805))));
evalcond[4]=((((x812)*(x813)))+(x803)+(((cj7)*(x810)))+(((r20)*(x806)))+(((x807)*(x815)))+(((x811)*(x812)))+(((x814)*(x815))));
evalcond[5]=((((sj7)*(x810)))+(((IkReal(-1.00000000000000))*(r00)*(x806)*(x809)))+(((IkReal(-1.00000000000000))*(cj6)*(x807)*(x808)))+(((IkReal(-1.00000000000000))*(r10)*(x805)*(x806)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x805)*(x813)))+(((cj9)*(x804))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x816=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x816)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x816)))+(((cj11)*(r01)*(sj6)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x816)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x816)))+(((cj11)*(r01)*(sj6)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x817=IKsin(j10);
IkReal x818=IKcos(j10);
IkReal x819=((IkReal(1.00000000000000))*(sj6));
IkReal x820=((cj7)*(sj11));
IkReal x821=((cj11)*(r01));
IkReal x822=((IkReal(1.00000000000000))*(cj7));
IkReal x823=((IkReal(1.00000000000000))*(cj6));
IkReal x824=((cj11)*(r21));
IkReal x825=((r10)*(sj11));
IkReal x826=((sj6)*(sj7));
IkReal x827=((cj11)*(r11));
IkReal x828=((r00)*(sj11));
IkReal x829=((cj6)*(sj7));
evalcond[0]=((((sj9)*(x817)))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x823))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj9)*(x817))));
evalcond[2]=((((cj6)*(x825)))+(((sj9)*(x818)))+(((IkReal(-1.00000000000000))*(x819)*(x828)))+(((IkReal(-1.00000000000000))*(x819)*(x821)))+(((cj6)*(x827))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x823)))+(((IkReal(-1.00000000000000))*(x818)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x819)))+(((IkReal(-1.00000000000000))*(r22)*(x822))));
evalcond[4]=((((x825)*(x826)))+(((x828)*(x829)))+(((r20)*(x820)))+(((cj7)*(x824)))+(((x826)*(x827)))+(x817)+(((x821)*(x829))));
evalcond[5]=((((sj7)*(x824)))+(((IkReal(-1.00000000000000))*(r00)*(x820)*(x823)))+(((cj9)*(x818)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(x819)*(x827)))+(((IkReal(-1.00000000000000))*(cj6)*(x821)*(x822)))+(((IkReal(-1.00000000000000))*(r10)*(x819)*(x820))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x830=((IkReal(0.0620002000000000))*(sj11));
IkReal x831=((cj7)*(r21));
IkReal x832=((IkReal(1.00000000000000))*(cj11));
IkReal x833=((cj7)*(r20));
IkReal x834=((cj6)*(sj7));
IkReal x835=((r01)*(sj6));
IkReal x836=((IkReal(0.0620002000000000))*(cj11));
IkReal x837=((cj6)*(r10));
IkReal x838=((IkReal(1.00000000000000))*(cj7));
IkReal x839=((cj7)*(sj6));
IkReal x840=((r00)*(sj6));
IkReal x841=((r11)*(sj11));
IkReal x842=((IkReal(1.00000000000000))*(py));
IkReal x843=((sj6)*(sj7));
IkReal x844=((r21)*(sj7));
IkReal x845=((cj6)*(cj7));
IkReal x846=((r01)*(x834));
IkReal x847=((cj11)*(r20)*(sj7));
IkReal x848=((r11)*(x843));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x832)*(x837)))+(((cj11)*(x840)))+(((IkReal(-1.00000000000000))*(sj11)*(x835)))+(cj9)+(((cj6)*(x841))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((x836)*(x837)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((x830)*(x835)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x836)*(x840)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x830)))+(((IkReal(-1.00000000000000))*(cj6)*(x842))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x832)*(x843)))+(((sj11)*(x831)))+(((IkReal(-1.00000000000000))*(r00)*(x832)*(x834)))+(((IkReal(-1.00000000000000))*(x832)*(x833)))+(((sj11)*(x846)))+(((x841)*(x843))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(sj7)*(x832)))+(sj9)+(((IkReal(-1.00000000000000))*(sj6)*(x838)*(x841)))+(((sj11)*(x844)))+(((cj11)*(r00)*(x845)))+(((cj11)*(r10)*(x839)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x838))));
evalcond[5]=((IkReal(0.0701403000000000))+(((py)*(x839)))+(((IkReal(-1.00000000000000))*(r10)*(x836)*(x839)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((r01)*(x830)*(x845)))+(((IkReal(0.00151567000000000))*(cj9)))+(((r20)*(sj7)*(x836)))+(((px)*(x845)))+(((IkReal(-0.0616850000000000))*(sj9)))+(((r11)*(x830)*(x839)))+(((IkReal(-1.00000000000000))*(x830)*(x844)))+(((IkReal(-1.00000000000000))*(r00)*(x836)*(x845))));
evalcond[6]=((IkReal(0.571997930000000))+(((IkReal(-1.00000000000000))*(x830)*(x846)))+(((IkReal(-1.00000000000000))*(x842)*(x843)))+(((r00)*(x834)*(x836)))+(((IkReal(-1.00000000000000))*(px)*(x834)))+(((IkReal(-1.00000000000000))*(pz)*(x838)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((IkReal(-1.00000000000000))*(x830)*(x848)))+(((x833)*(x836)))+(((r10)*(x836)*(x843))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x849=((IkReal(0.0620002000000000))*(cj7));
IkReal x850=((r21)*(sj11));
IkReal x851=((IkReal(1.00000000000000))*(cj11));
IkReal x852=((r01)*(sj6));
IkReal x853=((r20)*(sj7));
IkReal x854=((IkReal(1.00000000000000))*(cj6));
IkReal x855=((IkReal(0.0620002000000000))*(cj11));
IkReal x856=((IkReal(1.00000000000000))*(sj7));
IkReal x857=((IkReal(0.0620002000000000))*(sj11));
IkReal x858=((cj6)*(r10));
IkReal x859=((IkReal(1.00000000000000))*(cj7));
IkReal x860=((cj7)*(sj6));
IkReal x861=((r00)*(sj6));
IkReal x862=((r11)*(sj11));
IkReal x863=((IkReal(0.0620002000000000))*(sj7));
IkReal x864=((cj11)*(r10));
IkReal x865=((IkReal(1.00000000000000))*(sj11));
IkReal x866=((cj6)*(r11));
IkReal x867=((r01)*(sj11));
IkReal x868=((cj11)*(cj6)*(r00));
IkReal x869=((r11)*(sj6)*(sj7));
IkReal x870=((r10)*(sj6)*(sj7));
IkReal x871=((cj6)*(sj7)*(x867));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x854))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj11)*(x861)))+(((IkReal(-1.00000000000000))*(x851)*(x858)))+(((cj6)*(x862)))+(((IkReal(-1.00000000000000))*(x852)*(x865))));
evalcond[3]=((((cj11)*(x866)))+(((IkReal(-1.00000000000000))*(x851)*(x852)))+(((sj11)*(x858)))+(((IkReal(-1.00000000000000))*(x861)*(x865))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(x855)*(x861)))+(((IkReal(-1.00000000000000))*(x857)*(x866)))+(((x852)*(x857)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x854)))+(((x855)*(x858))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x851)))+(((sj6)*(sj7)*(x862)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x851)))+(((cj7)*(x850)))+(((IkReal(-1.00000000000000))*(x851)*(x870)))+(x871));
evalcond[6]=((((IkReal(-1.00000000000000))*(x851)*(x853)))+(((IkReal(-1.00000000000000))*(sj6)*(x859)*(x862)))+(((sj7)*(x850)))+(((IkReal(-1.00000000000000))*(cj7)*(x854)*(x867)))+(((x860)*(x864)))+(((cj7)*(x868))));
evalcond[7]=((IkReal(0.0716559700000000))+(((cj6)*(x849)*(x867)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(sj6)*(x849)*(x864)))+(((IkReal(-1.00000000000000))*(x850)*(x863)))+(((IkReal(-1.00000000000000))*(x849)*(x868)))+(((x853)*(x855)))+(((sj6)*(x849)*(x862)))+(((py)*(x860)))+(((IkReal(-1.00000000000000))*(pz)*(x856))));
evalcond[8]=((IkReal(0.571997930000000))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x857)))+(((x855)*(x870)))+(((IkReal(-1.00000000000000))*(pz)*(x859)))+(((cj6)*(r00)*(sj7)*(x855)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x854)))+(((IkReal(-1.00000000000000))*(x849)*(x850)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x856)))+(((IkReal(-1.00000000000000))*(x857)*(x869)))+(((cj11)*(r20)*(x849))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x872=((r12)*(sj6));
IkReal x873=((cj6)*(r02));
if( IKabs(((((cj7)*(x872)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x873))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x872)))+(((sj7)*(x873))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x872)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x873)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x872)))+(((sj7)*(x873)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x872)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x873)))), ((((cj7)*(r22)))+(((sj7)*(x872)))+(((sj7)*(x873)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x874=IKcos(j10);
IkReal x875=((IkReal(1.00000000000000))*(cj6));
IkReal x876=((cj7)*(sj11));
IkReal x877=((r10)*(sj6));
IkReal x878=((cj11)*(r21));
IkReal x879=((sj11)*(sj7));
IkReal x880=((cj11)*(cj7));
IkReal x881=((IkReal(1.00000000000000))*(sj7));
IkReal x882=((r11)*(sj6));
IkReal x883=((r12)*(sj6));
IkReal x884=((cj11)*(sj7));
IkReal x885=((IkReal(1.00000000000000))*(IKsin(j10)));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x881)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(x885)))+(((cj7)*(x883))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x875)))+(((IkReal(-1.00000000000000))*(x881)*(x883)))+(x874)+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((cj7)*(x878)))+(((x877)*(x879)))+(((cj6)*(r00)*(x879)))+(((IkReal(-1.00000000000000))*(x885)))+(((x882)*(x884)))+(((r20)*(x876)))+(((cj6)*(r01)*(x884))));
evalcond[3]=((((r20)*(x879)))+(((sj7)*(x878)))+(((IkReal(-1.00000000000000))*(r01)*(x875)*(x880)))+(((IkReal(-1.00000000000000))*(x876)*(x877)))+(((IkReal(-1.00000000000000))*(x880)*(x882)))+(((IkReal(-1.00000000000000))*(r00)*(x875)*(x876)))+(((IkReal(-1.00000000000000))*(x874))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x886=((IkReal(0.0620002000000000))*(cj7));
IkReal x887=((r21)*(sj11));
IkReal x888=((IkReal(1.00000000000000))*(cj11));
IkReal x889=((r01)*(sj6));
IkReal x890=((r20)*(sj7));
IkReal x891=((IkReal(1.00000000000000))*(cj6));
IkReal x892=((IkReal(0.0620002000000000))*(cj11));
IkReal x893=((IkReal(1.00000000000000))*(sj7));
IkReal x894=((IkReal(0.0620002000000000))*(sj11));
IkReal x895=((cj6)*(r10));
IkReal x896=((IkReal(1.00000000000000))*(cj7));
IkReal x897=((cj7)*(sj6));
IkReal x898=((r00)*(sj6));
IkReal x899=((r11)*(sj11));
IkReal x900=((IkReal(0.0620002000000000))*(sj7));
IkReal x901=((cj11)*(r10));
IkReal x902=((IkReal(1.00000000000000))*(sj11));
IkReal x903=((cj6)*(r11));
IkReal x904=((r01)*(sj11));
IkReal x905=((cj11)*(cj6)*(r00));
IkReal x906=((r11)*(sj6)*(sj7));
IkReal x907=((r10)*(sj6)*(sj7));
IkReal x908=((cj6)*(sj7)*(x904));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x891))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x889)*(x902)))+(((cj6)*(x899)))+(((IkReal(-1.00000000000000))*(x888)*(x895)))+(((cj11)*(x898))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x898)*(x902)))+(((IkReal(-1.00000000000000))*(x888)*(x889)))+(((cj11)*(x903)))+(((sj11)*(x895))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x889)*(x894)))+(((x892)*(x895)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x894)*(x903)))+(((IkReal(-1.00000000000000))*(py)*(x891)))+(((IkReal(-1.00000000000000))*(x892)*(x898))));
evalcond[5]=((((cj7)*(x887)))+(((IkReal(-1.00000000000000))*(x888)*(x907)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x888)))+(((sj6)*(sj7)*(x899)))+(x908)+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x888))));
evalcond[6]=((((sj7)*(x887)))+(((cj7)*(x905)))+(((x897)*(x901)))+(((IkReal(-1.00000000000000))*(cj7)*(x891)*(x904)))+(((IkReal(-1.00000000000000))*(sj6)*(x896)*(x899)))+(((IkReal(-1.00000000000000))*(x888)*(x890))));
evalcond[7]=((IkReal(0.0686246300000000))+(((IkReal(-1.00000000000000))*(x886)*(x905)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(sj6)*(x886)*(x901)))+(((x890)*(x892)))+(((py)*(x897)))+(((cj6)*(x886)*(x904)))+(((IkReal(-1.00000000000000))*(pz)*(x893)))+(((sj6)*(x886)*(x899)))+(((IkReal(-1.00000000000000))*(x887)*(x900))));
evalcond[8]=((IkReal(0.571997930000000))+(((IkReal(-1.00000000000000))*(pz)*(x896)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x894)))+(((x892)*(x907)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x893)))+(((IkReal(-1.00000000000000))*(x886)*(x887)))+(((IkReal(-1.00000000000000))*(x894)*(x906)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x891)))+(((cj6)*(r00)*(sj7)*(x892)))+(((cj11)*(r20)*(x886))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x909=((r12)*(sj6));
IkReal x910=((cj6)*(r02));
IkReal x911=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IkReal(-1.00000000000000))*(x910)*(x911)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x909)*(x911))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x909)))+(((sj7)*(x910))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x910)*(x911)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x909)*(x911)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x909)))+(((sj7)*(x910)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x910)*(x911)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x909)*(x911)))), ((((cj7)*(r22)))+(((sj7)*(x909)))+(((sj7)*(x910)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x912=IKsin(j10);
IkReal x913=IKcos(j10);
IkReal x914=((IkReal(1.00000000000000))*(r22));
IkReal x915=((cj6)*(r00));
IkReal x916=((r10)*(sj6));
IkReal x917=((r20)*(sj11));
IkReal x918=((cj11)*(r21));
IkReal x919=((sj11)*(sj7));
IkReal x920=((cj6)*(r01));
IkReal x921=((r11)*(sj6));
IkReal x922=((cj6)*(r02));
IkReal x923=((r12)*(sj6));
IkReal x924=((IkReal(1.00000000000000))*(sj7));
IkReal x925=((cj11)*(sj7));
IkReal x926=((IkReal(1.00000000000000))*(cj7)*(sj11));
IkReal x927=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj7)*(x914)))+(((cj7)*(x923)))+(((cj7)*(x922)))+(x912));
evalcond[1]=((((IkReal(-1.00000000000000))*(x923)*(x924)))+(((IkReal(-1.00000000000000))*(cj7)*(x914)))+(((IkReal(-1.00000000000000))*(x922)*(x924)))+(x913));
evalcond[2]=((((x920)*(x925)))+(((IkReal(-1.00000000000000))*(x912)))+(((cj7)*(x918)))+(((x915)*(x919)))+(((x916)*(x919)))+(((cj7)*(x917)))+(((x921)*(x925))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x921)*(x927)))+(((IkReal(-1.00000000000000))*(x920)*(x927)))+(((sj7)*(x918)))+(((IkReal(-1.00000000000000))*(x916)*(x926)))+(((sj7)*(x917)))+(x913)+(((IkReal(-1.00000000000000))*(x915)*(x926))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))))+IKsqr(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x928=IKsin(j10);
IkReal x929=IKcos(j10);
IkReal x930=((IkReal(1.00000000000000))*(cj9));
IkReal x931=((IkReal(1.00000000000000))*(sj6));
IkReal x932=((cj7)*(sj11));
IkReal x933=((cj11)*(r01));
IkReal x934=((IkReal(1.00000000000000))*(cj7));
IkReal x935=((IkReal(1.00000000000000))*(cj6));
IkReal x936=((cj11)*(r21));
IkReal x937=((r10)*(sj11));
IkReal x938=((sj6)*(sj7));
IkReal x939=((cj11)*(r11));
IkReal x940=((r00)*(sj11));
IkReal x941=((cj6)*(sj7));
evalcond[0]=((((sj9)*(x928)))+(((IkReal(-1.00000000000000))*(r12)*(x935)))+(((r02)*(sj6))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x928)*(x930))));
evalcond[2]=((((sj9)*(x929)))+(((IkReal(-1.00000000000000))*(x931)*(x933)))+(((cj6)*(x937)))+(((cj6)*(x939)))+(((IkReal(-1.00000000000000))*(x931)*(x940))));
evalcond[3]=((x929)+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x935)))+(((IkReal(-1.00000000000000))*(r22)*(x934)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x931))));
evalcond[4]=((((x937)*(x938)))+(((r20)*(x932)))+(((x933)*(x941)))+(((x938)*(x939)))+(((x940)*(x941)))+(((IkReal(-1.00000000000000))*(x928)))+(((cj7)*(x936))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x931)*(x939)))+(((IkReal(-1.00000000000000))*(r00)*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(cj6)*(x933)*(x934)))+(((r20)*(sj11)*(sj7)))+(((sj7)*(x936)))+(((IkReal(-1.00000000000000))*(x929)*(x930)))+(((IkReal(-1.00000000000000))*(r10)*(x931)*(x932))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x942=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x942)))+(((r00)*(sj11)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x942))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst8)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x942)))+(((r00)*(sj11)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x942)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x943=IKsin(j10);
IkReal x944=IKcos(j10);
IkReal x945=((IkReal(1.00000000000000))*(cj9));
IkReal x946=((IkReal(1.00000000000000))*(sj6));
IkReal x947=((cj7)*(sj11));
IkReal x948=((cj11)*(r01));
IkReal x949=((IkReal(1.00000000000000))*(cj7));
IkReal x950=((IkReal(1.00000000000000))*(cj6));
IkReal x951=((cj11)*(r21));
IkReal x952=((r10)*(sj11));
IkReal x953=((sj6)*(sj7));
IkReal x954=((cj11)*(r11));
IkReal x955=((r00)*(sj11));
IkReal x956=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x950)))+(((sj9)*(x943))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(x943)*(x945)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((cj6)*(x954)))+(((sj9)*(x944)))+(((cj6)*(x952)))+(((IkReal(-1.00000000000000))*(x946)*(x955)))+(((IkReal(-1.00000000000000))*(x946)*(x948))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x949)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x950)))+(x944)+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x946))));
evalcond[4]=((((x948)*(x956)))+(((cj7)*(x951)))+(((x953)*(x954)))+(((IkReal(-1.00000000000000))*(x943)))+(((x952)*(x953)))+(((r20)*(x947)))+(((x955)*(x956))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(x948)*(x949)))+(((IkReal(-1.00000000000000))*(cj7)*(x946)*(x954)))+(((IkReal(-1.00000000000000))*(x944)*(x945)))+(((IkReal(-1.00000000000000))*(r10)*(x946)*(x947)))+(((r20)*(sj11)*(sj7)))+(((sj7)*(x951)))+(((IkReal(-1.00000000000000))*(r00)*(x947)*(x950))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x957=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x958=((cj9)*(sj8));
IkReal x959=((cj6)*(r12));
IkReal x960=((cj7)*(sj9));
IkReal x961=((IkReal(1.00000000000000))*(r02)*(sj6));
if( IKabs(((x957)*(((((IkReal(-1.00000000000000))*(x961)))+(x959))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x957)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x960)))+(((x958)*(x959)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((r12)*(sj6)*(x960)))+(((IkReal(-1.00000000000000))*(x958)*(x961))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x957)*(((((IkReal(-1.00000000000000))*(x961)))+(x959)))))+IKsqr(((x957)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x960)))+(((x958)*(x959)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((r12)*(sj6)*(x960)))+(((IkReal(-1.00000000000000))*(x958)*(x961)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((x957)*(((((IkReal(-1.00000000000000))*(x961)))+(x959)))), ((x957)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((cj6)*(r02)*(x960)))+(((x958)*(x959)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))+(((r12)*(sj6)*(x960)))+(((IkReal(-1.00000000000000))*(x958)*(x961)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x962=IKsin(j10);
IkReal x963=IKcos(j10);
IkReal x964=((cj9)*(sj8));
IkReal x965=((cj6)*(cj7));
IkReal x966=((IkReal(1.00000000000000))*(cj7));
IkReal x967=((IkReal(1.00000000000000))*(cj6));
IkReal x968=((r20)*(sj11));
IkReal x969=((cj11)*(r21));
IkReal x970=((cj6)*(sj11));
IkReal x971=((cj11)*(cj6));
IkReal x972=((r12)*(sj6));
IkReal x973=((IkReal(1.00000000000000))*(sj7));
IkReal x974=((cj8)*(x962));
IkReal x975=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x976=((r10)*(sj11)*(sj6));
IkReal x977=((cj11)*(r11)*(sj6));
IkReal x978=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x979=((IkReal(1.00000000000000))*(cj8)*(x963));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x962)))+(((IkReal(-1.00000000000000))*(r12)*(x967))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x979)))+(((cj7)*(x972)))+(((IkReal(-1.00000000000000))*(r22)*(x973)))+(((x962)*(x964)))+(((r02)*(x965))));
evalcond[2]=((((r10)*(x970)))+(((sj9)*(x963)))+(((r11)*(x971)))+(((IkReal(-1.00000000000000))*(sj6)*(x978)))+(((IkReal(-1.00000000000000))*(sj6)*(x975))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x966)))+(((IkReal(-1.00000000000000))*(sj8)*(x963)))+(((IkReal(-1.00000000000000))*(cj9)*(x974)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x967)))+(((IkReal(-1.00000000000000))*(x972)*(x973))));
evalcond[4]=((((sj7)*(x976)))+(((cj7)*(x968)))+(((r00)*(sj7)*(x970)))+(((sj8)*(x962)))+(((IkReal(-1.00000000000000))*(cj9)*(x979)))+(((r01)*(sj7)*(x971)))+(((cj7)*(x969)))+(((sj7)*(x977))));
evalcond[5]=((x974)+(((IkReal(-1.00000000000000))*(x966)*(x977)))+(((sj7)*(x969)))+(((IkReal(-1.00000000000000))*(x965)*(x975)))+(((sj7)*(x968)))+(((x963)*(x964)))+(((IkReal(-1.00000000000000))*(x965)*(x978)))+(((IkReal(-1.00000000000000))*(x966)*(x976))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x980=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x980)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x980)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x980)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x980)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x981=IKsin(j10);
IkReal x982=IKcos(j10);
IkReal x983=((cj9)*(sj8));
IkReal x984=((cj6)*(cj7));
IkReal x985=((IkReal(1.00000000000000))*(cj7));
IkReal x986=((IkReal(1.00000000000000))*(cj6));
IkReal x987=((r20)*(sj11));
IkReal x988=((cj11)*(r21));
IkReal x989=((cj6)*(sj11));
IkReal x990=((cj11)*(cj6));
IkReal x991=((r12)*(sj6));
IkReal x992=((IkReal(1.00000000000000))*(sj7));
IkReal x993=((cj8)*(x981));
IkReal x994=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x995=((r10)*(sj11)*(sj6));
IkReal x996=((cj11)*(r11)*(sj6));
IkReal x997=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x998=((IkReal(1.00000000000000))*(cj8)*(x982));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x986)))+(((sj9)*(x981))));
evalcond[1]=((((x981)*(x983)))+(((cj7)*(x991)))+(((IkReal(-1.00000000000000))*(x998)))+(((IkReal(-1.00000000000000))*(r22)*(x992)))+(((r02)*(x984))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj6)*(x997)))+(((r11)*(x990)))+(((r10)*(x989)))+(((sj9)*(x982)))+(((IkReal(-1.00000000000000))*(sj6)*(x994))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x991)*(x992)))+(((IkReal(-1.00000000000000))*(cj9)*(x993)))+(((IkReal(-1.00000000000000))*(r22)*(x985)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x986)))+(((IkReal(-1.00000000000000))*(sj8)*(x982))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj9)*(x998)))+(((r01)*(sj7)*(x990)))+(((cj7)*(x987)))+(((sj7)*(x996)))+(((sj8)*(x981)))+(((sj7)*(x995)))+(((r00)*(sj7)*(x989)))+(((cj7)*(x988))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x985)*(x996)))+(((sj7)*(x987)))+(((IkReal(-1.00000000000000))*(x984)*(x994)))+(((IkReal(-1.00000000000000))*(x985)*(x995)))+(((IkReal(-1.00000000000000))*(x984)*(x997)))+(((x982)*(x983)))+(((sj7)*(x988)))+(x993));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x999=((sj11)*(sj7));
IkReal x1000=((cj11)*(cj7));
IkReal x1001=((r10)*(sj6));
IkReal x1002=((cj6)*(r00));
IkReal x1003=((cj11)*(sj7));
IkReal x1004=((cj7)*(sj11));
IkReal x1005=((IkReal(1.00000000000000))*(r11)*(sj6));
IkReal x1006=((IkReal(1.00000000000000))*(cj6)*(r01));
if( IKabs(((gconst0)*(((((r21)*(x999)))+(((IkReal(-1.00000000000000))*(r20)*(x1003)))+(((IkReal(-1.00000000000000))*(x1004)*(x1005)))+(((IkReal(-1.00000000000000))*(x1004)*(x1006)))+(((x1000)*(x1002)))+(((x1000)*(x1001))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(x1006)*(x999)))+(((IkReal(-1.00000000000000))*(r21)*(x1004)))+(((IkReal(-1.00000000000000))*(x1005)*(x999)))+(((r20)*(x1000)))+(((x1001)*(x1003))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst0)*(((((r21)*(x999)))+(((IkReal(-1.00000000000000))*(r20)*(x1003)))+(((IkReal(-1.00000000000000))*(x1004)*(x1005)))+(((IkReal(-1.00000000000000))*(x1004)*(x1006)))+(((x1000)*(x1002)))+(((x1000)*(x1001)))))), ((gconst0)*(((((x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(x1006)*(x999)))+(((IkReal(-1.00000000000000))*(r21)*(x1004)))+(((IkReal(-1.00000000000000))*(x1005)*(x999)))+(((r20)*(x1000)))+(((x1001)*(x1003)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[4];
IkReal x1007=IKsin(j8);
IkReal x1008=IKcos(j8);
IkReal x1009=((IkReal(0.0620002000000000))*(sj11));
IkReal x1010=((cj7)*(r21));
IkReal x1011=((IkReal(1.00000000000000))*(cj11));
IkReal x1012=((cj7)*(r20));
IkReal x1013=((IkReal(0.00151567000000000))*(cj9));
IkReal x1014=((r21)*(sj7));
IkReal x1015=((IkReal(1.00000000000000))*(cj7));
IkReal x1016=((cj7)*(sj6));
IkReal x1017=((IkReal(0.0620002000000000))*(cj11));
IkReal x1018=((IkReal(1.00000000000000))*(sj7));
IkReal x1019=((cj6)*(px));
IkReal x1020=((cj6)*(r01));
IkReal x1021=((sj7)*(x1020));
IkReal x1022=((cj11)*(r20)*(sj7));
IkReal x1023=((sj9)*(x1008));
IkReal x1024=((cj6)*(r00)*(sj7));
IkReal x1025=((r11)*(sj6)*(sj7));
IkReal x1026=((sj9)*(x1007));
IkReal x1027=((r10)*(sj6)*(sj7));
IkReal x1028=((cj6)*(cj7)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1011)*(x1012)))+(((sj11)*(x1021)))+(((sj11)*(x1025)))+(((IkReal(-1.00000000000000))*(x1011)*(x1027)))+(((IkReal(-1.00000000000000))*(x1011)*(x1024)))+(((sj11)*(x1010)))+(x1023));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj11)*(sj6)*(x1015)))+(((IkReal(-1.00000000000000))*(x1026)))+(((cj11)*(x1028)))+(((sj11)*(x1014)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1011)))+(((cj11)*(r10)*(x1016)))+(((IkReal(-1.00000000000000))*(sj11)*(x1015)*(x1020))));
evalcond[2]=((((py)*(x1016)))+(((IkReal(-1.00000000000000))*(x1009)*(x1014)))+(((cj7)*(x1009)*(x1020)))+(((cj7)*(x1019)))+(((r20)*(sj7)*(x1017)))+(((IkReal(-1.00000000000000))*(r10)*(x1016)*(x1017)))+(((r11)*(x1009)*(x1016)))+(((IkReal(-0.301997930000000))*(x1008)))+(((IkReal(-0.0701403000000000))*(x1007)))+(((IkReal(0.0616850000000000))*(x1026)))+(((IkReal(-1.00000000000000))*(x1007)*(x1013)))+(((IkReal(-1.00000000000000))*(x1017)*(x1028)))+(((IkReal(-1.00000000000000))*(pz)*(x1018))));
evalcond[3]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1015)))+(((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((IkReal(-0.0616850000000000))*(x1023)))+(((x1008)*(x1013)))+(((x1012)*(x1017)))+(((IkReal(0.0701403000000000))*(x1008)))+(((x1017)*(x1027)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1018)))+(((IkReal(-0.301997930000000))*(x1007)))+(((IkReal(-1.00000000000000))*(x1009)*(x1021)))+(((x1017)*(x1024)))+(((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(x1009)*(x1025))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj8;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1029=((IkReal(0.0620002000000000))*(cj7));
IkReal x1030=((r21)*(sj11));
IkReal x1031=((IkReal(1.00000000000000))*(cj11));
IkReal x1032=((r01)*(sj6));
IkReal x1033=((r20)*(sj7));
IkReal x1034=((IkReal(1.00000000000000))*(cj6));
IkReal x1035=((IkReal(0.0620002000000000))*(cj11));
IkReal x1036=((IkReal(1.00000000000000))*(sj7));
IkReal x1037=((IkReal(0.0620002000000000))*(sj11));
IkReal x1038=((cj6)*(r10));
IkReal x1039=((IkReal(1.00000000000000))*(cj7));
IkReal x1040=((cj7)*(sj6));
IkReal x1041=((r00)*(sj6));
IkReal x1042=((r11)*(sj11));
IkReal x1043=((IkReal(0.0620002000000000))*(sj7));
IkReal x1044=((cj11)*(r10));
IkReal x1045=((IkReal(1.00000000000000))*(sj11));
IkReal x1046=((cj6)*(r11));
IkReal x1047=((r01)*(sj11));
IkReal x1048=((cj11)*(cj6)*(r00));
IkReal x1049=((r11)*(sj6)*(sj7));
IkReal x1050=((r10)*(sj6)*(sj7));
IkReal x1051=((cj6)*(sj7)*(x1047));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1034))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x1042)))+(((cj11)*(x1041)))+(((IkReal(-1.00000000000000))*(x1031)*(x1038)))+(((IkReal(-1.00000000000000))*(x1032)*(x1045))));
evalcond[3]=((((sj11)*(x1038)))+(((IkReal(-1.00000000000000))*(x1041)*(x1045)))+(((IkReal(-1.00000000000000))*(x1031)*(x1032)))+(((cj11)*(x1046))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(py)*(x1034)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1037)*(x1046)))+(((x1032)*(x1037)))+(((IkReal(-1.00000000000000))*(x1035)*(x1041)))+(((x1035)*(x1038))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1031)))+(((IkReal(-1.00000000000000))*(x1031)*(x1050)))+(x1051)+(((cj7)*(x1030)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1031)))+(((sj6)*(sj7)*(x1042))));
evalcond[6]=((((x1040)*(x1044)))+(((IkReal(-1.00000000000000))*(sj6)*(x1039)*(x1042)))+(((IkReal(-1.00000000000000))*(cj7)*(x1034)*(x1047)))+(((cj7)*(x1048)))+(((sj7)*(x1030)))+(((IkReal(-1.00000000000000))*(x1031)*(x1033))));
evalcond[7]=((((sj6)*(x1029)*(x1042)))+(((IkReal(-0.0716559700000000))*(sj8)))+(((x1033)*(x1035)))+(((IkReal(-1.00000000000000))*(x1030)*(x1043)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x1029)*(x1048)))+(((py)*(x1040)))+(((IkReal(-1.00000000000000))*(sj6)*(x1029)*(x1044)))+(((IkReal(-1.00000000000000))*(pz)*(x1036)))+(((IkReal(-0.301997930000000))*(cj8)))+(((cj6)*(x1029)*(x1047))));
evalcond[8]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1039)))+(((IkReal(0.0716559700000000))*(cj8)))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1036)))+(((cj11)*(r20)*(x1029)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1034)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1037)))+(((IkReal(-1.00000000000000))*(x1037)*(x1049)))+(((x1035)*(x1050)))+(((IkReal(-0.301997930000000))*(sj8)))+(((cj6)*(r00)*(sj7)*(x1035))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1052=((sj7)*(sj8));
IkReal x1053=((cj11)*(r21));
IkReal x1054=((r20)*(sj11));
IkReal x1055=((cj8)*(sj7));
IkReal x1056=((IkReal(1.00000000000000))*(sj11));
IkReal x1057=((IkReal(1.00000000000000))*(cj11));
IkReal x1058=((cj7)*(sj6)*(sj8));
IkReal x1059=((cj6)*(cj7)*(sj8));
IkReal x1060=((cj7)*(cj8)*(sj6));
IkReal x1061=((cj6)*(cj7)*(cj8));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x1056)*(x1060)))+(((IkReal(-1.00000000000000))*(r11)*(x1057)*(x1060)))+(((r12)*(x1058)))+(((IkReal(-1.00000000000000))*(r01)*(x1057)*(x1061)))+(((IkReal(-1.00000000000000))*(r00)*(x1056)*(x1061)))+(((IkReal(-1.00000000000000))*(r22)*(x1052)))+(((r02)*(x1059)))+(((x1053)*(x1055)))+(((x1054)*(x1055))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1052)*(x1054)))+(((IkReal(-1.00000000000000))*(r02)*(x1061)))+(((IkReal(-1.00000000000000))*(r01)*(x1057)*(x1059)))+(((x1052)*(x1053)))+(((IkReal(-1.00000000000000))*(r11)*(x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(r10)*(x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(r12)*(x1060)))+(((IkReal(-1.00000000000000))*(r00)*(x1056)*(x1059)))+(((r22)*(x1055))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r10)*(x1056)*(x1060)))+(((IkReal(-1.00000000000000))*(r11)*(x1057)*(x1060)))+(((r12)*(x1058)))+(((IkReal(-1.00000000000000))*(r01)*(x1057)*(x1061)))+(((IkReal(-1.00000000000000))*(r00)*(x1056)*(x1061)))+(((IkReal(-1.00000000000000))*(r22)*(x1052)))+(((r02)*(x1059)))+(((x1053)*(x1055)))+(((x1054)*(x1055)))))), ((gconst4)*(((((x1052)*(x1054)))+(((IkReal(-1.00000000000000))*(r02)*(x1061)))+(((IkReal(-1.00000000000000))*(r01)*(x1057)*(x1059)))+(((x1052)*(x1053)))+(((IkReal(-1.00000000000000))*(r11)*(x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(r10)*(x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(r12)*(x1060)))+(((IkReal(-1.00000000000000))*(r00)*(x1056)*(x1059)))+(((r22)*(x1055)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1062=IKcos(j10);
IkReal x1063=IKsin(j10);
IkReal x1064=((IkReal(1.00000000000000))*(cj7));
IkReal x1065=((cj6)*(r02));
IkReal x1066=((IkReal(1.00000000000000))*(sj7));
IkReal x1067=((r20)*(sj11));
IkReal x1068=((cj11)*(r21));
IkReal x1069=((r12)*(sj6));
IkReal x1070=((sj8)*(x1063));
IkReal x1071=((cj8)*(x1063));
IkReal x1072=((r10)*(sj11)*(sj6));
IkReal x1073=((IkReal(1.00000000000000))*(x1062));
IkReal x1074=((cj11)*(cj6)*(r01));
IkReal x1075=((cj11)*(r11)*(sj6));
IkReal x1076=((cj6)*(r00)*(sj11));
IkReal x1077=((cj8)*(x1073));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1077)))+(((cj7)*(x1069)))+(((IkReal(-1.00000000000000))*(r22)*(x1066)))+(((cj7)*(x1065)))+(x1070));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1064)))+(((IkReal(-1.00000000000000))*(sj8)*(x1073)))+(((IkReal(-1.00000000000000))*(x1066)*(x1069)))+(((IkReal(-1.00000000000000))*(x1065)*(x1066)))+(((IkReal(-1.00000000000000))*(x1071))));
evalcond[2]=((((sj7)*(x1074)))+(((IkReal(-1.00000000000000))*(x1077)))+(((sj7)*(x1072)))+(((sj7)*(x1076)))+(((cj7)*(x1068)))+(((sj7)*(x1075)))+(((cj7)*(x1067)))+(x1070));
evalcond[3]=((((sj8)*(x1062)))+(((IkReal(-1.00000000000000))*(x1064)*(x1076)))+(((IkReal(-1.00000000000000))*(x1064)*(x1075)))+(((sj7)*(x1067)))+(((IkReal(-1.00000000000000))*(x1064)*(x1072)))+(((IkReal(-1.00000000000000))*(x1064)*(x1074)))+(x1071)+(((sj7)*(x1068))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1078=((cj7)*(cj8));
IkReal x1079=((r12)*(sj6));
IkReal x1080=((IkReal(1.00000000000000))*(sj7));
IkReal x1081=((cj6)*(r02));
IkReal x1082=((IkReal(1.00000000000000))*(r22));
IkReal x1083=((cj7)*(sj8));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1078)*(x1082)))+(((IkReal(-1.00000000000000))*(cj8)*(x1080)*(x1081)))+(((IkReal(-1.00000000000000))*(x1079)*(x1083)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x1081)*(x1083)))+(((IkReal(-1.00000000000000))*(cj8)*(x1079)*(x1080))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(r22)*(x1080)))+(((x1078)*(x1081)))+(((IkReal(-1.00000000000000))*(sj8)*(x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(x1082)*(x1083)))+(((IkReal(-1.00000000000000))*(sj8)*(x1080)*(x1081)))+(((x1078)*(x1079))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x1078)*(x1082)))+(((IkReal(-1.00000000000000))*(cj8)*(x1080)*(x1081)))+(((IkReal(-1.00000000000000))*(x1079)*(x1083)))+(((r22)*(sj7)*(sj8)))+(((IkReal(-1.00000000000000))*(x1081)*(x1083)))+(((IkReal(-1.00000000000000))*(cj8)*(x1079)*(x1080)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(cj8)*(r22)*(x1080)))+(((x1078)*(x1081)))+(((IkReal(-1.00000000000000))*(sj8)*(x1079)*(x1080)))+(((IkReal(-1.00000000000000))*(x1082)*(x1083)))+(((IkReal(-1.00000000000000))*(sj8)*(x1080)*(x1081)))+(((x1078)*(x1079)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1084=IKcos(j10);
IkReal x1085=IKsin(j10);
IkReal x1086=((IkReal(1.00000000000000))*(cj7));
IkReal x1087=((cj6)*(r02));
IkReal x1088=((IkReal(1.00000000000000))*(sj7));
IkReal x1089=((r20)*(sj11));
IkReal x1090=((cj11)*(r21));
IkReal x1091=((r12)*(sj6));
IkReal x1092=((sj8)*(x1085));
IkReal x1093=((cj8)*(x1085));
IkReal x1094=((r10)*(sj11)*(sj6));
IkReal x1095=((IkReal(1.00000000000000))*(x1084));
IkReal x1096=((cj11)*(cj6)*(r01));
IkReal x1097=((cj11)*(r11)*(sj6));
IkReal x1098=((cj6)*(r00)*(sj11));
IkReal x1099=((cj8)*(x1095));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1099)))+(((cj7)*(x1087)))+(((IkReal(-1.00000000000000))*(r22)*(x1088)))+(((cj7)*(x1091)))+(x1092));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj8)*(x1095)))+(((IkReal(-1.00000000000000))*(x1087)*(x1088)))+(((IkReal(-1.00000000000000))*(x1093)))+(((IkReal(-1.00000000000000))*(r22)*(x1086)))+(((IkReal(-1.00000000000000))*(x1088)*(x1091))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1099)))+(((cj7)*(x1089)))+(((sj7)*(x1096)))+(((sj7)*(x1097)))+(x1092)+(((sj7)*(x1098)))+(((cj7)*(x1090)))+(((sj7)*(x1094))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1086)*(x1097)))+(((IkReal(-1.00000000000000))*(x1086)*(x1098)))+(((IkReal(-1.00000000000000))*(x1086)*(x1096)))+(((sj8)*(x1084)))+(x1093)+(((IkReal(-1.00000000000000))*(x1086)*(x1094)))+(((sj7)*(x1090)))+(((sj7)*(x1089))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1100=((IkReal(0.0620002000000000))*(cj7));
IkReal x1101=((r21)*(sj11));
IkReal x1102=((IkReal(1.00000000000000))*(cj11));
IkReal x1103=((r01)*(sj6));
IkReal x1104=((r20)*(sj7));
IkReal x1105=((IkReal(1.00000000000000))*(cj6));
IkReal x1106=((IkReal(0.0620002000000000))*(cj11));
IkReal x1107=((IkReal(1.00000000000000))*(sj7));
IkReal x1108=((IkReal(0.0620002000000000))*(sj11));
IkReal x1109=((cj6)*(r10));
IkReal x1110=((IkReal(1.00000000000000))*(cj7));
IkReal x1111=((cj7)*(sj6));
IkReal x1112=((r00)*(sj6));
IkReal x1113=((r11)*(sj11));
IkReal x1114=((IkReal(0.0620002000000000))*(sj7));
IkReal x1115=((cj11)*(r10));
IkReal x1116=((IkReal(1.00000000000000))*(sj11));
IkReal x1117=((cj6)*(r11));
IkReal x1118=((r01)*(sj11));
IkReal x1119=((cj11)*(cj6)*(r00));
IkReal x1120=((r11)*(sj6)*(sj7));
IkReal x1121=((r10)*(sj6)*(sj7));
IkReal x1122=((cj6)*(sj7)*(x1118));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1105))));
evalcond[2]=((IkReal(-1.00000000000000))+(((cj11)*(x1112)))+(((IkReal(-1.00000000000000))*(x1103)*(x1116)))+(((cj6)*(x1113)))+(((IkReal(-1.00000000000000))*(x1102)*(x1109))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1102)*(x1103)))+(((cj11)*(x1117)))+(((sj11)*(x1109)))+(((IkReal(-1.00000000000000))*(x1112)*(x1116))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1106)*(x1109)))+(((IkReal(-1.00000000000000))*(x1108)*(x1117)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1105)))+(((x1103)*(x1108)))+(((IkReal(-1.00000000000000))*(x1106)*(x1112))));
evalcond[5]=((((cj7)*(x1101)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1102)))+(((IkReal(-1.00000000000000))*(x1102)*(x1121)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1102)))+(x1122)+(((sj6)*(sj7)*(x1113))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1105)*(x1118)))+(((x1111)*(x1115)))+(((sj7)*(x1101)))+(((IkReal(-1.00000000000000))*(sj6)*(x1110)*(x1113)))+(((cj7)*(x1119)))+(((IkReal(-1.00000000000000))*(x1102)*(x1104))));
evalcond[7]=((((IkReal(-1.00000000000000))*(pz)*(x1107)))+(((x1104)*(x1106)))+(((IkReal(-0.0686246300000000))*(sj8)))+(((IkReal(-1.00000000000000))*(x1100)*(x1119)))+(((py)*(x1111)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x1101)*(x1114)))+(((cj6)*(x1100)*(x1118)))+(((IkReal(-1.00000000000000))*(sj6)*(x1100)*(x1115)))+(((sj6)*(x1100)*(x1113)))+(((IkReal(-0.301997930000000))*(cj8))));
evalcond[8]=((IkReal(0.270000000000000))+(((cj6)*(r00)*(sj7)*(x1106)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1107)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1105)))+(((x1106)*(x1121)))+(((IkReal(-1.00000000000000))*(pz)*(x1110)))+(((IkReal(-1.00000000000000))*(x1100)*(x1101)))+(((cj11)*(r20)*(x1100)))+(((IkReal(-1.00000000000000))*(x1108)*(x1120)))+(((IkReal(0.0686246300000000))*(cj8)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1108)))+(((IkReal(-0.301997930000000))*(sj8))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj8)*(cj8))+((sj8)*(sj8))));
dummyeval[0]=(((cj8)*(cj8))+((sj8)*(sj8)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj8)*(sj8))))+(((IkReal(-1.00000000000000))*((cj8)*(cj8)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1123=((IkReal(1.00000000000000))*(cj8));
IkReal x1124=((cj6)*(sj7));
IkReal x1125=((cj8)*(sj11));
IkReal x1126=((cj7)*(r20));
IkReal x1127=((sj6)*(sj7));
IkReal x1128=((sj11)*(sj8));
IkReal x1129=((cj7)*(r22));
IkReal x1130=((cj11)*(sj8));
IkReal x1131=((cj11)*(cj8));
IkReal x1132=((cj11)*(cj7)*(r21));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x1123)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(x1123)*(x1124)))+(((cj7)*(r21)*(x1130)))+(((x1126)*(x1128)))+(((IkReal(-1.00000000000000))*(x1123)*(x1129)))+(((r01)*(x1124)*(x1130)))+(((r10)*(x1127)*(x1128)))+(((r00)*(x1124)*(x1128)))+(((r11)*(x1127)*(x1130))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r12)*(sj8)*(x1127)))+(((r00)*(x1124)*(x1125)))+(((r01)*(x1124)*(x1131)))+(((r02)*(sj8)*(x1124)))+(((x1125)*(x1126)))+(((r11)*(x1127)*(x1131)))+(((r10)*(x1125)*(x1127)))+(((sj8)*(x1129)))+(((cj7)*(r21)*(x1131))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x1123)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(x1123)*(x1124)))+(((cj7)*(r21)*(x1130)))+(((x1126)*(x1128)))+(((IkReal(-1.00000000000000))*(x1123)*(x1129)))+(((r01)*(x1124)*(x1130)))+(((r10)*(x1127)*(x1128)))+(((r00)*(x1124)*(x1128)))+(((r11)*(x1127)*(x1130)))))), ((gconst6)*(((((r12)*(sj8)*(x1127)))+(((r00)*(x1124)*(x1125)))+(((r01)*(x1124)*(x1131)))+(((r02)*(sj8)*(x1124)))+(((x1125)*(x1126)))+(((r11)*(x1127)*(x1131)))+(((r10)*(x1125)*(x1127)))+(((sj8)*(x1129)))+(((cj7)*(r21)*(x1131)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1133=IKsin(j10);
IkReal x1134=IKcos(j10);
IkReal x1135=((IkReal(1.00000000000000))*(cj7));
IkReal x1136=((cj6)*(r02));
IkReal x1137=((IkReal(1.00000000000000))*(sj7));
IkReal x1138=((r20)*(sj11));
IkReal x1139=((cj11)*(r21));
IkReal x1140=((r12)*(sj6));
IkReal x1141=((cj8)*(x1133));
IkReal x1142=((r10)*(sj11)*(sj6));
IkReal x1143=((IkReal(1.00000000000000))*(x1134));
IkReal x1144=((cj11)*(cj6)*(r01));
IkReal x1145=((sj8)*(x1133));
IkReal x1146=((cj11)*(r11)*(sj6));
IkReal x1147=((cj6)*(r00)*(sj11));
IkReal x1148=((sj8)*(x1143));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1145)))+(((IkReal(-1.00000000000000))*(r22)*(x1137)))+(((IkReal(-1.00000000000000))*(cj8)*(x1143)))+(((cj7)*(x1136)))+(((cj7)*(x1140))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1136)*(x1137)))+(x1141)+(((IkReal(-1.00000000000000))*(r22)*(x1135)))+(((IkReal(-1.00000000000000))*(x1148)))+(((IkReal(-1.00000000000000))*(x1137)*(x1140))));
evalcond[2]=((x1145)+(((sj7)*(x1147)))+(((sj7)*(x1144)))+(((sj7)*(x1142)))+(((sj7)*(x1146)))+(((cj7)*(x1139)))+(((cj8)*(x1134)))+(((cj7)*(x1138))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1135)*(x1147)))+(x1141)+(((IkReal(-1.00000000000000))*(x1135)*(x1142)))+(((IkReal(-1.00000000000000))*(x1148)))+(((IkReal(-1.00000000000000))*(x1135)*(x1146)))+(((sj7)*(x1138)))+(((IkReal(-1.00000000000000))*(x1135)*(x1144)))+(((sj7)*(x1139))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1149=((cj6)*(r02));
IkReal x1150=((cj7)*(cj8));
IkReal x1151=((r12)*(sj6));
IkReal x1152=((cj8)*(sj7));
IkReal x1153=((cj7)*(sj8));
IkReal x1154=((cj7)*(x1151));
IkReal x1155=((IkReal(1.00000000000000))*(r22)*(sj7));
IkReal x1156=((IkReal(1.00000000000000))*(sj7)*(sj8));
if( IKabs(((gconst5)*(((((x1149)*(x1152)))+(((x1149)*(x1153)))+(((IkReal(-1.00000000000000))*(sj8)*(x1155)))+(((x1151)*(x1152)))+(((r22)*(x1150)))+(((x1151)*(x1153))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r22)*(x1153)))+(((IkReal(-1.00000000000000))*(r22)*(x1152)))+(((IkReal(-1.00000000000000))*(x1151)*(x1156)))+(((x1150)*(x1151)))+(((IkReal(-1.00000000000000))*(x1149)*(x1156)))+(((x1149)*(x1150))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst5)*(((((x1149)*(x1152)))+(((x1149)*(x1153)))+(((IkReal(-1.00000000000000))*(sj8)*(x1155)))+(((x1151)*(x1152)))+(((r22)*(x1150)))+(((x1151)*(x1153)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r22)*(x1153)))+(((IkReal(-1.00000000000000))*(r22)*(x1152)))+(((IkReal(-1.00000000000000))*(x1151)*(x1156)))+(((x1150)*(x1151)))+(((IkReal(-1.00000000000000))*(x1149)*(x1156)))+(((x1149)*(x1150)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1157=IKsin(j10);
IkReal x1158=IKcos(j10);
IkReal x1159=((IkReal(1.00000000000000))*(cj7));
IkReal x1160=((cj6)*(r02));
IkReal x1161=((IkReal(1.00000000000000))*(sj7));
IkReal x1162=((r20)*(sj11));
IkReal x1163=((cj11)*(r21));
IkReal x1164=((r12)*(sj6));
IkReal x1165=((cj8)*(x1157));
IkReal x1166=((r10)*(sj11)*(sj6));
IkReal x1167=((IkReal(1.00000000000000))*(x1158));
IkReal x1168=((cj11)*(cj6)*(r01));
IkReal x1169=((sj8)*(x1157));
IkReal x1170=((cj11)*(r11)*(sj6));
IkReal x1171=((cj6)*(r00)*(sj11));
IkReal x1172=((sj8)*(x1167));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1169)))+(((cj7)*(x1160)))+(((IkReal(-1.00000000000000))*(r22)*(x1161)))+(((cj7)*(x1164)))+(((IkReal(-1.00000000000000))*(cj8)*(x1167))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1159)))+(x1165)+(((IkReal(-1.00000000000000))*(x1161)*(x1164)))+(((IkReal(-1.00000000000000))*(x1172)))+(((IkReal(-1.00000000000000))*(x1160)*(x1161))));
evalcond[2]=((x1169)+(((cj7)*(x1162)))+(((sj7)*(x1166)))+(((sj7)*(x1170)))+(((sj7)*(x1171)))+(((sj7)*(x1168)))+(((cj8)*(x1158)))+(((cj7)*(x1163))));
evalcond[3]=((x1165)+(((IkReal(-1.00000000000000))*(x1159)*(x1171)))+(((sj7)*(x1163)))+(((IkReal(-1.00000000000000))*(x1159)*(x1168)))+(((IkReal(-1.00000000000000))*(x1172)))+(((IkReal(-1.00000000000000))*(x1159)*(x1170)))+(((sj7)*(x1162)))+(((IkReal(-1.00000000000000))*(x1159)*(x1166))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1173=((IkReal(0.0620002000000000))*(sj11));
IkReal x1174=((cj7)*(r21));
IkReal x1175=((IkReal(1.00000000000000))*(cj11));
IkReal x1176=((cj7)*(r20));
IkReal x1177=((cj6)*(sj7));
IkReal x1178=((r01)*(sj6));
IkReal x1179=((IkReal(0.0620002000000000))*(cj11));
IkReal x1180=((cj6)*(r10));
IkReal x1181=((IkReal(1.00000000000000))*(cj7));
IkReal x1182=((cj7)*(sj6));
IkReal x1183=((r00)*(sj6));
IkReal x1184=((r11)*(sj11));
IkReal x1185=((IkReal(1.00000000000000))*(py));
IkReal x1186=((sj6)*(sj7));
IkReal x1187=((r21)*(sj7));
IkReal x1188=((cj6)*(cj7));
IkReal x1189=((r01)*(x1177));
IkReal x1190=((cj11)*(r20)*(sj7));
IkReal x1191=((r11)*(x1186));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1175)*(x1180)))+(((IkReal(-1.00000000000000))*(sj11)*(x1178)))+(cj9)+(((cj6)*(x1184)))+(((cj11)*(x1183))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((x1179)*(x1180)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1173)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x1179)*(x1183)))+(((x1173)*(x1178)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x1185))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1175)*(x1186)))+(((x1184)*(x1186)))+(((IkReal(-1.00000000000000))*(x1175)*(x1176)))+(((sj11)*(x1174)))+(((sj11)*(x1189)))+(((IkReal(-1.00000000000000))*(r00)*(x1175)*(x1177))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x1181)))+(((IkReal(-1.00000000000000))*(sj6)*(x1181)*(x1184)))+(((cj11)*(r00)*(x1188)))+(((IkReal(-1.00000000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1175)))+(((sj11)*(x1187)))+(((cj11)*(r10)*(x1182))));
evalcond[5]=((IkReal(-0.0701403000000000))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((r11)*(x1173)*(x1182)))+(((IkReal(0.0616850000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x1173)*(x1187)))+(((py)*(x1182)))+(((px)*(x1188)))+(((IkReal(-1.00000000000000))*(r10)*(x1179)*(x1182)))+(((IkReal(-0.00151567000000000))*(cj9)))+(((r01)*(x1173)*(x1188)))+(((IkReal(-1.00000000000000))*(r00)*(x1179)*(x1188)))+(((r20)*(sj7)*(x1179))));
evalcond[6]=((IkReal(-0.0319979300000000))+(((r00)*(x1177)*(x1179)))+(((IkReal(-1.00000000000000))*(x1173)*(x1191)))+(((IkReal(-1.00000000000000))*(px)*(x1177)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))+(((IkReal(-1.00000000000000))*(pz)*(x1181)))+(((r10)*(x1179)*(x1186)))+(((IkReal(-1.00000000000000))*(x1173)*(x1189)))+(((IkReal(-1.00000000000000))*(x1173)*(x1174)))+(((x1176)*(x1179))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1192=((IkReal(0.0620002000000000))*(cj7));
IkReal x1193=((r21)*(sj11));
IkReal x1194=((IkReal(1.00000000000000))*(cj11));
IkReal x1195=((r01)*(sj6));
IkReal x1196=((r20)*(sj7));
IkReal x1197=((IkReal(1.00000000000000))*(cj6));
IkReal x1198=((IkReal(0.0620002000000000))*(cj11));
IkReal x1199=((IkReal(1.00000000000000))*(sj7));
IkReal x1200=((IkReal(0.0620002000000000))*(sj11));
IkReal x1201=((cj6)*(r10));
IkReal x1202=((IkReal(1.00000000000000))*(cj7));
IkReal x1203=((cj7)*(sj6));
IkReal x1204=((r00)*(sj6));
IkReal x1205=((r11)*(sj11));
IkReal x1206=((IkReal(0.0620002000000000))*(sj7));
IkReal x1207=((cj11)*(r10));
IkReal x1208=((IkReal(1.00000000000000))*(sj11));
IkReal x1209=((cj6)*(r11));
IkReal x1210=((r01)*(sj11));
IkReal x1211=((cj11)*(cj6)*(r00));
IkReal x1212=((r11)*(sj6)*(sj7));
IkReal x1213=((r10)*(sj6)*(sj7));
IkReal x1214=((cj6)*(sj7)*(x1210));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1197))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1194)*(x1201)))+(((IkReal(-1.00000000000000))*(x1195)*(x1208)))+(((cj6)*(x1205)))+(((cj11)*(x1204))));
evalcond[3]=((((sj11)*(x1201)))+(((cj11)*(x1209)))+(((IkReal(-1.00000000000000))*(x1204)*(x1208)))+(((IkReal(-1.00000000000000))*(x1194)*(x1195))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(py)*(x1197)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1198)*(x1204)))+(((x1198)*(x1201)))+(((IkReal(-1.00000000000000))*(x1200)*(x1209)))+(((x1195)*(x1200))));
evalcond[5]=((((sj6)*(sj7)*(x1205)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1194)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1194)))+(((cj7)*(x1193)))+(x1214)+(((IkReal(-1.00000000000000))*(x1194)*(x1213))));
evalcond[6]=((((cj7)*(x1211)))+(((IkReal(-1.00000000000000))*(sj6)*(x1202)*(x1205)))+(((sj7)*(x1193)))+(((IkReal(-1.00000000000000))*(x1194)*(x1196)))+(((x1203)*(x1207)))+(((IkReal(-1.00000000000000))*(cj7)*(x1197)*(x1210))));
evalcond[7]=((IkReal(-0.0716559700000000))+(((IkReal(-1.00000000000000))*(sj6)*(x1192)*(x1207)))+(((IkReal(-1.00000000000000))*(pz)*(x1199)))+(((py)*(x1203)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x1192)*(x1211)))+(((sj6)*(x1192)*(x1205)))+(((cj6)*(x1192)*(x1210)))+(((IkReal(-1.00000000000000))*(x1193)*(x1206)))+(((x1196)*(x1198))));
evalcond[8]=((IkReal(-0.0319979300000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1197)))+(((cj11)*(r20)*(x1192)))+(((IkReal(-1.00000000000000))*(x1200)*(x1212)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1200)))+(((IkReal(-1.00000000000000))*(pz)*(x1202)))+(((cj6)*(r00)*(sj7)*(x1198)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1199)))+(((x1198)*(x1213)))+(((IkReal(-1.00000000000000))*(x1192)*(x1193))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1215=((IkReal(1.00000000000000))*(sj7));
IkReal x1216=((cj6)*(r02));
IkReal x1217=((IkReal(1.00000000000000))*(cj7));
IkReal x1218=((r12)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(x1217)*(x1218)))+(((r22)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1215)*(x1218)))+(((IkReal(-1.00000000000000))*(x1215)*(x1216))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(x1217)*(x1218)))+(((r22)*(sj7)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1215)*(x1218)))+(((IkReal(-1.00000000000000))*(x1215)*(x1216)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(x1217)*(x1218)))+(((r22)*(sj7)))), ((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1215)*(x1218)))+(((IkReal(-1.00000000000000))*(x1215)*(x1216)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1219=IKsin(j10);
IkReal x1220=IKcos(j10);
IkReal x1221=((IkReal(1.00000000000000))*(r22));
IkReal x1222=((cj7)*(sj11));
IkReal x1223=((r10)*(sj6));
IkReal x1224=((cj11)*(r21));
IkReal x1225=((sj11)*(sj7));
IkReal x1226=((cj6)*(r01));
IkReal x1227=((r11)*(sj6));
IkReal x1228=((cj6)*(r02));
IkReal x1229=((r12)*(sj6));
IkReal x1230=((IkReal(1.00000000000000))*(sj7));
IkReal x1231=((cj11)*(sj7));
IkReal x1232=((cj6)*(r00));
IkReal x1233=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((((cj7)*(x1228)))+(((cj7)*(x1229)))+(x1219)+(((IkReal(-1.00000000000000))*(sj7)*(x1221))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj7)*(x1221)))+(((IkReal(-1.00000000000000))*(x1228)*(x1230)))+(((IkReal(-1.00000000000000))*(x1220)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230))));
evalcond[2]=((((cj7)*(x1224)))+(((x1227)*(x1231)))+(((x1223)*(x1225)))+(x1219)+(((x1225)*(x1232)))+(((x1226)*(x1231)))+(((r20)*(x1222))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1226)*(x1233)))+(((sj7)*(x1224)))+(x1220)+(((IkReal(-1.00000000000000))*(x1222)*(x1223)))+(((IkReal(-1.00000000000000))*(x1227)*(x1233)))+(((IkReal(-1.00000000000000))*(x1222)*(x1232)))+(((r20)*(x1225))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1234=((IkReal(0.0620002000000000))*(cj7));
IkReal x1235=((r21)*(sj11));
IkReal x1236=((IkReal(1.00000000000000))*(cj11));
IkReal x1237=((r01)*(sj6));
IkReal x1238=((r20)*(sj7));
IkReal x1239=((IkReal(1.00000000000000))*(cj6));
IkReal x1240=((IkReal(0.0620002000000000))*(cj11));
IkReal x1241=((IkReal(1.00000000000000))*(sj7));
IkReal x1242=((IkReal(0.0620002000000000))*(sj11));
IkReal x1243=((cj6)*(r10));
IkReal x1244=((IkReal(1.00000000000000))*(cj7));
IkReal x1245=((cj7)*(sj6));
IkReal x1246=((r00)*(sj6));
IkReal x1247=((r11)*(sj11));
IkReal x1248=((IkReal(0.0620002000000000))*(sj7));
IkReal x1249=((cj11)*(r10));
IkReal x1250=((IkReal(1.00000000000000))*(sj11));
IkReal x1251=((cj6)*(r11));
IkReal x1252=((r01)*(sj11));
IkReal x1253=((cj11)*(cj6)*(r00));
IkReal x1254=((r11)*(sj6)*(sj7));
IkReal x1255=((r10)*(sj6)*(sj7));
IkReal x1256=((cj6)*(sj7)*(x1252));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1239))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1236)*(x1243)))+(((IkReal(-1.00000000000000))*(x1237)*(x1250)))+(((cj11)*(x1246)))+(((cj6)*(x1247))));
evalcond[3]=((((sj11)*(x1243)))+(((cj11)*(x1251)))+(((IkReal(-1.00000000000000))*(x1246)*(x1250)))+(((IkReal(-1.00000000000000))*(x1236)*(x1237))));
evalcond[4]=((IkReal(0.0515917000000000))+(((x1237)*(x1242)))+(((IkReal(-1.00000000000000))*(x1242)*(x1251)))+(((IkReal(-1.00000000000000))*(x1240)*(x1246)))+(((IkReal(-1.00000000000000))*(py)*(x1239)))+(((px)*(sj6)))+(((x1240)*(x1243))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1236)*(x1255)))+(x1256)+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1236)))+(((cj7)*(x1235)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1236)))+(((sj6)*(sj7)*(x1247))));
evalcond[6]=((((x1245)*(x1249)))+(((cj7)*(x1253)))+(((IkReal(-1.00000000000000))*(x1236)*(x1238)))+(((IkReal(-1.00000000000000))*(cj7)*(x1239)*(x1252)))+(((IkReal(-1.00000000000000))*(sj6)*(x1244)*(x1247)))+(((sj7)*(x1235))));
evalcond[7]=((IkReal(-0.0686246300000000))+(((py)*(x1245)))+(((cj6)*(x1234)*(x1252)))+(((sj6)*(x1234)*(x1247)))+(((x1238)*(x1240)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(sj6)*(x1234)*(x1249)))+(((IkReal(-1.00000000000000))*(x1234)*(x1253)))+(((IkReal(-1.00000000000000))*(x1235)*(x1248)))+(((IkReal(-1.00000000000000))*(pz)*(x1241))));
evalcond[8]=((IkReal(-0.0319979300000000))+(((cj11)*(r20)*(x1234)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1241)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1242)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1239)))+(((IkReal(-1.00000000000000))*(x1242)*(x1254)))+(((cj6)*(r00)*(sj7)*(x1240)))+(((IkReal(-1.00000000000000))*(x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(pz)*(x1244)))+(((x1240)*(x1255))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1257=((IkReal(1.00000000000000))*(r22));
IkReal x1258=((cj6)*(r02));
IkReal x1259=((r12)*(sj6));
IkReal x1260=((IkReal(1.00000000000000))*(sj7));
if( IKabs(((((cj7)*(x1258)))+(((cj7)*(x1259)))+(((IkReal(-1.00000000000000))*(sj7)*(x1257))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1258)*(x1260)))+(((IkReal(-1.00000000000000))*(cj7)*(x1257)))+(((IkReal(-1.00000000000000))*(x1259)*(x1260))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x1258)))+(((cj7)*(x1259)))+(((IkReal(-1.00000000000000))*(sj7)*(x1257)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1258)*(x1260)))+(((IkReal(-1.00000000000000))*(cj7)*(x1257)))+(((IkReal(-1.00000000000000))*(x1259)*(x1260)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x1258)))+(((cj7)*(x1259)))+(((IkReal(-1.00000000000000))*(sj7)*(x1257)))), ((((IkReal(-1.00000000000000))*(x1258)*(x1260)))+(((IkReal(-1.00000000000000))*(cj7)*(x1257)))+(((IkReal(-1.00000000000000))*(x1259)*(x1260)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1261=IKsin(j10);
IkReal x1262=((IkReal(1.00000000000000))*(cj6));
IkReal x1263=((cj7)*(sj11));
IkReal x1264=((r10)*(sj6));
IkReal x1265=((cj11)*(r21));
IkReal x1266=((sj11)*(sj7));
IkReal x1267=((cj11)*(cj7));
IkReal x1268=((IkReal(1.00000000000000))*(sj7));
IkReal x1269=((r11)*(sj6));
IkReal x1270=((r12)*(sj6));
IkReal x1271=((cj11)*(sj7));
IkReal x1272=((IkReal(1.00000000000000))*(IKcos(j10)));
evalcond[0]=((((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(x1268)))+(((IkReal(-1.00000000000000))*(x1261)))+(((cj7)*(x1270))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1272)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1262)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))+(((IkReal(-1.00000000000000))*(x1268)*(x1270))));
evalcond[2]=((((cj7)*(x1265)))+(((x1264)*(x1266)))+(((x1269)*(x1271)))+(((r20)*(x1263)))+(((cj6)*(r00)*(x1266)))+(((cj6)*(r01)*(x1271)))+(x1261));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1262)*(x1267)))+(((IkReal(-1.00000000000000))*(x1272)))+(((IkReal(-1.00000000000000))*(x1263)*(x1264)))+(((sj7)*(x1265)))+(((r20)*(x1266)))+(((IkReal(-1.00000000000000))*(x1267)*(x1269)))+(((IkReal(-1.00000000000000))*(r00)*(x1262)*(x1263))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1273=((IkReal(1.00000000000000))*(r02));
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x1273)))+(((cj6)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x1273)))+(((cj6)*(r12)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj6)*(x1273)))+(((cj6)*(r12)))))), ((((IkReal(-1.00000000000000))*(cj6)*(sj7)*(x1273)))+(((IkReal(-1.00000000000000))*(r12)*(sj6)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1274=IKsin(j10);
IkReal x1275=IKcos(j10);
IkReal x1276=((IkReal(1.00000000000000))*(sj6));
IkReal x1277=((cj7)*(sj11));
IkReal x1278=((cj11)*(r01));
IkReal x1279=((IkReal(1.00000000000000))*(cj7));
IkReal x1280=((IkReal(1.00000000000000))*(cj6));
IkReal x1281=((cj11)*(r21));
IkReal x1282=((r10)*(sj11));
IkReal x1283=((sj6)*(sj7));
IkReal x1284=((cj11)*(r11));
IkReal x1285=((r00)*(sj11));
IkReal x1286=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x1274)))+(((IkReal(-1.00000000000000))*(r12)*(x1280))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj9)*(x1274)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1285)))+(((cj6)*(x1282)))+(((cj6)*(x1284)))+(((sj9)*(x1275))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1280)))+(((IkReal(-1.00000000000000))*(x1275)))+(((IkReal(-1.00000000000000))*(r22)*(x1279)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1276))));
evalcond[4]=((((cj7)*(x1281)))+(((x1285)*(x1286)))+(((x1282)*(x1283)))+(x1274)+(((x1283)*(x1284)))+(((x1278)*(x1286)))+(((r20)*(x1277))));
evalcond[5]=((((sj7)*(x1281)))+(((IkReal(-1.00000000000000))*(r10)*(x1276)*(x1277)))+(((r20)*(sj11)*(sj7)))+(((cj9)*(x1275)))+(((IkReal(-1.00000000000000))*(cj7)*(x1276)*(x1284)))+(((IkReal(-1.00000000000000))*(r00)*(x1277)*(x1280)))+(((IkReal(-1.00000000000000))*(cj6)*(x1278)*(x1279))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1287=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1287)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1287)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst7)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1287)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1287)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1288=IKsin(j10);
IkReal x1289=IKcos(j10);
IkReal x1290=((IkReal(1.00000000000000))*(sj6));
IkReal x1291=((cj7)*(sj11));
IkReal x1292=((cj11)*(r01));
IkReal x1293=((IkReal(1.00000000000000))*(cj7));
IkReal x1294=((IkReal(1.00000000000000))*(cj6));
IkReal x1295=((cj11)*(r21));
IkReal x1296=((r10)*(sj11));
IkReal x1297=((sj6)*(sj7));
IkReal x1298=((cj11)*(r11));
IkReal x1299=((r00)*(sj11));
IkReal x1300=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x1288)))+(((IkReal(-1.00000000000000))*(r12)*(x1294))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj9)*(x1288))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1290)*(x1292)))+(((cj6)*(x1296)))+(((cj6)*(x1298)))+(((IkReal(-1.00000000000000))*(x1290)*(x1299)))+(((sj9)*(x1289))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(x1293)))+(((IkReal(-1.00000000000000))*(x1289)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1290)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1294))));
evalcond[4]=((((cj7)*(x1295)))+(((r20)*(x1291)))+(((x1297)*(x1298)))+(((x1292)*(x1300)))+(x1288)+(((x1296)*(x1297)))+(((x1299)*(x1300))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x1290)*(x1298)))+(((cj9)*(x1289)))+(((IkReal(-1.00000000000000))*(r00)*(x1291)*(x1294)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(x1292)*(x1293)))+(((sj7)*(x1295)))+(((IkReal(-1.00000000000000))*(r10)*(x1290)*(x1291))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1301=((IkReal(0.0620002000000000))*(sj11));
IkReal x1302=((cj7)*(r21));
IkReal x1303=((IkReal(1.00000000000000))*(cj11));
IkReal x1304=((cj7)*(r20));
IkReal x1305=((cj6)*(sj7));
IkReal x1306=((r01)*(sj6));
IkReal x1307=((IkReal(0.0620002000000000))*(cj11));
IkReal x1308=((cj6)*(r10));
IkReal x1309=((IkReal(1.00000000000000))*(cj7));
IkReal x1310=((cj7)*(sj6));
IkReal x1311=((r00)*(sj6));
IkReal x1312=((r11)*(sj11));
IkReal x1313=((IkReal(1.00000000000000))*(py));
IkReal x1314=((sj6)*(sj7));
IkReal x1315=((r21)*(sj7));
IkReal x1316=((cj6)*(cj7));
IkReal x1317=((r01)*(x1305));
IkReal x1318=((cj11)*(r20)*(sj7));
IkReal x1319=((r11)*(x1314));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j8)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(x1312)))+(((cj11)*(x1311)))+(cj9)+(((IkReal(-1.00000000000000))*(sj11)*(x1306)))+(((IkReal(-1.00000000000000))*(x1303)*(x1308))));
evalcond[2]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1301)))+(((IkReal(-1.00000000000000))*(x1307)*(x1311)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(x1313)))+(((x1301)*(x1306)))+(((x1307)*(x1308))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1303)*(x1305)))+(((IkReal(-1.00000000000000))*(r10)*(x1303)*(x1314)))+(((x1312)*(x1314)))+(((IkReal(-1.00000000000000))*(x1303)*(x1304)))+(((sj11)*(x1317)))+(((sj11)*(x1302))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj11)*(x1309)))+(sj9)+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1303)))+(((IkReal(-1.00000000000000))*(sj6)*(x1309)*(x1312)))+(((cj11)*(r00)*(x1316)))+(((sj11)*(x1315)))+(((cj11)*(r10)*(x1310))));
evalcond[5]=((IkReal(0.0701403000000000))+(((r20)*(sj7)*(x1307)))+(((IkReal(-1.00000000000000))*(pz)*(sj7)))+(((IkReal(-1.00000000000000))*(r10)*(x1307)*(x1310)))+(((r01)*(x1301)*(x1316)))+(((IkReal(0.00151567000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(r00)*(x1307)*(x1316)))+(((IkReal(-1.00000000000000))*(x1301)*(x1315)))+(((r11)*(x1301)*(x1310)))+(((IkReal(-0.0616850000000000))*(sj9)))+(((py)*(x1310)))+(((px)*(x1316))));
evalcond[6]=((IkReal(0.571997930000000))+(((IkReal(-1.00000000000000))*(x1313)*(x1314)))+(((x1304)*(x1307)))+(((IkReal(-1.00000000000000))*(px)*(x1305)))+(((IkReal(-1.00000000000000))*(x1301)*(x1317)))+(((IkReal(-1.00000000000000))*(pz)*(x1309)))+(((r10)*(x1307)*(x1314)))+(((r00)*(x1305)*(x1307)))+(((IkReal(-1.00000000000000))*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(x1301)*(x1319))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(sj9);
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1320=((IkReal(0.0620002000000000))*(cj7));
IkReal x1321=((r21)*(sj11));
IkReal x1322=((IkReal(1.00000000000000))*(cj11));
IkReal x1323=((r01)*(sj6));
IkReal x1324=((r20)*(sj7));
IkReal x1325=((IkReal(1.00000000000000))*(cj6));
IkReal x1326=((IkReal(0.0620002000000000))*(cj11));
IkReal x1327=((IkReal(1.00000000000000))*(sj7));
IkReal x1328=((IkReal(0.0620002000000000))*(sj11));
IkReal x1329=((cj6)*(r10));
IkReal x1330=((IkReal(1.00000000000000))*(cj7));
IkReal x1331=((cj7)*(sj6));
IkReal x1332=((r00)*(sj6));
IkReal x1333=((r11)*(sj11));
IkReal x1334=((IkReal(0.0620002000000000))*(sj7));
IkReal x1335=((cj11)*(r10));
IkReal x1336=((IkReal(1.00000000000000))*(sj11));
IkReal x1337=((cj6)*(r11));
IkReal x1338=((r01)*(sj11));
IkReal x1339=((cj11)*(cj6)*(r00));
IkReal x1340=((r11)*(sj6)*(sj7));
IkReal x1341=((r10)*(sj6)*(sj7));
IkReal x1342=((cj6)*(sj7)*(x1338));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1325))));
evalcond[2]=((IkReal(1.00000000000000))+(((cj6)*(x1333)))+(((IkReal(-1.00000000000000))*(x1322)*(x1329)))+(((IkReal(-1.00000000000000))*(x1323)*(x1336)))+(((cj11)*(x1332))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1322)*(x1323)))+(((sj11)*(x1329)))+(((cj11)*(x1337)))+(((IkReal(-1.00000000000000))*(x1332)*(x1336))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((IkReal(-1.00000000000000))*(x1326)*(x1332)))+(((px)*(sj6)))+(((x1326)*(x1329)))+(((x1323)*(x1328)))+(((IkReal(-1.00000000000000))*(py)*(x1325)))+(((IkReal(-1.00000000000000))*(x1328)*(x1337))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1322)*(x1341)))+(((cj7)*(x1321)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1322)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1322)))+(((sj6)*(sj7)*(x1333)))+(x1342));
evalcond[6]=((((sj7)*(x1321)))+(((IkReal(-1.00000000000000))*(cj7)*(x1325)*(x1338)))+(((cj7)*(x1339)))+(((IkReal(-1.00000000000000))*(x1322)*(x1324)))+(((IkReal(-1.00000000000000))*(sj6)*(x1330)*(x1333)))+(((x1331)*(x1335))));
evalcond[7]=((IkReal(0.0716559700000000))+(((sj6)*(x1320)*(x1333)))+(((IkReal(-1.00000000000000))*(x1320)*(x1339)))+(((IkReal(-1.00000000000000))*(sj6)*(x1320)*(x1335)))+(((cj6)*(cj7)*(px)))+(((IkReal(-1.00000000000000))*(x1321)*(x1334)))+(((py)*(x1331)))+(((cj6)*(x1320)*(x1338)))+(((x1324)*(x1326)))+(((IkReal(-1.00000000000000))*(pz)*(x1327))));
evalcond[8]=((IkReal(0.571997930000000))+(((x1326)*(x1341)))+(((IkReal(-1.00000000000000))*(pz)*(x1330)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1327)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1328)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1325)))+(((cj11)*(r20)*(x1320)))+(((IkReal(-1.00000000000000))*(x1320)*(x1321)))+(((cj6)*(r00)*(sj7)*(x1326)))+(((IkReal(-1.00000000000000))*(x1328)*(x1340))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1343=((r12)*(sj6));
IkReal x1344=((cj6)*(r02));
if( IKabs(((((cj7)*(x1343)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x1343)))+(((sj7)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(x1343)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1344)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x1343)))+(((sj7)*(x1344)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((cj7)*(x1343)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1344)))), ((((cj7)*(r22)))+(((sj7)*(x1343)))+(((sj7)*(x1344)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1345=IKcos(j10);
IkReal x1346=((IkReal(1.00000000000000))*(cj6));
IkReal x1347=((cj7)*(sj11));
IkReal x1348=((r10)*(sj6));
IkReal x1349=((cj11)*(r21));
IkReal x1350=((sj11)*(sj7));
IkReal x1351=((cj11)*(cj7));
IkReal x1352=((IkReal(1.00000000000000))*(sj7));
IkReal x1353=((r11)*(sj6));
IkReal x1354=((r12)*(sj6));
IkReal x1355=((cj11)*(sj7));
IkReal x1356=((IkReal(1.00000000000000))*(IKsin(j10)));
evalcond[0]=((((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(x1352)))+(((IkReal(-1.00000000000000))*(x1356)))+(((cj7)*(x1354))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1352)*(x1354)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1346)))+(x1345)+(((IkReal(-1.00000000000000))*(cj7)*(r22))));
evalcond[2]=((((cj6)*(r01)*(x1355)))+(((x1348)*(x1350)))+(((x1353)*(x1355)))+(((cj7)*(x1349)))+(((r20)*(x1347)))+(((cj6)*(r00)*(x1350)))+(((IkReal(-1.00000000000000))*(x1356))));
evalcond[3]=((((r20)*(x1350)))+(((IkReal(-1.00000000000000))*(x1351)*(x1353)))+(((IkReal(-1.00000000000000))*(r00)*(x1346)*(x1347)))+(((sj7)*(x1349)))+(((IkReal(-1.00000000000000))*(r01)*(x1346)*(x1351)))+(((IkReal(-1.00000000000000))*(x1345)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1357=((IkReal(0.0620002000000000))*(cj7));
IkReal x1358=((r21)*(sj11));
IkReal x1359=((IkReal(1.00000000000000))*(cj11));
IkReal x1360=((r01)*(sj6));
IkReal x1361=((r20)*(sj7));
IkReal x1362=((IkReal(1.00000000000000))*(cj6));
IkReal x1363=((IkReal(0.0620002000000000))*(cj11));
IkReal x1364=((IkReal(1.00000000000000))*(sj7));
IkReal x1365=((IkReal(0.0620002000000000))*(sj11));
IkReal x1366=((cj6)*(r10));
IkReal x1367=((IkReal(1.00000000000000))*(cj7));
IkReal x1368=((cj7)*(sj6));
IkReal x1369=((r00)*(sj6));
IkReal x1370=((r11)*(sj11));
IkReal x1371=((IkReal(0.0620002000000000))*(sj7));
IkReal x1372=((cj11)*(r10));
IkReal x1373=((IkReal(1.00000000000000))*(sj11));
IkReal x1374=((cj6)*(r11));
IkReal x1375=((r01)*(sj11));
IkReal x1376=((cj11)*(cj6)*(r00));
IkReal x1377=((r11)*(sj6)*(sj7));
IkReal x1378=((r10)*(sj6)*(sj7));
IkReal x1379=((cj6)*(sj7)*(x1375));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1362))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1359)*(x1366)))+(((IkReal(-1.00000000000000))*(x1360)*(x1373)))+(((cj6)*(x1370)))+(((cj11)*(x1369))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1369)*(x1373)))+(((sj11)*(x1366)))+(((cj11)*(x1374)))+(((IkReal(-1.00000000000000))*(x1359)*(x1360))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(x1363)*(x1369)))+(((IkReal(-1.00000000000000))*(x1365)*(x1374)))+(((px)*(sj6)))+(((x1360)*(x1365)))+(((x1363)*(x1366)))+(((IkReal(-1.00000000000000))*(py)*(x1362))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1359)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj7)*(x1359)))+(((cj7)*(x1358)))+(((sj6)*(sj7)*(x1370)))+(x1379)+(((IkReal(-1.00000000000000))*(x1359)*(x1378))));
evalcond[6]=((((cj7)*(x1376)))+(((IkReal(-1.00000000000000))*(x1359)*(x1361)))+(((sj7)*(x1358)))+(((x1368)*(x1372)))+(((IkReal(-1.00000000000000))*(cj7)*(x1362)*(x1375)))+(((IkReal(-1.00000000000000))*(sj6)*(x1367)*(x1370))));
evalcond[7]=((IkReal(0.0686246300000000))+(((x1361)*(x1363)))+(((IkReal(-1.00000000000000))*(sj6)*(x1357)*(x1372)))+(((IkReal(-1.00000000000000))*(x1357)*(x1376)))+(((py)*(x1368)))+(((IkReal(-1.00000000000000))*(pz)*(x1364)))+(((cj6)*(cj7)*(px)))+(((sj6)*(x1357)*(x1370)))+(((cj6)*(x1357)*(x1375)))+(((IkReal(-1.00000000000000))*(x1358)*(x1371))));
evalcond[8]=((IkReal(0.571997930000000))+(((IkReal(-1.00000000000000))*(x1357)*(x1358)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1362)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj7)*(x1365)))+(((cj6)*(r00)*(sj7)*(x1363)))+(((cj11)*(r20)*(x1357)))+(((IkReal(-1.00000000000000))*(py)*(sj6)*(x1364)))+(((IkReal(-1.00000000000000))*(pz)*(x1367)))+(((x1363)*(x1378)))+(((IkReal(-1.00000000000000))*(x1365)*(x1377))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1380=((r12)*(sj6));
IkReal x1381=((cj6)*(r02));
IkReal x1382=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1380)*(x1382))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((sj7)*(x1380)))+(((sj7)*(x1381))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1380)*(x1382)))))+IKsqr(((((cj7)*(r22)))+(((sj7)*(x1380)))+(((sj7)*(x1381)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1380)*(x1382)))), ((((cj7)*(r22)))+(((sj7)*(x1380)))+(((sj7)*(x1381)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[4];
IkReal x1383=IKsin(j10);
IkReal x1384=IKcos(j10);
IkReal x1385=((IkReal(1.00000000000000))*(r22));
IkReal x1386=((cj6)*(r00));
IkReal x1387=((r10)*(sj6));
IkReal x1388=((r20)*(sj11));
IkReal x1389=((cj11)*(r21));
IkReal x1390=((sj11)*(sj7));
IkReal x1391=((cj6)*(r01));
IkReal x1392=((r11)*(sj6));
IkReal x1393=((cj6)*(r02));
IkReal x1394=((r12)*(sj6));
IkReal x1395=((IkReal(1.00000000000000))*(sj7));
IkReal x1396=((cj11)*(sj7));
IkReal x1397=((IkReal(1.00000000000000))*(cj7)*(sj11));
IkReal x1398=((IkReal(1.00000000000000))*(cj11)*(cj7));
evalcond[0]=((x1383)+(((IkReal(-1.00000000000000))*(sj7)*(x1385)))+(((cj7)*(x1393)))+(((cj7)*(x1394))));
evalcond[1]=((x1384)+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(((IkReal(-1.00000000000000))*(cj7)*(x1385)))+(((IkReal(-1.00000000000000))*(x1393)*(x1395))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1383)))+(((x1386)*(x1390)))+(((cj7)*(x1389)))+(((x1392)*(x1396)))+(((x1391)*(x1396)))+(((x1387)*(x1390)))+(((cj7)*(x1388))));
evalcond[3]=((((sj7)*(x1388)))+(x1384)+(((IkReal(-1.00000000000000))*(x1387)*(x1397)))+(((IkReal(-1.00000000000000))*(x1386)*(x1397)))+(((IkReal(-1.00000000000000))*(x1392)*(x1398)))+(((sj7)*(x1389)))+(((IkReal(-1.00000000000000))*(x1391)*(x1398))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
if( IKabs(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))))+IKsqr(((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30))*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((((cj7)*(r22)))+(((cj6)*(r02)*(sj7)))+(((r12)*(sj6)*(sj7)))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1399=IKsin(j10);
IkReal x1400=IKcos(j10);
IkReal x1401=((IkReal(1.00000000000000))*(cj9));
IkReal x1402=((IkReal(1.00000000000000))*(sj6));
IkReal x1403=((cj7)*(sj11));
IkReal x1404=((cj11)*(r01));
IkReal x1405=((IkReal(1.00000000000000))*(cj7));
IkReal x1406=((IkReal(1.00000000000000))*(cj6));
IkReal x1407=((cj11)*(r21));
IkReal x1408=((r10)*(sj11));
IkReal x1409=((sj6)*(sj7));
IkReal x1410=((cj11)*(r11));
IkReal x1411=((r00)*(sj11));
IkReal x1412=((cj6)*(sj7));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x1406)))+(((r02)*(sj6)))+(((sj9)*(x1399))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1399)*(x1401))));
evalcond[2]=((((cj6)*(x1410)))+(((sj9)*(x1400)))+(((IkReal(-1.00000000000000))*(x1402)*(x1411)))+(((cj6)*(x1408)))+(((IkReal(-1.00000000000000))*(x1402)*(x1404))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1402)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1406)))+(((IkReal(-1.00000000000000))*(r22)*(x1405)))+(x1400));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1399)))+(((x1409)*(x1410)))+(((x1411)*(x1412)))+(((r20)*(x1403)))+(((cj7)*(x1407)))+(((x1408)*(x1409)))+(((x1404)*(x1412))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x1402)*(x1410)))+(((IkReal(-1.00000000000000))*(r10)*(x1402)*(x1403)))+(((sj7)*(x1407)))+(((IkReal(-1.00000000000000))*(cj6)*(x1404)*(x1405)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((IkReal(-1.00000000000000))*(r00)*(x1403)*(x1406))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1413=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1413)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1413)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst8)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1413)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1413)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1414=IKsin(j10);
IkReal x1415=IKcos(j10);
IkReal x1416=((IkReal(1.00000000000000))*(cj9));
IkReal x1417=((IkReal(1.00000000000000))*(sj6));
IkReal x1418=((cj7)*(sj11));
IkReal x1419=((cj11)*(r01));
IkReal x1420=((IkReal(1.00000000000000))*(cj7));
IkReal x1421=((IkReal(1.00000000000000))*(cj6));
IkReal x1422=((cj11)*(r21));
IkReal x1423=((r10)*(sj11));
IkReal x1424=((sj6)*(sj7));
IkReal x1425=((cj11)*(r11));
IkReal x1426=((r00)*(sj11));
IkReal x1427=((cj6)*(sj7));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1421)))+(((sj9)*(x1414))));
evalcond[1]=((((cj7)*(r12)*(sj6)))+(((IkReal(-1.00000000000000))*(x1414)*(x1416)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))));
evalcond[2]=((((sj9)*(x1415)))+(((IkReal(-1.00000000000000))*(x1417)*(x1419)))+(((cj6)*(x1423)))+(((IkReal(-1.00000000000000))*(x1417)*(x1426)))+(((cj6)*(x1425))));
evalcond[3]=((x1415)+(((IkReal(-1.00000000000000))*(r22)*(x1420)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1417)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1421))));
evalcond[4]=((((x1424)*(x1425)))+(((x1426)*(x1427)))+(((r20)*(x1418)))+(((IkReal(-1.00000000000000))*(x1414)))+(((x1423)*(x1424)))+(((x1419)*(x1427)))+(((cj7)*(x1422))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(x1417)*(x1425)))+(((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((r20)*(sj11)*(sj7)))+(((sj7)*(x1422)))+(((IkReal(-1.00000000000000))*(cj6)*(x1419)*(x1420)))+(((IkReal(-1.00000000000000))*(r10)*(x1417)*(x1418)))+(((IkReal(-1.00000000000000))*(r00)*(x1418)*(x1421))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1428=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x1429=((cj9)*(sj8));
IkReal x1430=((cj6)*(r12));
IkReal x1431=((cj7)*(sj9));
IkReal x1432=((IkReal(1.00000000000000))*(r02)*(sj6));
if( IKabs(((x1428)*(((x1430)+(((IkReal(-1.00000000000000))*(x1432))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1428)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1429)*(x1432)))+(((r12)*(sj6)*(x1431)))+(((cj6)*(r02)*(x1431)))+(((x1429)*(x1430)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1428)*(((x1430)+(((IkReal(-1.00000000000000))*(x1432)))))))+IKsqr(((x1428)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1429)*(x1432)))+(((r12)*(sj6)*(x1431)))+(((cj6)*(r02)*(x1431)))+(((x1429)*(x1430)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j10array[0]=IKatan2(((x1428)*(((x1430)+(((IkReal(-1.00000000000000))*(x1432)))))), ((x1428)*(((IKabs(cj8) != 0)?((IkReal)1/(cj8)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1429)*(x1432)))+(((r12)*(sj6)*(x1431)))+(((cj6)*(r02)*(x1431)))+(((x1429)*(x1430)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)*(sj9)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1433=IKsin(j10);
IkReal x1434=IKcos(j10);
IkReal x1435=((cj9)*(sj8));
IkReal x1436=((cj6)*(cj7));
IkReal x1437=((IkReal(1.00000000000000))*(cj7));
IkReal x1438=((IkReal(1.00000000000000))*(cj6));
IkReal x1439=((r20)*(sj11));
IkReal x1440=((cj11)*(r21));
IkReal x1441=((cj6)*(sj11));
IkReal x1442=((cj11)*(cj6));
IkReal x1443=((r12)*(sj6));
IkReal x1444=((IkReal(1.00000000000000))*(sj7));
IkReal x1445=((cj8)*(x1433));
IkReal x1446=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1447=((r10)*(sj11)*(sj6));
IkReal x1448=((cj11)*(r11)*(sj6));
IkReal x1449=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x1450=((IkReal(1.00000000000000))*(cj8)*(x1434));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1438)))+(((sj9)*(x1433))));
evalcond[1]=((((cj7)*(x1443)))+(((r02)*(x1436)))+(((IkReal(-1.00000000000000))*(r22)*(x1444)))+(((x1433)*(x1435)))+(((IkReal(-1.00000000000000))*(x1450))));
evalcond[2]=((((r10)*(x1441)))+(((sj9)*(x1434)))+(((IkReal(-1.00000000000000))*(sj6)*(x1449)))+(((IkReal(-1.00000000000000))*(sj6)*(x1446)))+(((r11)*(x1442))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1438)))+(((IkReal(-1.00000000000000))*(cj9)*(x1445)))+(((IkReal(-1.00000000000000))*(x1443)*(x1444)))+(((IkReal(-1.00000000000000))*(sj8)*(x1434)))+(((IkReal(-1.00000000000000))*(r22)*(x1437))));
evalcond[4]=((((sj8)*(x1433)))+(((IkReal(-1.00000000000000))*(cj9)*(x1450)))+(((cj7)*(x1439)))+(((sj7)*(x1447)))+(((cj7)*(x1440)))+(((sj7)*(x1448)))+(((r00)*(sj7)*(x1441)))+(((r01)*(sj7)*(x1442))));
evalcond[5]=((((x1434)*(x1435)))+(((IkReal(-1.00000000000000))*(x1436)*(x1449)))+(((sj7)*(x1439)))+(((IkReal(-1.00000000000000))*(x1437)*(x1447)))+(x1445)+(((sj7)*(x1440)))+(((IkReal(-1.00000000000000))*(x1436)*(x1446)))+(((IkReal(-1.00000000000000))*(x1437)*(x1448))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1451=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1451)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1451)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst2)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1451)))+(((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1451)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[6];
IkReal x1452=IKsin(j10);
IkReal x1453=IKcos(j10);
IkReal x1454=((cj9)*(sj8));
IkReal x1455=((cj6)*(cj7));
IkReal x1456=((IkReal(1.00000000000000))*(cj7));
IkReal x1457=((IkReal(1.00000000000000))*(cj6));
IkReal x1458=((r20)*(sj11));
IkReal x1459=((cj11)*(r21));
IkReal x1460=((cj6)*(sj11));
IkReal x1461=((cj11)*(cj6));
IkReal x1462=((r12)*(sj6));
IkReal x1463=((IkReal(1.00000000000000))*(sj7));
IkReal x1464=((cj8)*(x1452));
IkReal x1465=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1466=((r10)*(sj11)*(sj6));
IkReal x1467=((cj11)*(r11)*(sj6));
IkReal x1468=((IkReal(1.00000000000000))*(r00)*(sj11));
IkReal x1469=((IkReal(1.00000000000000))*(cj8)*(x1453));
evalcond[0]=((((r02)*(sj6)))+(((sj9)*(x1452)))+(((IkReal(-1.00000000000000))*(r12)*(x1457))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1463)))+(((r02)*(x1455)))+(((cj7)*(x1462)))+(((x1452)*(x1454)))+(((IkReal(-1.00000000000000))*(x1469))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj6)*(x1465)))+(((r11)*(x1461)))+(((IkReal(-1.00000000000000))*(sj6)*(x1468)))+(((r10)*(x1460)))+(((sj9)*(x1453))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(x1464)))+(((IkReal(-1.00000000000000))*(x1462)*(x1463)))+(((IkReal(-1.00000000000000))*(sj8)*(x1453)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1457)))+(((IkReal(-1.00000000000000))*(r22)*(x1456))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj9)*(x1469)))+(((r00)*(sj7)*(x1460)))+(((r01)*(sj7)*(x1461)))+(((cj7)*(x1459)))+(((cj7)*(x1458)))+(((sj8)*(x1452)))+(((sj7)*(x1466)))+(((sj7)*(x1467))));
evalcond[5]=((((x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(x1456)*(x1466)))+(x1464)+(((IkReal(-1.00000000000000))*(x1455)*(x1468)))+(((IkReal(-1.00000000000000))*(x1455)*(x1465)))+(((sj7)*(x1458)))+(((sj7)*(x1459)))+(((IkReal(-1.00000000000000))*(x1456)*(x1467))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j10array[1], cj10array[1], sj10array[1];
bool j10valid[1]={false};
_nj10 = 1;
IkReal x1470=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst1)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1470)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1470)))+(((r00)*(sj11)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j10array[0]=IKatan2(((gconst1)*(((((cj6)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj6)))))), ((gconst1)*(((((cj11)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1470)))+(((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1470)))+(((r00)*(sj11)*(sj6)))))));
sj10array[0]=IKsin(j10array[0]);
cj10array[0]=IKcos(j10array[0]);
if( j10array[0] > IKPI )
{
    j10array[0]-=IK2PI;
}
else if( j10array[0] < -IKPI )
{    j10array[0]+=IK2PI;
}
j10valid[0] = true;
for(int ij10 = 0; ij10 < 1; ++ij10)
{
if( !j10valid[ij10] )
{
    continue;
}
_ij10[0] = ij10; _ij10[1] = -1;
for(int iij10 = ij10+1; iij10 < 1; ++iij10)
{
if( j10valid[iij10] && IKabs(cj10array[ij10]-cj10array[iij10]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij10]-sj10array[iij10]) < IKFAST_SOLUTION_THRESH )
{
    j10valid[iij10]=false; _ij10[1] = iij10; break; 
}
}
j10 = j10array[ij10]; cj10 = cj10array[ij10]; sj10 = sj10array[ij10];
{
IkReal evalcond[2];
IkReal x1471=((IkReal(1.00000000000000))*(sj6));
evalcond[0]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r12)))+(((sj9)*(IKsin(j10)))));
evalcond[1]=((((cj11)*(cj6)*(r11)))+(((cj6)*(r10)*(sj11)))+(((sj9)*(IKcos(j10))))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1471)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1471))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((cj10)*(cj10))+((((cj9)*(cj9))*((sj10)*(sj10))))));
dummyeval[0]=(((cj10)*(cj10))+((((cj9)*(cj9))*((sj10)*(sj10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1472=(cj9)*(cj9);
dummyeval[0]=((((sj10)*(x1472)))+(((IkReal(-1.00000000000000))*(sj10))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(cj10)))+(((cj10)*(x1472))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj9;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1473=((IkReal(1.00000000000000))*(cj11));
IkReal x1474=((r01)*(sj6));
IkReal x1475=((cj6)*(sj7));
IkReal x1476=((r01)*(sj11));
IkReal x1477=((IkReal(1.00000000000000))*(cj6));
IkReal x1478=((IkReal(0.0620002000000000))*(sj11));
IkReal x1479=((cj11)*(r10));
IkReal x1480=((r11)*(sj11));
IkReal x1481=((sj6)*(sj7));
IkReal x1482=((r21)*(sj11));
IkReal x1483=((r00)*(sj6));
IkReal x1484=((cj7)*(sj6));
IkReal x1485=((cj6)*(r10));
IkReal x1486=((IkReal(1.00000000000000))*(sj11));
IkReal x1487=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1477))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1473)*(x1485)))+(((cj6)*(x1480)))+(((cj11)*(x1483)))+(((IkReal(-1.00000000000000))*(x1474)*(x1486))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1473)*(x1474)))+(((sj11)*(x1485)))+(((IkReal(-1.00000000000000))*(x1483)*(x1486)))+(((r11)*(x1487))));
evalcond[4]=((IkReal(-0.0717783000000000))+(((px)*(sj6)))+(((x1474)*(x1478)))+(((IkReal(-0.0620002000000000))*(cj11)*(x1483)))+(((IkReal(-1.00000000000000))*(py)*(x1477)))+(((IkReal(0.0620002000000000))*(cj6)*(x1479)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1478))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1473)))+(((x1475)*(x1476)))+(((IkReal(-1.00000000000000))*(r10)*(x1473)*(x1481)))+(((IkReal(-1.00000000000000))*(r00)*(x1473)*(x1475)))+(((cj7)*(x1482)))+(((x1480)*(x1481))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj7)*(x1476)*(x1477)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1473)))+(((x1479)*(x1484)))+(((cj7)*(r00)*(x1487)))+(((sj7)*(x1482)))+(((IkReal(-1.00000000000000))*(x1480)*(x1484))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(((((IkReal(-1.00000000000000))*((sj10)*(sj10))))+(((IkReal(-1.00000000000000))*((cj10)*(cj10))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj10)*(sj10))))+(((IkReal(-1.00000000000000))*((cj10)*(cj10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1488=((sj10)*(sj7));
IkReal x1489=((cj11)*(r21));
IkReal x1490=((cj6)*(r02));
IkReal x1491=((cj7)*(sj10));
IkReal x1492=((r12)*(sj6));
IkReal x1493=((cj10)*(sj7));
IkReal x1494=((r20)*(sj11));
IkReal x1495=((IkReal(1.00000000000000))*(cj10)*(cj7));
IkReal x1496=((cj11)*(r11)*(sj6));
IkReal x1497=((r10)*(sj11)*(sj6));
IkReal x1498=((cj11)*(cj6)*(r01));
IkReal x1499=((cj6)*(r00)*(sj11));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1495)*(x1498)))+(((x1493)*(x1494)))+(((IkReal(-1.00000000000000))*(x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(r22)*(x1488)))+(((IkReal(-1.00000000000000))*(x1495)*(x1496)))+(((x1489)*(x1493)))+(((x1490)*(x1491)))+(((x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(x1495)*(x1499))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1491)*(x1497)))+(((IkReal(-1.00000000000000))*(x1490)*(x1495)))+(((IkReal(-1.00000000000000))*(x1492)*(x1495)))+(((r22)*(x1493)))+(((IkReal(-1.00000000000000))*(x1491)*(x1496)))+(((IkReal(-1.00000000000000))*(x1491)*(x1499)))+(((IkReal(-1.00000000000000))*(x1491)*(x1498)))+(((x1488)*(x1489)))+(((x1488)*(x1494))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1495)*(x1498)))+(((x1493)*(x1494)))+(((IkReal(-1.00000000000000))*(x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(r22)*(x1488)))+(((IkReal(-1.00000000000000))*(x1495)*(x1496)))+(((x1489)*(x1493)))+(((x1490)*(x1491)))+(((x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(x1495)*(x1499)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(x1491)*(x1497)))+(((IkReal(-1.00000000000000))*(x1490)*(x1495)))+(((IkReal(-1.00000000000000))*(x1492)*(x1495)))+(((r22)*(x1493)))+(((IkReal(-1.00000000000000))*(x1491)*(x1496)))+(((IkReal(-1.00000000000000))*(x1491)*(x1499)))+(((IkReal(-1.00000000000000))*(x1491)*(x1498)))+(((x1488)*(x1489)))+(((x1488)*(x1494)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1500=IKsin(j8);
IkReal x1501=IKcos(j8);
IkReal x1502=((cj7)*(sj11));
IkReal x1503=((IkReal(0.0620002000000000))*(r21));
IkReal x1504=((IkReal(1.00000000000000))*(sj6));
IkReal x1505=((cj6)*(sj7));
IkReal x1506=((IkReal(0.0620002000000000))*(cj11));
IkReal x1507=((IkReal(1.00000000000000))*(cj7));
IkReal x1508=((r20)*(sj7));
IkReal x1509=((IkReal(0.0620002000000000))*(r01));
IkReal x1510=((cj11)*(cj7));
IkReal x1511=((sj11)*(sj7));
IkReal x1512=((r10)*(sj6));
IkReal x1513=((cj11)*(r01));
IkReal x1514=((cj6)*(cj7));
IkReal x1515=((cj7)*(sj6));
IkReal x1516=((r11)*(sj6));
IkReal x1517=((IkReal(1.00000000000000))*(sj7));
IkReal x1518=((cj11)*(sj7));
IkReal x1519=((sj10)*(x1500));
IkReal x1520=((IkReal(1.00000000000000))*(x1501));
IkReal x1521=((cj10)*(x1500));
IkReal x1522=((cj10)*(x1520));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1517)))+(((r02)*(x1514)))+(((r12)*(x1515)))+(((IkReal(-1.00000000000000))*(x1522)))+(x1519));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1507)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1504)))+(((IkReal(-1.00000000000000))*(x1521)))+(((IkReal(-1.00000000000000))*(r02)*(x1505)))+(((IkReal(-1.00000000000000))*(sj10)*(x1520))));
evalcond[2]=((((x1505)*(x1513)))+(((x1516)*(x1518)))+(((r21)*(x1510)))+(((r00)*(sj11)*(x1505)))+(((r20)*(x1502)))+(((x1511)*(x1512)))+(((IkReal(-1.00000000000000))*(x1522)))+(x1519));
evalcond[3]=((((r21)*(x1518)))+(((IkReal(-1.00000000000000))*(cj6)*(x1507)*(x1513)))+(((IkReal(-1.00000000000000))*(r10)*(x1502)*(x1504)))+(((sj10)*(x1501)))+(((sj11)*(x1508)))+(((IkReal(-1.00000000000000))*(r11)*(x1504)*(x1510)))+(x1521)+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1502))));
evalcond[4]=((((IkReal(-1.00000000000000))*(pz)*(x1517)))+(((x1506)*(x1508)))+(((IkReal(-0.0716559700000000))*(x1500)))+(((IkReal(0.0620002000000000))*(x1502)*(x1516)))+(((IkReal(-0.301997930000000))*(x1501)))+(((IkReal(-1.00000000000000))*(r00)*(x1506)*(x1514)))+(((IkReal(-1.00000000000000))*(x1503)*(x1511)))+(((py)*(x1515)))+(((px)*(x1514)))+(((cj6)*(x1502)*(x1509)))+(((IkReal(-1.00000000000000))*(cj7)*(x1506)*(x1512))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x1502)*(x1503)))+(((IkReal(-0.0620002000000000))*(x1511)*(x1516)))+(((sj7)*(x1506)*(x1512)))+(((IkReal(-1.00000000000000))*(px)*(x1505)))+(((cj7)*(r20)*(x1506)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1504)))+(((IkReal(0.0716559700000000))*(x1501)))+(((IkReal(-1.00000000000000))*(pz)*(x1507)))+(((IkReal(-0.301997930000000))*(x1500)))+(((r00)*(x1505)*(x1506)))+(((IkReal(-1.00000000000000))*(sj11)*(x1505)*(x1509))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1523=((cj10)*(cj7));
IkReal x1524=((IkReal(1.00000000000000))*(r22));
IkReal x1525=((r12)*(sj6));
IkReal x1526=((IkReal(1.00000000000000))*(sj10));
IkReal x1527=((cj6)*(r02));
IkReal x1528=((cj10)*(sj7));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(x1525)*(x1526)))+(((IkReal(-1.00000000000000))*(cj7)*(x1526)*(x1527)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524)))+(((r22)*(sj10)*(sj7)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((IkReal(-1.00000000000000))*(x1525)*(x1528))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(sj10)*(x1524)))+(((IkReal(-1.00000000000000))*(sj7)*(x1525)*(x1526)))+(((IkReal(-1.00000000000000))*(sj7)*(x1526)*(x1527)))+(((x1523)*(x1527)))+(((x1523)*(x1525)))+(((IkReal(-1.00000000000000))*(x1524)*(x1528))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(x1525)*(x1526)))+(((IkReal(-1.00000000000000))*(cj7)*(x1526)*(x1527)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524)))+(((r22)*(sj10)*(sj7)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((IkReal(-1.00000000000000))*(x1525)*(x1528)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(cj7)*(sj10)*(x1524)))+(((IkReal(-1.00000000000000))*(sj7)*(x1525)*(x1526)))+(((IkReal(-1.00000000000000))*(sj7)*(x1526)*(x1527)))+(((x1523)*(x1527)))+(((x1523)*(x1525)))+(((IkReal(-1.00000000000000))*(x1524)*(x1528)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1529=IKsin(j8);
IkReal x1530=IKcos(j8);
IkReal x1531=((cj7)*(sj11));
IkReal x1532=((IkReal(0.0620002000000000))*(r21));
IkReal x1533=((IkReal(1.00000000000000))*(sj6));
IkReal x1534=((cj6)*(sj7));
IkReal x1535=((IkReal(0.0620002000000000))*(cj11));
IkReal x1536=((IkReal(1.00000000000000))*(cj7));
IkReal x1537=((r20)*(sj7));
IkReal x1538=((IkReal(0.0620002000000000))*(r01));
IkReal x1539=((cj11)*(cj7));
IkReal x1540=((sj11)*(sj7));
IkReal x1541=((r10)*(sj6));
IkReal x1542=((cj11)*(r01));
IkReal x1543=((cj6)*(cj7));
IkReal x1544=((cj7)*(sj6));
IkReal x1545=((r11)*(sj6));
IkReal x1546=((IkReal(1.00000000000000))*(sj7));
IkReal x1547=((cj11)*(sj7));
IkReal x1548=((sj10)*(x1529));
IkReal x1549=((IkReal(1.00000000000000))*(x1530));
IkReal x1550=((cj10)*(x1529));
IkReal x1551=((cj10)*(x1549));
evalcond[0]=((((r02)*(x1543)))+(x1548)+(((IkReal(-1.00000000000000))*(r22)*(x1546)))+(((IkReal(-1.00000000000000))*(x1551)))+(((r12)*(x1544))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1550)))+(((IkReal(-1.00000000000000))*(r02)*(x1534)))+(((IkReal(-1.00000000000000))*(r22)*(x1536)))+(((IkReal(-1.00000000000000))*(sj10)*(x1549)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1533))));
evalcond[2]=((((x1545)*(x1547)))+(((r20)*(x1531)))+(((x1540)*(x1541)))+(x1548)+(((r00)*(sj11)*(x1534)))+(((IkReal(-1.00000000000000))*(x1551)))+(((x1534)*(x1542)))+(((r21)*(x1539))));
evalcond[3]=((((sj10)*(x1530)))+(((IkReal(-1.00000000000000))*(r11)*(x1533)*(x1539)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1531)))+(x1550)+(((r21)*(x1547)))+(((IkReal(-1.00000000000000))*(cj6)*(x1536)*(x1542)))+(((sj11)*(x1537)))+(((IkReal(-1.00000000000000))*(r10)*(x1531)*(x1533))));
evalcond[4]=((((x1535)*(x1537)))+(((IkReal(-1.00000000000000))*(x1532)*(x1540)))+(((IkReal(0.0620002000000000))*(x1531)*(x1545)))+(((px)*(x1543)))+(((cj6)*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(r00)*(x1535)*(x1543)))+(((IkReal(-1.00000000000000))*(pz)*(x1546)))+(((IkReal(-0.301997930000000))*(x1530)))+(((IkReal(-0.0716559700000000))*(x1529)))+(((IkReal(-1.00000000000000))*(cj7)*(x1535)*(x1541)))+(((py)*(x1544))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(x1534)))+(((IkReal(-0.0620002000000000))*(x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1533)))+(((cj7)*(r20)*(x1535)))+(((IkReal(-0.301997930000000))*(x1529)))+(((IkReal(-1.00000000000000))*(sj11)*(x1534)*(x1538)))+(((r00)*(x1534)*(x1535)))+(((IkReal(0.0716559700000000))*(x1530)))+(((IkReal(-1.00000000000000))*(x1531)*(x1532)))+(((IkReal(-1.00000000000000))*(pz)*(x1536)))+(((sj7)*(x1535)*(x1541))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1552=((IkReal(1.00000000000000))*(cj11));
IkReal x1553=((r01)*(sj6));
IkReal x1554=((cj6)*(sj7));
IkReal x1555=((r01)*(sj11));
IkReal x1556=((IkReal(1.00000000000000))*(cj6));
IkReal x1557=((IkReal(0.0620002000000000))*(sj11));
IkReal x1558=((cj11)*(r10));
IkReal x1559=((r11)*(sj11));
IkReal x1560=((sj6)*(sj7));
IkReal x1561=((r21)*(sj11));
IkReal x1562=((r00)*(sj6));
IkReal x1563=((cj7)*(sj6));
IkReal x1564=((cj6)*(r10));
IkReal x1565=((IkReal(1.00000000000000))*(sj11));
IkReal x1566=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j9, IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1556))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1552)*(x1564)))+(((cj11)*(x1562)))+(((IkReal(-1.00000000000000))*(x1553)*(x1565)))+(((cj6)*(x1559))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1562)*(x1565)))+(((IkReal(-1.00000000000000))*(x1552)*(x1553)))+(((sj11)*(x1564)))+(((r11)*(x1566))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1557)))+(((px)*(sj6)))+(((IkReal(0.0620002000000000))*(cj6)*(x1558)))+(((x1553)*(x1557)))+(((IkReal(-0.0620002000000000))*(cj11)*(x1562)))+(((IkReal(-1.00000000000000))*(py)*(x1556))));
evalcond[5]=((((cj7)*(x1561)))+(((x1554)*(x1555)))+(((IkReal(-1.00000000000000))*(r10)*(x1552)*(x1560)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1552)))+(((IkReal(-1.00000000000000))*(r00)*(x1552)*(x1554)))+(((x1559)*(x1560))));
evalcond[6]=((((x1558)*(x1563)))+(((sj7)*(x1561)))+(((cj7)*(r00)*(x1566)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1552)))+(((IkReal(-1.00000000000000))*(x1559)*(x1563)))+(((IkReal(-1.00000000000000))*(cj7)*(x1555)*(x1556))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1567=((r20)*(sj11));
IkReal x1568=((r10)*(sj6));
IkReal x1569=((IkReal(1.00000000000000))*(sj11));
IkReal x1570=((sj10)*(sj7));
IkReal x1571=((IkReal(1.00000000000000))*(cj11));
IkReal x1572=((r11)*(sj6));
IkReal x1573=((r12)*(sj6));
IkReal x1574=((cj7)*(sj10));
IkReal x1575=((cj10)*(sj7));
IkReal x1576=((IkReal(1.00000000000000))*(cj10)*(cj7));
IkReal x1577=((cj6)*(x1570));
IkReal x1578=((r01)*(x1571));
IkReal x1579=((cj6)*(x1575));
IkReal x1580=((x1569)*(x1575));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x1571)*(x1574)))+(((IkReal(-1.00000000000000))*(r00)*(x1569)*(x1577)))+(((IkReal(-1.00000000000000))*(x1567)*(x1574)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)*(x1572)))+(((IkReal(-1.00000000000000))*(r02)*(x1579)))+(((IkReal(-1.00000000000000))*(r22)*(x1576)))+(((IkReal(-1.00000000000000))*(x1573)*(x1575)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)*(x1570))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((x1570)*(x1573)))+(((IkReal(-1.00000000000000))*(cj10)*(cj7)*(r21)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567)*(x1576)))+(((r02)*(x1577)))+(((IkReal(-1.00000000000000))*(x1571)*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(r00)*(x1569)*(x1579)))+(((r22)*(x1574)))+(((IkReal(-1.00000000000000))*(x1568)*(x1580)))+(((IkReal(-1.00000000000000))*(x1578)*(x1579))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x1571)*(x1574)))+(((IkReal(-1.00000000000000))*(r00)*(x1569)*(x1577)))+(((IkReal(-1.00000000000000))*(x1567)*(x1574)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)*(x1572)))+(((IkReal(-1.00000000000000))*(r02)*(x1579)))+(((IkReal(-1.00000000000000))*(r22)*(x1576)))+(((IkReal(-1.00000000000000))*(x1573)*(x1575)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)*(x1570)))))), ((gconst13)*(((((x1570)*(x1573)))+(((IkReal(-1.00000000000000))*(cj10)*(cj7)*(r21)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567)*(x1576)))+(((r02)*(x1577)))+(((IkReal(-1.00000000000000))*(x1571)*(x1572)*(x1575)))+(((IkReal(-1.00000000000000))*(r00)*(x1569)*(x1579)))+(((r22)*(x1574)))+(((IkReal(-1.00000000000000))*(x1568)*(x1580)))+(((IkReal(-1.00000000000000))*(x1578)*(x1579)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1581=IKcos(j8);
IkReal x1582=IKsin(j8);
IkReal x1583=((cj7)*(sj11));
IkReal x1584=((IkReal(0.0620002000000000))*(r21));
IkReal x1585=((IkReal(1.00000000000000))*(sj6));
IkReal x1586=((cj6)*(sj7));
IkReal x1587=((IkReal(0.0620002000000000))*(cj11));
IkReal x1588=((IkReal(1.00000000000000))*(cj7));
IkReal x1589=((r20)*(sj7));
IkReal x1590=((IkReal(0.0620002000000000))*(r01));
IkReal x1591=((cj11)*(cj7));
IkReal x1592=((sj11)*(sj7));
IkReal x1593=((r10)*(sj6));
IkReal x1594=((cj11)*(r01));
IkReal x1595=((cj6)*(cj7));
IkReal x1596=((cj7)*(sj6));
IkReal x1597=((IkReal(1.00000000000000))*(cj10));
IkReal x1598=((IkReal(1.00000000000000))*(sj7));
IkReal x1599=((r11)*(sj6));
IkReal x1600=((cj11)*(sj7));
IkReal x1601=((sj10)*(x1581));
IkReal x1602=((sj10)*(x1582));
IkReal x1603=((x1582)*(x1597));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1581)*(x1597)))+(((IkReal(-1.00000000000000))*(r22)*(x1598)))+(((IkReal(-1.00000000000000))*(x1602)))+(((r12)*(x1596)))+(((r02)*(x1595))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1588)))+(((IkReal(-1.00000000000000))*(x1603)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1585)))+(x1601)+(((IkReal(-1.00000000000000))*(r02)*(x1586))));
evalcond[2]=((((x1599)*(x1600)))+(((cj10)*(x1581)))+(((r00)*(sj11)*(x1586)))+(((r20)*(x1583)))+(((x1592)*(x1593)))+(((r21)*(x1591)))+(((x1586)*(x1594)))+(x1602));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1583)*(x1585)))+(((r21)*(x1600)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1583)))+(((IkReal(-1.00000000000000))*(r11)*(x1585)*(x1591)))+(((IkReal(-1.00000000000000))*(x1603)))+(((sj11)*(x1589)))+(x1601)+(((IkReal(-1.00000000000000))*(cj6)*(x1588)*(x1594))));
evalcond[4]=((((px)*(x1595)))+(((IkReal(-0.0686246300000000))*(x1582)))+(((IkReal(-1.00000000000000))*(cj7)*(x1587)*(x1593)))+(((IkReal(-1.00000000000000))*(x1584)*(x1592)))+(((x1587)*(x1589)))+(((cj6)*(x1583)*(x1590)))+(((IkReal(-1.00000000000000))*(pz)*(x1598)))+(((py)*(x1596)))+(((IkReal(-1.00000000000000))*(r00)*(x1587)*(x1595)))+(((IkReal(0.0620002000000000))*(x1583)*(x1599)))+(((IkReal(-0.301997930000000))*(x1581))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1588)))+(((IkReal(-0.301997930000000))*(x1582)))+(((IkReal(-1.00000000000000))*(x1583)*(x1584)))+(((sj7)*(x1587)*(x1593)))+(((IkReal(-1.00000000000000))*(px)*(x1586)))+(((cj7)*(r20)*(x1587)))+(((IkReal(-1.00000000000000))*(sj11)*(x1586)*(x1590)))+(((r00)*(x1586)*(x1587)))+(((IkReal(0.0686246300000000))*(x1581)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1585)))+(((IkReal(-0.0620002000000000))*(x1592)*(x1599))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1604=((IkReal(1.00000000000000))*(r22));
IkReal x1605=((sj10)*(sj7));
IkReal x1606=((cj10)*(cj7));
IkReal x1607=((cj6)*(r02));
IkReal x1608=((r12)*(sj6));
IkReal x1609=((cj7)*(sj10));
IkReal x1610=((cj10)*(sj7));
if( IKabs(((gconst12)*(((((x1608)*(x1609)))+(((IkReal(-1.00000000000000))*(x1608)*(x1610)))+(((IkReal(-1.00000000000000))*(x1604)*(x1606)))+(((IkReal(-1.00000000000000))*(x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1604)*(x1605)))+(((x1607)*(x1609))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((x1605)*(x1607)))+(((IkReal(-1.00000000000000))*(x1604)*(x1610)))+(((r22)*(x1609)))+(((x1606)*(x1608)))+(((x1605)*(x1608)))+(((x1606)*(x1607))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst12)*(((((x1608)*(x1609)))+(((IkReal(-1.00000000000000))*(x1608)*(x1610)))+(((IkReal(-1.00000000000000))*(x1604)*(x1606)))+(((IkReal(-1.00000000000000))*(x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1604)*(x1605)))+(((x1607)*(x1609)))))), ((gconst12)*(((((x1605)*(x1607)))+(((IkReal(-1.00000000000000))*(x1604)*(x1610)))+(((r22)*(x1609)))+(((x1606)*(x1608)))+(((x1605)*(x1608)))+(((x1606)*(x1607)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1611=IKcos(j8);
IkReal x1612=IKsin(j8);
IkReal x1613=((cj7)*(sj11));
IkReal x1614=((IkReal(0.0620002000000000))*(r21));
IkReal x1615=((IkReal(1.00000000000000))*(sj6));
IkReal x1616=((cj6)*(sj7));
IkReal x1617=((IkReal(0.0620002000000000))*(cj11));
IkReal x1618=((IkReal(1.00000000000000))*(cj7));
IkReal x1619=((r20)*(sj7));
IkReal x1620=((IkReal(0.0620002000000000))*(r01));
IkReal x1621=((cj11)*(cj7));
IkReal x1622=((sj11)*(sj7));
IkReal x1623=((r10)*(sj6));
IkReal x1624=((cj11)*(r01));
IkReal x1625=((cj6)*(cj7));
IkReal x1626=((cj7)*(sj6));
IkReal x1627=((IkReal(1.00000000000000))*(cj10));
IkReal x1628=((IkReal(1.00000000000000))*(sj7));
IkReal x1629=((r11)*(sj6));
IkReal x1630=((cj11)*(sj7));
IkReal x1631=((sj10)*(x1611));
IkReal x1632=((sj10)*(x1612));
IkReal x1633=((x1612)*(x1627));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1611)*(x1627)))+(((IkReal(-1.00000000000000))*(x1632)))+(((IkReal(-1.00000000000000))*(r22)*(x1628)))+(((r02)*(x1625)))+(((r12)*(x1626))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x1616)))+(((IkReal(-1.00000000000000))*(x1633)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1615)))+(x1631)+(((IkReal(-1.00000000000000))*(r22)*(x1618))));
evalcond[2]=((((r00)*(sj11)*(x1616)))+(((x1629)*(x1630)))+(((x1622)*(x1623)))+(((r21)*(x1621)))+(x1632)+(((cj10)*(x1611)))+(((r20)*(x1613)))+(((x1616)*(x1624))));
evalcond[3]=((((sj11)*(x1619)))+(((IkReal(-1.00000000000000))*(cj6)*(x1618)*(x1624)))+(((r21)*(x1630)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1613)))+(((IkReal(-1.00000000000000))*(x1633)))+(((IkReal(-1.00000000000000))*(r11)*(x1615)*(x1621)))+(x1631)+(((IkReal(-1.00000000000000))*(r10)*(x1613)*(x1615))));
evalcond[4]=((((IkReal(-1.00000000000000))*(pz)*(x1628)))+(((IkReal(0.0620002000000000))*(x1613)*(x1629)))+(((IkReal(-1.00000000000000))*(r00)*(x1617)*(x1625)))+(((IkReal(-0.0686246300000000))*(x1612)))+(((IkReal(-0.301997930000000))*(x1611)))+(((x1617)*(x1619)))+(((IkReal(-1.00000000000000))*(x1614)*(x1622)))+(((cj6)*(x1613)*(x1620)))+(((IkReal(-1.00000000000000))*(cj7)*(x1617)*(x1623)))+(((py)*(x1626)))+(((px)*(x1625))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1618)))+(((IkReal(-1.00000000000000))*(sj11)*(x1616)*(x1620)))+(((IkReal(-0.301997930000000))*(x1612)))+(((IkReal(0.0686246300000000))*(x1611)))+(((sj7)*(x1617)*(x1623)))+(((cj7)*(r20)*(x1617)))+(((IkReal(-0.0620002000000000))*(x1622)*(x1629)))+(((r00)*(x1616)*(x1617)))+(((IkReal(-1.00000000000000))*(px)*(x1616)))+(((IkReal(-1.00000000000000))*(x1613)*(x1614)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1615))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1634=((cj6)*(r10));
IkReal x1635=((IkReal(1.00000000000000))*(cj6));
IkReal x1636=((cj6)*(r11));
IkReal x1637=((r01)*(sj6));
IkReal x1638=((IkReal(0.0620002000000000))*(sj11));
IkReal x1639=((IkReal(0.0620002000000000))*(cj11));
IkReal x1640=((IkReal(1.00000000000000))*(cj11));
IkReal x1641=((r00)*(sj6));
IkReal x1642=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1635)))+(sj9));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1637)*(x1642)))+(cj9)+(((sj11)*(x1636)))+(((IkReal(-1.00000000000000))*(x1634)*(x1640)))+(((cj11)*(x1641))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1637)*(x1640)))+(((IkReal(-1.00000000000000))*(x1641)*(x1642)))+(((sj11)*(x1634)))+(((cj11)*(x1636))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1635)))+(((IkReal(-1.00000000000000))*(x1636)*(x1638)))+(((x1637)*(x1638)))+(((IkReal(-1.00000000000000))*(x1639)*(x1641)))+(((x1634)*(x1639))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(cj9);
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1643=((r01)*(sj6));
IkReal x1644=((IkReal(1.00000000000000))*(cj11));
IkReal x1645=((IkReal(1.00000000000000))*(r22));
IkReal x1646=((IkReal(1.00000000000000))*(cj6));
IkReal x1647=((IkReal(0.0620002000000000))*(sj11));
IkReal x1648=((cj6)*(r10));
IkReal x1649=((IkReal(0.0620002000000000))*(cj11));
IkReal x1650=((r00)*(sj6));
IkReal x1651=((cj6)*(r11));
IkReal x1652=((IkReal(1.00000000000000))*(sj11));
IkReal x1653=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1646))));
evalcond[2]=((((sj11)*(x1651)))+(((IkReal(-1.00000000000000))*(x1643)*(x1652)))+(((cj11)*(x1650)))+(((IkReal(-1.00000000000000))*(x1644)*(x1648))));
evalcond[3]=((((cj6)*(cj7)*(r02)))+(((cj7)*(x1653)))+(((IkReal(-1.00000000000000))*(sj7)*(x1645))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1643)*(x1644)))+(((sj11)*(x1648)))+(((IkReal(-1.00000000000000))*(x1650)*(x1652)))+(((cj11)*(x1651))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1646)))+(((IkReal(-1.00000000000000))*(cj7)*(x1645)))+(((IkReal(-1.00000000000000))*(sj7)*(x1653))));
evalcond[6]=((IkReal(-0.0116089700000000))+(((IkReal(-1.00000000000000))*(x1649)*(x1650)))+(((IkReal(-1.00000000000000))*(x1647)*(x1651)))+(((x1648)*(x1649)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1646)))+(((x1643)*(x1647))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1654=((cj7)*(sj11));
IkReal x1655=((r10)*(sj6));
IkReal x1656=((cj6)*(r00));
IkReal x1657=((IkReal(1.00000000000000))*(sj7));
IkReal x1658=((cj11)*(r21));
IkReal x1659=((cj11)*(cj6)*(r01));
IkReal x1660=((cj11)*(r11)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(sj11)*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(cj7)*(x1658)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(sj11)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(x1657)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1659))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj7)*(x1659)))+(((x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1657)))+(((cj7)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((x1654)*(x1655))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj11)*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(cj7)*(x1658)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(sj11)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(x1657)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1659)))))+IKsqr(((((cj7)*(x1659)))+(((x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1657)))+(((cj7)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((x1654)*(x1655)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj11)*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(cj7)*(x1658)))+(((IkReal(-1.00000000000000))*(r20)*(x1654)))+(((IkReal(-1.00000000000000))*(sj11)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(x1657)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1659)))), ((((cj7)*(x1659)))+(((x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1657)))+(((cj7)*(x1660)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((x1654)*(x1655)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1661=IKsin(j8);
IkReal x1662=IKcos(j8);
IkReal x1663=((cj7)*(sj11));
IkReal x1664=((IkReal(0.0620002000000000))*(r21));
IkReal x1665=((r10)*(sj6));
IkReal x1666=((cj11)*(sj7));
IkReal x1667=((IkReal(0.0620002000000000))*(cj6));
IkReal x1668=((IkReal(1.00000000000000))*(r20));
IkReal x1669=((IkReal(0.0620002000000000))*(r20));
IkReal x1670=((cj11)*(cj7));
IkReal x1671=((IkReal(1.00000000000000))*(cj6));
IkReal x1672=((sj11)*(sj7));
IkReal x1673=((IkReal(1.00000000000000))*(pz));
IkReal x1674=((py)*(sj6));
IkReal x1675=((r11)*(sj6));
IkReal x1676=((cj6)*(r00));
IkReal x1677=((r01)*(x1672));
evalcond[0]=((((IkReal(-1.00000000000000))*(r00)*(x1666)*(x1671)))+(((IkReal(-1.00000000000000))*(x1668)*(x1670)))+(((IkReal(-1.00000000000000))*(x1665)*(x1666)))+(((x1672)*(x1675)))+(((cj6)*(x1677)))+(x1662)+(((r21)*(x1663))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1661)))+(((IkReal(-1.00000000000000))*(r01)*(x1663)*(x1671)))+(((IkReal(-1.00000000000000))*(x1666)*(x1668)))+(((r21)*(x1672)))+(((x1665)*(x1670)))+(((x1670)*(x1676)))+(((IkReal(-1.00000000000000))*(x1663)*(x1675))));
evalcond[2]=((((x1672)*(x1676)))+(((r21)*(x1670)))+(x1661)+(((x1665)*(x1672)))+(((cj6)*(r01)*(x1666)))+(((r20)*(x1663)))+(((x1666)*(x1675))));
evalcond[3]=((((r21)*(x1666)))+(((r20)*(x1672)))+(((IkReal(-1.00000000000000))*(r01)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(r00)*(x1663)*(x1671)))+(x1662)+(((IkReal(-1.00000000000000))*(x1663)*(x1665)))+(((IkReal(-1.00000000000000))*(x1670)*(x1675))));
evalcond[4]=((((IkReal(-0.301997930000000))*(x1662)))+(((IkReal(-0.0620002000000000))*(x1665)*(x1670)))+(((cj7)*(x1674)))+(((IkReal(-1.00000000000000))*(sj7)*(x1673)))+(((cj6)*(cj7)*(px)))+(((IkReal(0.0620002000000000))*(x1663)*(x1675)))+(((IkReal(-1.00000000000000))*(r00)*(x1667)*(x1670)))+(((x1666)*(x1669)))+(((IkReal(-1.00000000000000))*(x1664)*(x1672)))+(((IkReal(-0.00845530000000000))*(x1661)))+(((r01)*(x1663)*(x1667))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-0.0620002000000000))*(x1672)*(x1675)))+(((IkReal(-1.00000000000000))*(x1663)*(x1664)))+(((r00)*(x1666)*(x1667)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1671)))+(((IkReal(0.0620002000000000))*(x1665)*(x1666)))+(((IkReal(-1.00000000000000))*(sj7)*(x1674)))+(((IkReal(0.00845530000000000))*(x1662)))+(((IkReal(-1.00000000000000))*(x1667)*(x1677)))+(((IkReal(-0.301997930000000))*(x1661)))+(((x1669)*(x1670)))+(((IkReal(-1.00000000000000))*(cj7)*(x1673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1678=((r01)*(sj6));
IkReal x1679=((IkReal(1.00000000000000))*(cj11));
IkReal x1680=((IkReal(1.00000000000000))*(r22));
IkReal x1681=((IkReal(1.00000000000000))*(cj6));
IkReal x1682=((IkReal(0.0620002000000000))*(sj11));
IkReal x1683=((cj6)*(r10));
IkReal x1684=((IkReal(0.0620002000000000))*(cj11));
IkReal x1685=((r00)*(sj6));
IkReal x1686=((cj6)*(r11));
IkReal x1687=((IkReal(1.00000000000000))*(sj11));
IkReal x1688=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1681))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1678)*(x1687)))+(((IkReal(-1.00000000000000))*(x1679)*(x1683)))+(((sj11)*(x1686)))+(((cj11)*(x1685))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1680)))+(((cj6)*(cj7)*(r02)))+(((cj7)*(x1688))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1685)*(x1687)))+(((sj11)*(x1683)))+(((cj11)*(x1686)))+(((IkReal(-1.00000000000000))*(x1678)*(x1679))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1688)))+(((IkReal(-1.00000000000000))*(cj7)*(x1680)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1681))));
evalcond[6]=((IkReal(-0.00857763000000000))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x1681)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685)))+(((x1678)*(x1682)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1689=((cj7)*(sj11));
IkReal x1690=((r10)*(sj6));
IkReal x1691=((cj6)*(r00));
IkReal x1692=((IkReal(1.00000000000000))*(sj7));
IkReal x1693=((cj11)*(r21));
IkReal x1694=((cj11)*(cj6)*(r01));
IkReal x1695=((cj11)*(r11)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj7)*(x1693)))+(((IkReal(-1.00000000000000))*(sj11)*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1692)*(x1695)))+(((IkReal(-1.00000000000000))*(x1692)*(x1694))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1692)))+(((IkReal(-1.00000000000000))*(x1692)*(x1693)))+(((x1689)*(x1691)))+(((cj7)*(x1695)))+(((cj7)*(x1694)))+(((x1689)*(x1690))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj7)*(x1693)))+(((IkReal(-1.00000000000000))*(sj11)*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1692)*(x1695)))+(((IkReal(-1.00000000000000))*(x1692)*(x1694)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1692)))+(((IkReal(-1.00000000000000))*(x1692)*(x1693)))+(((x1689)*(x1691)))+(((cj7)*(x1695)))+(((cj7)*(x1694)))+(((x1689)*(x1690)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj7)*(x1693)))+(((IkReal(-1.00000000000000))*(sj11)*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj11)*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1692)*(x1695)))+(((IkReal(-1.00000000000000))*(x1692)*(x1694)))), ((((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1692)))+(((IkReal(-1.00000000000000))*(x1692)*(x1693)))+(((x1689)*(x1691)))+(((cj7)*(x1695)))+(((cj7)*(x1694)))+(((x1689)*(x1690)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1696=IKsin(j8);
IkReal x1697=IKcos(j8);
IkReal x1698=((cj7)*(sj11));
IkReal x1699=((IkReal(0.0620002000000000))*(r21));
IkReal x1700=((r10)*(sj6));
IkReal x1701=((cj11)*(sj7));
IkReal x1702=((IkReal(0.0620002000000000))*(cj6));
IkReal x1703=((IkReal(1.00000000000000))*(r20));
IkReal x1704=((IkReal(0.0620002000000000))*(r20));
IkReal x1705=((cj11)*(cj7));
IkReal x1706=((IkReal(1.00000000000000))*(cj6));
IkReal x1707=((sj11)*(sj7));
IkReal x1708=((IkReal(1.00000000000000))*(pz));
IkReal x1709=((py)*(sj6));
IkReal x1710=((r11)*(sj6));
IkReal x1711=((cj6)*(r00));
IkReal x1712=((r01)*(x1707));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1700)*(x1701)))+(((IkReal(-1.00000000000000))*(r00)*(x1701)*(x1706)))+(((cj6)*(x1712)))+(((x1707)*(x1710)))+(((r21)*(x1698)))+(((IkReal(-1.00000000000000))*(x1703)*(x1705)))+(((IkReal(-1.00000000000000))*(x1697))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1698)*(x1710)))+(((x1700)*(x1705)))+(((x1705)*(x1711)))+(((r21)*(x1707)))+(((IkReal(-1.00000000000000))*(r01)*(x1698)*(x1706)))+(x1696)+(((IkReal(-1.00000000000000))*(x1701)*(x1703))));
evalcond[2]=((((x1701)*(x1710)))+(((cj6)*(r01)*(x1701)))+(((r20)*(x1698)))+(((r21)*(x1705)))+(((x1707)*(x1711)))+(x1696)+(((x1700)*(x1707))));
evalcond[3]=((((r21)*(x1701)))+(((r20)*(x1707)))+(((IkReal(-1.00000000000000))*(x1698)*(x1700)))+(((IkReal(-1.00000000000000))*(r00)*(x1698)*(x1706)))+(((IkReal(-1.00000000000000))*(r01)*(x1705)*(x1706)))+(x1697)+(((IkReal(-1.00000000000000))*(x1705)*(x1710))));
evalcond[4]=((((x1701)*(x1704)))+(((IkReal(-1.00000000000000))*(sj7)*(x1708)))+(((cj6)*(cj7)*(px)))+(((IkReal(-0.131825300000000))*(x1696)))+(((IkReal(-0.0620002000000000))*(x1700)*(x1705)))+(((IkReal(0.0620002000000000))*(x1698)*(x1710)))+(((IkReal(-1.00000000000000))*(x1699)*(x1707)))+(((IkReal(-0.301997930000000))*(x1697)))+(((IkReal(-1.00000000000000))*(r00)*(x1702)*(x1705)))+(((r01)*(x1698)*(x1702)))+(((cj7)*(x1709))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1706)))+(((IkReal(-1.00000000000000))*(x1698)*(x1699)))+(((IkReal(-0.301997930000000))*(x1696)))+(((IkReal(-1.00000000000000))*(sj7)*(x1709)))+(((IkReal(0.0620002000000000))*(x1700)*(x1701)))+(((r00)*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(cj7)*(x1708)))+(((IkReal(0.131825300000000))*(x1697)))+(((x1704)*(x1705)))+(((IkReal(-1.00000000000000))*(x1702)*(x1712)))+(((IkReal(-0.0620002000000000))*(x1707)*(x1710))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1713=((IkReal(1.00000000000000))*(cj7));
IkReal x1714=((IkReal(1.00000000000000))*(cj6)*(sj7));
IkReal x1715=((IkReal(1.00000000000000))*(sj6)*(sj7));
if( IKabs(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1715)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1715)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1713)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1714)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1713))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1713)))+(((IkReal(-1.00000000000000))*(r02)*(x1714)))+(((IkReal(-1.00000000000000))*(r12)*(x1715))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1715)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1715)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1713)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1714)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1713)))))+IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1713)))+(((IkReal(-1.00000000000000))*(r02)*(x1714)))+(((IkReal(-1.00000000000000))*(r12)*(x1715)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(x1715)))+(((IkReal(-1.00000000000000))*(cj11)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(x1715)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1713)))+(((IkReal(-1.00000000000000))*(r00)*(sj11)*(x1714)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1713)))), ((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x1713)))+(((IkReal(-1.00000000000000))*(r02)*(x1714)))+(((IkReal(-1.00000000000000))*(r12)*(x1715)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1716=IKcos(j8);
IkReal x1717=IKsin(j8);
IkReal x1718=((cj7)*(sj11));
IkReal x1719=((IkReal(0.0620002000000000))*(r21));
IkReal x1720=((r10)*(sj6));
IkReal x1721=((cj11)*(sj7));
IkReal x1722=((IkReal(0.0620002000000000))*(cj6));
IkReal x1723=((IkReal(1.00000000000000))*(r20));
IkReal x1724=((IkReal(1.00000000000000))*(cj7));
IkReal x1725=((IkReal(0.0620002000000000))*(r20));
IkReal x1726=((cj11)*(cj7));
IkReal x1727=((IkReal(1.00000000000000))*(cj6));
IkReal x1728=((sj11)*(sj7));
IkReal x1729=((cj6)*(r01));
IkReal x1730=((py)*(sj6));
IkReal x1731=((r11)*(sj6));
IkReal x1732=((IkReal(1.00000000000000))*(sj7));
IkReal x1733=((r12)*(sj6));
IkReal x1734=((cj6)*(cj7));
IkReal x1735=((cj6)*(r00));
IkReal x1736=((r01)*(x1728));
IkReal x1737=((cj9)*(x1717));
IkReal x1738=((sj9)*(x1716));
IkReal x1739=((cj9)*(x1716));
IkReal x1740=((sj9)*(x1717));
evalcond[0]=((((r02)*(x1734)))+(((cj7)*(x1733)))+(((IkReal(-1.00000000000000))*(r22)*(x1732)))+(x1737));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1724)))+(((IkReal(-1.00000000000000))*(x1732)*(x1733)))+(((IkReal(-1.00000000000000))*(x1739)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1727))));
evalcond[2]=((((r21)*(x1718)))+(((IkReal(-1.00000000000000))*(r00)*(x1721)*(x1727)))+(((x1728)*(x1731)))+(((IkReal(-1.00000000000000))*(x1723)*(x1726)))+(((x1728)*(x1729)))+(x1738)+(((IkReal(-1.00000000000000))*(x1720)*(x1721))));
evalcond[3]=((((x1720)*(x1726)))+(((IkReal(-1.00000000000000))*(x1718)*(x1731)))+(((IkReal(-1.00000000000000))*(x1740)))+(((IkReal(-1.00000000000000))*(r01)*(x1718)*(x1727)))+(((r21)*(x1728)))+(((x1726)*(x1735)))+(((IkReal(-1.00000000000000))*(x1721)*(x1723))));
evalcond[4]=((((r21)*(x1726)))+(x1717)+(((x1721)*(x1729)))+(((r20)*(x1718)))+(((x1721)*(x1731)))+(((x1720)*(x1728)))+(((x1728)*(x1735))));
evalcond[5]=((x1716)+(((IkReal(-1.00000000000000))*(cj11)*(x1724)*(x1731)))+(((IkReal(-1.00000000000000))*(r00)*(x1718)*(x1727)))+(((r20)*(x1728)))+(((r21)*(x1721)))+(((IkReal(-1.00000000000000))*(x1718)*(x1720)))+(((IkReal(-1.00000000000000))*(cj11)*(x1724)*(x1729))));
evalcond[6]=((((IkReal(-0.0620002000000000))*(x1720)*(x1726)))+(((IkReal(-0.0701403000000000))*(x1717)))+(((IkReal(-1.00000000000000))*(pz)*(x1732)))+(((cj7)*(x1730)))+(((IkReal(0.0616850000000000))*(x1740)))+(((r01)*(x1718)*(x1722)))+(((IkReal(-1.00000000000000))*(x1719)*(x1728)))+(((IkReal(-1.00000000000000))*(r00)*(x1722)*(x1726)))+(((IkReal(0.0620002000000000))*(x1718)*(x1731)))+(((px)*(x1734)))+(((IkReal(-0.301997930000000))*(x1716)))+(((x1721)*(x1725)))+(((IkReal(-0.00151567000000000))*(x1737))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x1716)))+(((IkReal(-0.301997930000000))*(x1717)))+(((IkReal(0.0620002000000000))*(x1720)*(x1721)))+(((IkReal(-1.00000000000000))*(pz)*(x1724)))+(((IkReal(-0.0616850000000000))*(x1738)))+(((x1725)*(x1726)))+(((IkReal(-1.00000000000000))*(x1730)*(x1732)))+(((IkReal(-1.00000000000000))*(x1718)*(x1719)))+(((IkReal(-0.0620002000000000))*(x1728)*(x1731)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1727)))+(((IkReal(0.00151567000000000))*(x1739)))+(((IkReal(-1.00000000000000))*(x1722)*(x1736)))+(((r00)*(x1721)*(x1722))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1741=((cj7)*(sj11));
IkReal x1742=((IkReal(1.00000000000000))*(sj7));
IkReal x1743=((cj11)*(cj7));
IkReal x1744=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1744)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1744))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r01)*(x1743)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1742)))+(((r11)*(sj6)*(x1743)))+(((r10)*(sj6)*(x1741)))+(((cj6)*(r00)*(x1741)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1742))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1744)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1744)))))))+IKsqr(((((cj6)*(r01)*(x1743)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1742)))+(((r11)*(sj6)*(x1743)))+(((r10)*(sj6)*(x1741)))+(((cj6)*(r00)*(x1741)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1742)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(sj6)*(x1744)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(x1744)))))), ((((cj6)*(r01)*(x1743)))+(((IkReal(-1.00000000000000))*(r20)*(sj11)*(x1742)))+(((r11)*(sj6)*(x1743)))+(((r10)*(sj6)*(x1741)))+(((cj6)*(r00)*(x1741)))+(((IkReal(-1.00000000000000))*(cj11)*(r21)*(x1742)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1745=IKcos(j8);
IkReal x1746=IKsin(j8);
IkReal x1747=((cj7)*(sj11));
IkReal x1748=((IkReal(0.0620002000000000))*(r21));
IkReal x1749=((r10)*(sj6));
IkReal x1750=((cj11)*(sj7));
IkReal x1751=((IkReal(0.0620002000000000))*(cj6));
IkReal x1752=((IkReal(1.00000000000000))*(r20));
IkReal x1753=((IkReal(1.00000000000000))*(cj7));
IkReal x1754=((IkReal(0.0620002000000000))*(r20));
IkReal x1755=((cj11)*(cj7));
IkReal x1756=((IkReal(1.00000000000000))*(cj6));
IkReal x1757=((sj11)*(sj7));
IkReal x1758=((cj6)*(r01));
IkReal x1759=((py)*(sj6));
IkReal x1760=((r11)*(sj6));
IkReal x1761=((IkReal(1.00000000000000))*(sj7));
IkReal x1762=((r12)*(sj6));
IkReal x1763=((cj6)*(cj7));
IkReal x1764=((cj6)*(r00));
IkReal x1765=((r01)*(x1757));
IkReal x1766=((cj9)*(x1746));
IkReal x1767=((sj9)*(x1745));
IkReal x1768=((cj9)*(x1745));
IkReal x1769=((sj9)*(x1746));
evalcond[0]=((x1766)+(((cj7)*(x1762)))+(((IkReal(-1.00000000000000))*(r22)*(x1761)))+(((r02)*(x1763))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1768)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1756)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((IkReal(-1.00000000000000))*(r22)*(x1753))));
evalcond[2]=((x1767)+(((r21)*(x1747)))+(((IkReal(-1.00000000000000))*(r00)*(x1750)*(x1756)))+(((x1757)*(x1758)))+(((IkReal(-1.00000000000000))*(x1749)*(x1750)))+(((IkReal(-1.00000000000000))*(x1752)*(x1755)))+(((x1757)*(x1760))));
evalcond[3]=((((x1755)*(x1764)))+(((IkReal(-1.00000000000000))*(r01)*(x1747)*(x1756)))+(((IkReal(-1.00000000000000))*(x1769)))+(((IkReal(-1.00000000000000))*(x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(x1747)*(x1760)))+(((x1749)*(x1755)))+(((r21)*(x1757))));
evalcond[4]=((((r21)*(x1755)))+(((x1749)*(x1757)))+(x1746)+(((x1750)*(x1758)))+(((x1757)*(x1764)))+(((x1750)*(x1760)))+(((r20)*(x1747))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1747)*(x1756)))+(((IkReal(-1.00000000000000))*(x1747)*(x1749)))+(((r20)*(x1757)))+(x1745)+(((r21)*(x1750)))+(((IkReal(-1.00000000000000))*(cj11)*(x1753)*(x1760)))+(((IkReal(-1.00000000000000))*(cj11)*(x1753)*(x1758))));
evalcond[6]=((((IkReal(-1.00000000000000))*(pz)*(x1761)))+(((IkReal(0.0620002000000000))*(x1747)*(x1760)))+(((IkReal(0.0616850000000000))*(x1769)))+(((IkReal(-0.00151567000000000))*(x1766)))+(((IkReal(-0.301997930000000))*(x1745)))+(((IkReal(-1.00000000000000))*(x1748)*(x1757)))+(((IkReal(-0.0701403000000000))*(x1746)))+(((IkReal(-0.0620002000000000))*(x1749)*(x1755)))+(((cj7)*(x1759)))+(((IkReal(-1.00000000000000))*(r00)*(x1751)*(x1755)))+(((px)*(x1763)))+(((r01)*(x1747)*(x1751)))+(((x1750)*(x1754))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0701403000000000))*(x1745)))+(((r00)*(x1750)*(x1751)))+(((IkReal(-0.301997930000000))*(x1746)))+(((x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(x1759)*(x1761)))+(((IkReal(0.0620002000000000))*(x1749)*(x1750)))+(((IkReal(-1.00000000000000))*(x1747)*(x1748)))+(((IkReal(0.00151567000000000))*(x1768)))+(((IkReal(-0.0616850000000000))*(x1767)))+(((IkReal(-0.0620002000000000))*(x1757)*(x1760)))+(((IkReal(-1.00000000000000))*(pz)*(x1753)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1756)))+(((IkReal(-1.00000000000000))*(x1751)*(x1765))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1770=((IkReal(1.00000000000000))*(sj7));
IkReal x1771=((cj6)*(r02));
IkReal x1772=((IkReal(1.00000000000000))*(cj7));
IkReal x1773=((r12)*(sj6));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1771)*(x1772)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1772)*(x1773))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1770)*(x1773)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((IkReal(-1.00000000000000))*(r22)*(x1772))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x1771)*(x1772)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x1772)*(x1773)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x1770)*(x1773)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((IkReal(-1.00000000000000))*(r22)*(x1772)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1774=IKcos(j8);
IkReal x1775=IKsin(j8);
IkReal x1776=((cj7)*(sj11));
IkReal x1777=((IkReal(0.0620002000000000))*(r21));
IkReal x1778=((r10)*(sj6));
IkReal x1779=((cj11)*(sj7));
IkReal x1780=((IkReal(0.0620002000000000))*(cj6));
IkReal x1781=((IkReal(1.00000000000000))*(r20));
IkReal x1782=((IkReal(1.00000000000000))*(cj7));
IkReal x1783=((IkReal(0.0620002000000000))*(r20));
IkReal x1784=((cj11)*(cj7));
IkReal x1785=((IkReal(1.00000000000000))*(cj6));
IkReal x1786=((sj11)*(sj7));
IkReal x1787=((cj6)*(r01));
IkReal x1788=((py)*(sj6));
IkReal x1789=((r11)*(sj6));
IkReal x1790=((IkReal(1.00000000000000))*(sj7));
IkReal x1791=((r12)*(sj6));
IkReal x1792=((cj6)*(cj7));
IkReal x1793=((cj6)*(r00));
IkReal x1794=((r01)*(x1786));
IkReal x1795=((cj9)*(x1775));
IkReal x1796=((sj9)*(x1774));
IkReal x1797=((cj9)*(x1774));
IkReal x1798=((sj9)*(x1775));
evalcond[0]=((((r02)*(x1792)))+(((cj7)*(x1791)))+(((IkReal(-1.00000000000000))*(r22)*(x1790)))+(x1795));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1782)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1785)))+(((IkReal(-1.00000000000000))*(x1797)))+(((IkReal(-1.00000000000000))*(x1790)*(x1791))));
evalcond[2]=((((x1786)*(x1789)))+(((IkReal(-1.00000000000000))*(r00)*(x1779)*(x1785)))+(((r21)*(x1776)))+(((x1786)*(x1787)))+(((IkReal(-1.00000000000000))*(x1781)*(x1784)))+(x1796)+(((IkReal(-1.00000000000000))*(x1778)*(x1779))));
evalcond[3]=((((r21)*(x1786)))+(((IkReal(-1.00000000000000))*(x1776)*(x1789)))+(((IkReal(-1.00000000000000))*(r01)*(x1776)*(x1785)))+(((IkReal(-1.00000000000000))*(x1779)*(x1781)))+(((x1784)*(x1793)))+(((x1778)*(x1784)))+(((IkReal(-1.00000000000000))*(x1798))));
evalcond[4]=((((r21)*(x1784)))+(((x1779)*(x1787)))+(((x1779)*(x1789)))+(((x1786)*(x1793)))+(((x1778)*(x1786)))+(x1775)+(((r20)*(x1776))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj11)*(x1782)*(x1787)))+(((IkReal(-1.00000000000000))*(r00)*(x1776)*(x1785)))+(((IkReal(-1.00000000000000))*(cj11)*(x1782)*(x1789)))+(x1774)+(((r20)*(x1786)))+(((r21)*(x1779)))+(((IkReal(-1.00000000000000))*(x1776)*(x1778))));
evalcond[6]=((((cj7)*(x1788)))+(((r01)*(x1776)*(x1780)))+(((IkReal(-1.00000000000000))*(r00)*(x1780)*(x1784)))+(((IkReal(-1.00000000000000))*(x1777)*(x1786)))+(((IkReal(-1.00000000000000))*(pz)*(x1790)))+(((px)*(x1792)))+(((x1779)*(x1783)))+(((IkReal(-0.00151567000000000))*(x1795)))+(((IkReal(-0.0701403000000000))*(x1775)))+(((IkReal(0.0616850000000000))*(x1798)))+(((IkReal(-0.301997930000000))*(x1774)))+(((IkReal(0.0620002000000000))*(x1776)*(x1789)))+(((IkReal(-0.0620002000000000))*(x1778)*(x1784))));
evalcond[7]=((IkReal(0.270000000000000))+(((r00)*(x1779)*(x1780)))+(((IkReal(-1.00000000000000))*(x1776)*(x1777)))+(((IkReal(0.0620002000000000))*(x1778)*(x1779)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1785)))+(((IkReal(0.00151567000000000))*(x1797)))+(((IkReal(-1.00000000000000))*(pz)*(x1782)))+(((IkReal(-0.0620002000000000))*(x1786)*(x1789)))+(((IkReal(-1.00000000000000))*(x1788)*(x1790)))+(((x1783)*(x1784)))+(((IkReal(-1.00000000000000))*(x1780)*(x1794)))+(((IkReal(-0.301997930000000))*(x1775)))+(((IkReal(0.0701403000000000))*(x1774)))+(((IkReal(-0.0616850000000000))*(x1796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1799=((cj6)*(r10));
IkReal x1800=((IkReal(1.00000000000000))*(cj6));
IkReal x1801=((cj6)*(r11));
IkReal x1802=((r01)*(sj6));
IkReal x1803=((IkReal(0.0620002000000000))*(sj11));
IkReal x1804=((IkReal(0.0620002000000000))*(cj11));
IkReal x1805=((IkReal(1.00000000000000))*(cj11));
IkReal x1806=((r00)*(sj6));
IkReal x1807=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1800)))+(((IkReal(-1.00000000000000))*(sj9))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1799)*(x1805)))+(((cj11)*(x1806)))+(((IkReal(-1.00000000000000))*(x1802)*(x1807)))+(cj9)+(((sj11)*(x1801))));
evalcond[3]=((((cj11)*(x1801)))+(((IkReal(-1.00000000000000))*(x1806)*(x1807)))+(((IkReal(-1.00000000000000))*(x1802)*(x1805)))+(((sj11)*(x1799))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((x1799)*(x1804)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(py)*(x1800)))+(((px)*(sj6)))+(((x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(x1801)*(x1803)))+(((IkReal(-1.00000000000000))*(x1804)*(x1806))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(cj9);
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj9;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1808=((r01)*(sj6));
IkReal x1809=((IkReal(1.00000000000000))*(cj11));
IkReal x1810=((IkReal(1.00000000000000))*(r22));
IkReal x1811=((IkReal(1.00000000000000))*(cj6));
IkReal x1812=((IkReal(0.0620002000000000))*(sj11));
IkReal x1813=((cj6)*(r10));
IkReal x1814=((IkReal(0.0620002000000000))*(cj11));
IkReal x1815=((r00)*(sj6));
IkReal x1816=((cj6)*(r11));
IkReal x1817=((IkReal(1.00000000000000))*(sj11));
IkReal x1818=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1811))));
evalcond[2]=((((sj11)*(x1816)))+(((IkReal(-1.00000000000000))*(x1809)*(x1813)))+(((cj11)*(x1815)))+(((IkReal(-1.00000000000000))*(x1808)*(x1817))));
evalcond[3]=((((cj6)*(cj7)*(r02)))+(((cj7)*(x1818)))+(((IkReal(-1.00000000000000))*(sj7)*(x1810))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((sj11)*(x1813)))+(((IkReal(-1.00000000000000))*(x1815)*(x1817)))+(((cj11)*(x1816))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1811)))+(((IkReal(-1.00000000000000))*(sj7)*(x1818)))+(((IkReal(-1.00000000000000))*(cj7)*(x1810))));
evalcond[6]=((IkReal(-0.0116089700000000))+(((x1813)*(x1814)))+(((IkReal(-1.00000000000000))*(py)*(x1811)))+(((IkReal(-1.00000000000000))*(x1814)*(x1815)))+(((px)*(sj6)))+(((x1808)*(x1812)))+(((IkReal(-1.00000000000000))*(x1812)*(x1816))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1819=((IkReal(1.00000000000000))*(sj11));
IkReal x1820=((sj6)*(sj7));
IkReal x1821=((cj7)*(r21));
IkReal x1822=((cj7)*(r20));
IkReal x1823=((cj6)*(sj7));
if( IKabs(((((r10)*(sj11)*(x1820)))+(((cj11)*(x1821)))+(((cj11)*(r01)*(x1823)))+(((cj11)*(r11)*(x1820)))+(((sj11)*(x1822)))+(((r00)*(sj11)*(x1823))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1819)*(x1821)))+(((cj11)*(r00)*(x1823)))+(((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1820)))+(((cj11)*(x1822)))+(((IkReal(-1.00000000000000))*(r01)*(x1819)*(x1823)))+(((cj11)*(r10)*(x1820))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(sj11)*(x1820)))+(((cj11)*(x1821)))+(((cj11)*(r01)*(x1823)))+(((cj11)*(r11)*(x1820)))+(((sj11)*(x1822)))+(((r00)*(sj11)*(x1823)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1819)*(x1821)))+(((cj11)*(r00)*(x1823)))+(((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1820)))+(((cj11)*(x1822)))+(((IkReal(-1.00000000000000))*(r01)*(x1819)*(x1823)))+(((cj11)*(r10)*(x1820)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((r10)*(sj11)*(x1820)))+(((cj11)*(x1821)))+(((cj11)*(r01)*(x1823)))+(((cj11)*(r11)*(x1820)))+(((sj11)*(x1822)))+(((r00)*(sj11)*(x1823)))), ((((IkReal(-1.00000000000000))*(x1819)*(x1821)))+(((cj11)*(r00)*(x1823)))+(((IkReal(-1.00000000000000))*(r11)*(x1819)*(x1820)))+(((cj11)*(x1822)))+(((IkReal(-1.00000000000000))*(r01)*(x1819)*(x1823)))+(((cj11)*(r10)*(x1820)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1824=IKcos(j8);
IkReal x1825=IKsin(j8);
IkReal x1826=((cj7)*(sj11));
IkReal x1827=((IkReal(0.0620002000000000))*(r21));
IkReal x1828=((r10)*(sj6));
IkReal x1829=((cj11)*(sj7));
IkReal x1830=((IkReal(0.0620002000000000))*(cj6));
IkReal x1831=((IkReal(1.00000000000000))*(r20));
IkReal x1832=((IkReal(0.0620002000000000))*(r20));
IkReal x1833=((cj11)*(cj7));
IkReal x1834=((IkReal(1.00000000000000))*(cj6));
IkReal x1835=((sj11)*(sj7));
IkReal x1836=((IkReal(1.00000000000000))*(pz));
IkReal x1837=((py)*(sj6));
IkReal x1838=((r11)*(sj6));
IkReal x1839=((cj6)*(r00));
IkReal x1840=((IkReal(1.00000000000000))*(x1825));
IkReal x1841=((r01)*(x1835));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1828)*(x1829)))+(((x1835)*(x1838)))+(x1824)+(((cj6)*(x1841)))+(((r21)*(x1826)))+(((IkReal(-1.00000000000000))*(r00)*(x1829)*(x1834)))+(((IkReal(-1.00000000000000))*(x1831)*(x1833))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1840)))+(((IkReal(-1.00000000000000))*(r01)*(x1826)*(x1834)))+(((r21)*(x1835)))+(((IkReal(-1.00000000000000))*(x1826)*(x1838)))+(((IkReal(-1.00000000000000))*(x1829)*(x1831)))+(((x1833)*(x1839)))+(((x1828)*(x1833))));
evalcond[2]=((((r20)*(x1826)))+(((r21)*(x1833)))+(((IkReal(-1.00000000000000))*(x1840)))+(((x1829)*(x1838)))+(((cj6)*(r01)*(x1829)))+(((x1828)*(x1835)))+(((x1835)*(x1839))));
evalcond[3]=((((r20)*(x1835)))+(((IkReal(-1.00000000000000))*(x1826)*(x1828)))+(((IkReal(-1.00000000000000))*(r01)*(x1833)*(x1834)))+(((IkReal(-1.00000000000000))*(x1824)))+(((IkReal(-1.00000000000000))*(x1833)*(x1838)))+(((IkReal(-1.00000000000000))*(r00)*(x1826)*(x1834)))+(((r21)*(x1829))));
evalcond[4]=((((IkReal(-0.301997930000000))*(x1824)))+(((IkReal(-1.00000000000000))*(sj7)*(x1836)))+(((cj6)*(cj7)*(px)))+(((cj7)*(x1837)))+(((IkReal(-0.00845530000000000))*(x1825)))+(((IkReal(-0.0620002000000000))*(x1828)*(x1833)))+(((IkReal(0.0620002000000000))*(x1826)*(x1838)))+(((IkReal(-1.00000000000000))*(x1827)*(x1835)))+(((IkReal(-1.00000000000000))*(r00)*(x1830)*(x1833)))+(((r01)*(x1826)*(x1830)))+(((x1829)*(x1832))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(cj7)*(x1836)))+(((x1832)*(x1833)))+(((r00)*(x1829)*(x1830)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1834)))+(((IkReal(0.00845530000000000))*(x1824)))+(((IkReal(-1.00000000000000))*(sj7)*(x1837)))+(((IkReal(0.0620002000000000))*(x1828)*(x1829)))+(((IkReal(-0.0620002000000000))*(x1835)*(x1838)))+(((IkReal(-1.00000000000000))*(x1826)*(x1827)))+(((IkReal(-1.00000000000000))*(x1830)*(x1841)))+(((IkReal(-0.301997930000000))*(x1825))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1842=((r01)*(sj6));
IkReal x1843=((IkReal(1.00000000000000))*(cj11));
IkReal x1844=((IkReal(1.00000000000000))*(r22));
IkReal x1845=((IkReal(1.00000000000000))*(cj6));
IkReal x1846=((IkReal(0.0620002000000000))*(sj11));
IkReal x1847=((cj6)*(r10));
IkReal x1848=((IkReal(0.0620002000000000))*(cj11));
IkReal x1849=((r00)*(sj6));
IkReal x1850=((cj6)*(r11));
IkReal x1851=((IkReal(1.00000000000000))*(sj11));
IkReal x1852=((r12)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1845))));
evalcond[2]=((((sj11)*(x1850)))+(((cj11)*(x1849)))+(((IkReal(-1.00000000000000))*(x1842)*(x1851)))+(((IkReal(-1.00000000000000))*(x1843)*(x1847))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj7)*(x1844)))+(((cj6)*(cj7)*(r02)))+(((cj7)*(x1852))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1849)*(x1851)))+(((cj11)*(x1850)))+(((sj11)*(x1847)))+(((IkReal(-1.00000000000000))*(x1842)*(x1843))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj7)*(x1852)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1845)))+(((IkReal(-1.00000000000000))*(cj7)*(x1844))));
evalcond[6]=((IkReal(-0.00857763000000000))+(((x1847)*(x1848)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(x1848)*(x1849)))+(((x1842)*(x1846)))+(((IkReal(-1.00000000000000))*(x1846)*(x1850)))+(((IkReal(-1.00000000000000))*(py)*(x1845))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1853=((cj7)*(r20));
IkReal x1854=((cj7)*(r21));
IkReal x1855=((IkReal(1.00000000000000))*(cj11));
IkReal x1856=((sj11)*(sj7));
IkReal x1857=((cj6)*(r01));
IkReal x1858=((r11)*(sj6));
IkReal x1859=((cj11)*(sj7));
IkReal x1860=((cj6)*(r00));
IkReal x1861=((r10)*(sj6)*(sj7));
if( IKabs(((((r10)*(sj6)*(x1856)))+(((x1858)*(x1859)))+(((x1857)*(x1859)))+(((x1856)*(x1860)))+(((cj11)*(x1854)))+(((sj11)*(x1853))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj7)*(x1855)*(x1860)))+(((sj11)*(x1854)))+(((x1856)*(x1857)))+(((IkReal(-1.00000000000000))*(x1855)*(x1861)))+(((IkReal(-1.00000000000000))*(x1853)*(x1855)))+(((x1856)*(x1858))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(sj6)*(x1856)))+(((x1858)*(x1859)))+(((x1857)*(x1859)))+(((x1856)*(x1860)))+(((cj11)*(x1854)))+(((sj11)*(x1853)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj7)*(x1855)*(x1860)))+(((sj11)*(x1854)))+(((x1856)*(x1857)))+(((IkReal(-1.00000000000000))*(x1855)*(x1861)))+(((IkReal(-1.00000000000000))*(x1853)*(x1855)))+(((x1856)*(x1858)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((r10)*(sj6)*(x1856)))+(((x1858)*(x1859)))+(((x1857)*(x1859)))+(((x1856)*(x1860)))+(((cj11)*(x1854)))+(((sj11)*(x1853)))), ((((IkReal(-1.00000000000000))*(sj7)*(x1855)*(x1860)))+(((sj11)*(x1854)))+(((x1856)*(x1857)))+(((IkReal(-1.00000000000000))*(x1855)*(x1861)))+(((IkReal(-1.00000000000000))*(x1853)*(x1855)))+(((x1856)*(x1858)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1862=IKsin(j8);
IkReal x1863=IKcos(j8);
IkReal x1864=((cj7)*(sj11));
IkReal x1865=((IkReal(0.0620002000000000))*(r21));
IkReal x1866=((r10)*(sj6));
IkReal x1867=((cj11)*(sj7));
IkReal x1868=((IkReal(0.0620002000000000))*(cj6));
IkReal x1869=((IkReal(1.00000000000000))*(r20));
IkReal x1870=((IkReal(0.0620002000000000))*(r20));
IkReal x1871=((cj11)*(cj7));
IkReal x1872=((IkReal(1.00000000000000))*(cj6));
IkReal x1873=((sj11)*(sj7));
IkReal x1874=((IkReal(1.00000000000000))*(pz));
IkReal x1875=((py)*(sj6));
IkReal x1876=((r11)*(sj6));
IkReal x1877=((cj6)*(r00));
IkReal x1878=((IkReal(1.00000000000000))*(x1863));
IkReal x1879=((r01)*(x1873));
evalcond[0]=((((x1873)*(x1876)))+(((IkReal(-1.00000000000000))*(x1866)*(x1867)))+(((cj6)*(x1879)))+(((r21)*(x1864)))+(((IkReal(-1.00000000000000))*(x1869)*(x1871)))+(((IkReal(-1.00000000000000))*(r00)*(x1867)*(x1872)))+(((IkReal(-1.00000000000000))*(x1878))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1864)*(x1872)))+(((x1866)*(x1871)))+(((x1871)*(x1877)))+(((IkReal(-1.00000000000000))*(x1864)*(x1876)))+(((r21)*(x1873)))+(x1862)+(((IkReal(-1.00000000000000))*(x1867)*(x1869))));
evalcond[2]=((((r21)*(x1871)))+(((cj6)*(r01)*(x1867)))+(((r20)*(x1864)))+(((x1867)*(x1876)))+(((x1866)*(x1873)))+(((x1873)*(x1877)))+(((IkReal(-1.00000000000000))*(x1862))));
evalcond[3]=((((r20)*(x1873)))+(((IkReal(-1.00000000000000))*(x1871)*(x1876)))+(((r21)*(x1867)))+(((IkReal(-1.00000000000000))*(r01)*(x1871)*(x1872)))+(((IkReal(-1.00000000000000))*(r00)*(x1864)*(x1872)))+(((IkReal(-1.00000000000000))*(x1864)*(x1866)))+(((IkReal(-1.00000000000000))*(x1878))));
evalcond[4]=((((IkReal(-0.301997930000000))*(x1863)))+(((IkReal(-1.00000000000000))*(r00)*(x1868)*(x1871)))+(((IkReal(-0.131825300000000))*(x1862)))+(((r01)*(x1864)*(x1868)))+(((x1867)*(x1870)))+(((cj6)*(cj7)*(px)))+(((cj7)*(x1875)))+(((IkReal(0.0620002000000000))*(x1864)*(x1876)))+(((IkReal(-1.00000000000000))*(x1865)*(x1873)))+(((IkReal(-1.00000000000000))*(sj7)*(x1874)))+(((IkReal(-0.0620002000000000))*(x1866)*(x1871))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-0.0620002000000000))*(x1873)*(x1876)))+(((IkReal(-0.301997930000000))*(x1862)))+(((IkReal(0.0620002000000000))*(x1866)*(x1867)))+(((IkReal(0.131825300000000))*(x1863)))+(((IkReal(-1.00000000000000))*(x1868)*(x1879)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1872)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(cj7)*(x1874)))+(((IkReal(-1.00000000000000))*(sj7)*(x1875)))+(((x1870)*(x1871)))+(((r00)*(x1867)*(x1868))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1880=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1880)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1880)))+(((cj11)*(r21)*(sj7)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1880)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1880))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1880)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1880)))+(((cj11)*(r21)*(sj7)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1880)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1880)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r12)*(sj6)))+(((cj6)*(cj7)*(r02)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))))), ((((IkReal(-1.00000000000000))*(cj11)*(r11)*(sj6)*(x1880)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(x1880)))+(((cj11)*(r21)*(sj7)))+(((r20)*(sj11)*(sj7)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj11)*(x1880)))+(((IkReal(-1.00000000000000))*(r10)*(sj11)*(sj6)*(x1880)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1881=IKcos(j8);
IkReal x1882=IKsin(j8);
IkReal x1883=((cj7)*(sj11));
IkReal x1884=((IkReal(0.0620002000000000))*(r21));
IkReal x1885=((r10)*(sj6));
IkReal x1886=((cj11)*(sj7));
IkReal x1887=((IkReal(0.0620002000000000))*(cj6));
IkReal x1888=((IkReal(1.00000000000000))*(r20));
IkReal x1889=((IkReal(1.00000000000000))*(cj7));
IkReal x1890=((IkReal(0.0620002000000000))*(r20));
IkReal x1891=((cj11)*(cj7));
IkReal x1892=((IkReal(1.00000000000000))*(cj6));
IkReal x1893=((sj11)*(sj7));
IkReal x1894=((cj6)*(r01));
IkReal x1895=((py)*(sj6));
IkReal x1896=((r11)*(sj6));
IkReal x1897=((IkReal(1.00000000000000))*(sj7));
IkReal x1898=((r12)*(sj6));
IkReal x1899=((cj6)*(cj7));
IkReal x1900=((cj6)*(r00));
IkReal x1901=((IkReal(1.00000000000000))*(x1882));
IkReal x1902=((r01)*(x1893));
IkReal x1903=((sj9)*(x1881));
IkReal x1904=((cj9)*(x1881));
evalcond[0]=((((r02)*(x1899)))+(((cj7)*(x1898)))+(((IkReal(-1.00000000000000))*(cj9)*(x1901)))+(((IkReal(-1.00000000000000))*(r22)*(x1897))));
evalcond[1]=((x1904)+(((IkReal(-1.00000000000000))*(r22)*(x1889)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1892)))+(((IkReal(-1.00000000000000))*(x1897)*(x1898))));
evalcond[2]=((((r21)*(x1883)))+(x1903)+(((IkReal(-1.00000000000000))*(x1888)*(x1891)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((IkReal(-1.00000000000000))*(r00)*(x1886)*(x1892)))+(((x1893)*(x1896)))+(((x1893)*(x1894))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1883)*(x1892)))+(((x1891)*(x1900)))+(((IkReal(-1.00000000000000))*(x1886)*(x1888)))+(((IkReal(-1.00000000000000))*(x1883)*(x1896)))+(((r21)*(x1893)))+(((IkReal(-1.00000000000000))*(sj9)*(x1901)))+(((x1885)*(x1891))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1901)))+(((x1886)*(x1894)))+(((x1886)*(x1896)))+(((r20)*(x1883)))+(((x1893)*(x1900)))+(((x1885)*(x1893)))+(((r21)*(x1891))));
evalcond[5]=((((r20)*(x1893)))+(((IkReal(-1.00000000000000))*(cj11)*(x1889)*(x1894)))+(((IkReal(-1.00000000000000))*(cj11)*(x1889)*(x1896)))+(((IkReal(-1.00000000000000))*(x1883)*(x1885)))+(((r21)*(x1886)))+(((IkReal(-1.00000000000000))*(x1881)))+(((IkReal(-1.00000000000000))*(r00)*(x1883)*(x1892))));
evalcond[6]=((((px)*(x1899)))+(((x1886)*(x1890)))+(((IkReal(-1.00000000000000))*(pz)*(x1897)))+(((IkReal(-0.0620002000000000))*(x1885)*(x1891)))+(((r01)*(x1883)*(x1887)))+(((IkReal(-1.00000000000000))*(r00)*(x1887)*(x1891)))+(((IkReal(0.0616850000000000))*(sj9)*(x1882)))+(((IkReal(-0.00151567000000000))*(cj9)*(x1882)))+(((IkReal(0.0620002000000000))*(x1883)*(x1896)))+(((IkReal(-0.301997930000000))*(x1881)))+(((IkReal(-1.00000000000000))*(x1884)*(x1893)))+(((IkReal(-0.0701403000000000))*(x1882)))+(((cj7)*(x1895))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1892)))+(((IkReal(0.00151567000000000))*(x1904)))+(((IkReal(-0.0620002000000000))*(x1893)*(x1896)))+(((r00)*(x1886)*(x1887)))+(((x1890)*(x1891)))+(((IkReal(-1.00000000000000))*(pz)*(x1889)))+(((IkReal(-0.301997930000000))*(x1882)))+(((IkReal(-0.0616850000000000))*(x1903)))+(((IkReal(-1.00000000000000))*(x1883)*(x1884)))+(((IkReal(0.0701403000000000))*(x1881)))+(((IkReal(-1.00000000000000))*(x1895)*(x1897)))+(((IkReal(0.0620002000000000))*(x1885)*(x1886)))+(((IkReal(-1.00000000000000))*(x1887)*(x1902))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1905=((sj6)*(sj7));
IkReal x1906=((cj6)*(sj7));
if( IKabs(((((r10)*(sj11)*(x1905)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((cj11)*(r11)*(x1905)))+(((r00)*(sj11)*(x1906)))+(((cj11)*(r01)*(x1906))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r22)))+(((r12)*(x1905)))+(((r02)*(x1906))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(sj11)*(x1905)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((cj11)*(r11)*(x1905)))+(((r00)*(sj11)*(x1906)))+(((cj11)*(r01)*(x1906)))))+IKsqr(((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r22)))+(((r12)*(x1905)))+(((r02)*(x1906)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((r10)*(sj11)*(x1905)))+(((cj11)*(cj7)*(r21)))+(((cj7)*(r20)*(sj11)))+(((cj11)*(r11)*(x1905)))+(((r00)*(sj11)*(x1906)))+(((cj11)*(r01)*(x1906)))), ((((IKabs(cj9) != 0)?((IkReal)1/(cj9)):(IkReal)1.0e30))*(((((cj7)*(r22)))+(((r12)*(x1905)))+(((r02)*(x1906)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1907=IKcos(j8);
IkReal x1908=IKsin(j8);
IkReal x1909=((cj7)*(sj11));
IkReal x1910=((IkReal(0.0620002000000000))*(r21));
IkReal x1911=((r10)*(sj6));
IkReal x1912=((cj11)*(sj7));
IkReal x1913=((IkReal(0.0620002000000000))*(cj6));
IkReal x1914=((IkReal(1.00000000000000))*(r20));
IkReal x1915=((IkReal(1.00000000000000))*(cj7));
IkReal x1916=((IkReal(0.0620002000000000))*(r20));
IkReal x1917=((cj11)*(cj7));
IkReal x1918=((IkReal(1.00000000000000))*(cj6));
IkReal x1919=((sj11)*(sj7));
IkReal x1920=((cj6)*(r01));
IkReal x1921=((py)*(sj6));
IkReal x1922=((r11)*(sj6));
IkReal x1923=((IkReal(1.00000000000000))*(sj7));
IkReal x1924=((r12)*(sj6));
IkReal x1925=((cj6)*(cj7));
IkReal x1926=((cj6)*(r00));
IkReal x1927=((IkReal(1.00000000000000))*(x1908));
IkReal x1928=((r01)*(x1919));
IkReal x1929=((sj9)*(x1907));
IkReal x1930=((cj9)*(x1907));
evalcond[0]=((((cj7)*(x1924)))+(((IkReal(-1.00000000000000))*(cj9)*(x1927)))+(((IkReal(-1.00000000000000))*(r22)*(x1923)))+(((r02)*(x1925))));
evalcond[1]=((x1930)+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1918)))+(((IkReal(-1.00000000000000))*(r22)*(x1915)))+(((IkReal(-1.00000000000000))*(x1923)*(x1924))));
evalcond[2]=((x1929)+(((x1919)*(x1922)))+(((r21)*(x1909)))+(((IkReal(-1.00000000000000))*(x1914)*(x1917)))+(((x1919)*(x1920)))+(((IkReal(-1.00000000000000))*(r00)*(x1912)*(x1918)))+(((IkReal(-1.00000000000000))*(x1911)*(x1912))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1909)*(x1922)))+(((r21)*(x1919)))+(((x1917)*(x1926)))+(((IkReal(-1.00000000000000))*(sj9)*(x1927)))+(((IkReal(-1.00000000000000))*(r01)*(x1909)*(x1918)))+(((x1911)*(x1917)))+(((IkReal(-1.00000000000000))*(x1912)*(x1914))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1927)))+(((x1911)*(x1919)))+(((r21)*(x1917)))+(((x1912)*(x1922)))+(((x1912)*(x1920)))+(((x1919)*(x1926)))+(((r20)*(x1909))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1909)*(x1918)))+(((IkReal(-1.00000000000000))*(x1909)*(x1911)))+(((IkReal(-1.00000000000000))*(x1907)))+(((r21)*(x1912)))+(((IkReal(-1.00000000000000))*(cj11)*(x1915)*(x1922)))+(((r20)*(x1919)))+(((IkReal(-1.00000000000000))*(cj11)*(x1915)*(x1920))));
evalcond[6]=((((IkReal(-0.301997930000000))*(x1907)))+(((IkReal(-1.00000000000000))*(x1910)*(x1919)))+(((IkReal(-0.00151567000000000))*(cj9)*(x1908)))+(((r01)*(x1909)*(x1913)))+(((IkReal(-1.00000000000000))*(r00)*(x1913)*(x1917)))+(((IkReal(-0.0701403000000000))*(x1908)))+(((px)*(x1925)))+(((IkReal(0.0616850000000000))*(sj9)*(x1908)))+(((cj7)*(x1921)))+(((x1912)*(x1916)))+(((IkReal(0.0620002000000000))*(x1909)*(x1922)))+(((IkReal(-0.0620002000000000))*(x1911)*(x1917)))+(((IkReal(-1.00000000000000))*(pz)*(x1923))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0620002000000000))*(x1911)*(x1912)))+(((IkReal(-1.00000000000000))*(x1913)*(x1928)))+(((x1916)*(x1917)))+(((IkReal(-1.00000000000000))*(x1909)*(x1910)))+(((IkReal(-1.00000000000000))*(x1921)*(x1923)))+(((IkReal(0.00151567000000000))*(x1930)))+(((r00)*(x1912)*(x1913)))+(((IkReal(-0.0620002000000000))*(x1919)*(x1922)))+(((IkReal(-0.301997930000000))*(x1908)))+(((IkReal(-0.0616850000000000))*(x1929)))+(((IkReal(0.0701403000000000))*(x1907)))+(((IkReal(-1.00000000000000))*(pz)*(x1915)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1918))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1931=((r12)*(sj6));
IkReal x1932=((cj6)*(r02));
if( IKabs(((gconst15)*(((((cj7)*(x1931)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1932))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((cj7)*(r22)))+(((sj7)*(x1932)))+(((sj7)*(x1931))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst15)*(((((cj7)*(x1931)))+(((IkReal(-1.00000000000000))*(r22)*(sj7)))+(((cj7)*(x1932)))))), ((gconst15)*(((((cj7)*(r22)))+(((sj7)*(x1932)))+(((sj7)*(x1931)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x1933=IKcos(j8);
IkReal x1934=IKsin(j8);
IkReal x1935=((cj7)*(sj11));
IkReal x1936=((IkReal(0.0620002000000000))*(r21));
IkReal x1937=((r10)*(sj6));
IkReal x1938=((cj11)*(sj7));
IkReal x1939=((IkReal(0.0620002000000000))*(cj6));
IkReal x1940=((IkReal(1.00000000000000))*(r20));
IkReal x1941=((IkReal(1.00000000000000))*(cj7));
IkReal x1942=((IkReal(0.0620002000000000))*(r20));
IkReal x1943=((cj11)*(cj7));
IkReal x1944=((IkReal(1.00000000000000))*(cj6));
IkReal x1945=((sj11)*(sj7));
IkReal x1946=((cj6)*(r01));
IkReal x1947=((py)*(sj6));
IkReal x1948=((r11)*(sj6));
IkReal x1949=((IkReal(1.00000000000000))*(sj7));
IkReal x1950=((r12)*(sj6));
IkReal x1951=((cj6)*(cj7));
IkReal x1952=((cj6)*(r00));
IkReal x1953=((IkReal(1.00000000000000))*(x1934));
IkReal x1954=((r01)*(x1945));
IkReal x1955=((sj9)*(x1933));
IkReal x1956=((cj9)*(x1933));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1949)))+(((IkReal(-1.00000000000000))*(cj9)*(x1953)))+(((r02)*(x1951)))+(((cj7)*(x1950))));
evalcond[1]=((x1956)+(((IkReal(-1.00000000000000))*(x1949)*(x1950)))+(((IkReal(-1.00000000000000))*(r22)*(x1941)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x1944))));
evalcond[2]=((((x1945)*(x1946)))+(((x1945)*(x1948)))+(x1955)+(((IkReal(-1.00000000000000))*(r00)*(x1938)*(x1944)))+(((IkReal(-1.00000000000000))*(x1940)*(x1943)))+(((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((r21)*(x1935))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1935)*(x1948)))+(((x1943)*(x1952)))+(((IkReal(-1.00000000000000))*(sj9)*(x1953)))+(((r21)*(x1945)))+(((x1937)*(x1943)))+(((IkReal(-1.00000000000000))*(r01)*(x1935)*(x1944)))+(((IkReal(-1.00000000000000))*(x1938)*(x1940))));
evalcond[4]=((((x1938)*(x1948)))+(((r21)*(x1943)))+(((x1938)*(x1946)))+(((IkReal(-1.00000000000000))*(x1953)))+(((x1945)*(x1952)))+(((x1937)*(x1945)))+(((r20)*(x1935))));
evalcond[5]=((((r21)*(x1938)))+(((r20)*(x1945)))+(((IkReal(-1.00000000000000))*(cj11)*(x1941)*(x1946)))+(((IkReal(-1.00000000000000))*(x1935)*(x1937)))+(((IkReal(-1.00000000000000))*(cj11)*(x1941)*(x1948)))+(((IkReal(-1.00000000000000))*(x1933)))+(((IkReal(-1.00000000000000))*(r00)*(x1935)*(x1944))));
evalcond[6]=((((IkReal(-0.00151567000000000))*(cj9)*(x1934)))+(((IkReal(-0.301997930000000))*(x1933)))+(((IkReal(-1.00000000000000))*(x1936)*(x1945)))+(((IkReal(0.0620002000000000))*(x1935)*(x1948)))+(((IkReal(-1.00000000000000))*(pz)*(x1949)))+(((IkReal(-1.00000000000000))*(r00)*(x1939)*(x1943)))+(((IkReal(0.0616850000000000))*(sj9)*(x1934)))+(((x1938)*(x1942)))+(((r01)*(x1935)*(x1939)))+(((cj7)*(x1947)))+(((px)*(x1951)))+(((IkReal(-0.0620002000000000))*(x1937)*(x1943)))+(((IkReal(-0.0701403000000000))*(x1934))));
evalcond[7]=((IkReal(0.270000000000000))+(((x1942)*(x1943)))+(((IkReal(0.0620002000000000))*(x1937)*(x1938)))+(((IkReal(-0.0620002000000000))*(x1945)*(x1948)))+(((IkReal(-0.301997930000000))*(x1934)))+(((IkReal(-1.00000000000000))*(x1947)*(x1949)))+(((IkReal(-1.00000000000000))*(x1935)*(x1936)))+(((IkReal(0.0701403000000000))*(x1933)))+(((IkReal(-1.00000000000000))*(pz)*(x1941)))+(((r00)*(x1938)*(x1939)))+(((IkReal(0.00151567000000000))*(x1956)))+(((IkReal(-0.0616850000000000))*(x1955)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x1944)))+(((IkReal(-1.00000000000000))*(x1939)*(x1954))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1957=((IkReal(1.00000000000000))*(cj11));
IkReal x1958=((r01)*(sj6));
IkReal x1959=((cj6)*(sj7));
IkReal x1960=((r01)*(sj11));
IkReal x1961=((IkReal(1.00000000000000))*(cj6));
IkReal x1962=((IkReal(0.0620002000000000))*(sj11));
IkReal x1963=((cj11)*(r10));
IkReal x1964=((r11)*(sj11));
IkReal x1965=((sj6)*(sj7));
IkReal x1966=((r21)*(sj11));
IkReal x1967=((r00)*(sj6));
IkReal x1968=((cj7)*(sj6));
IkReal x1969=((cj6)*(r10));
IkReal x1970=((IkReal(1.00000000000000))*(sj11));
IkReal x1971=((cj11)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(6.28318530717959))+(j9)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x1961))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1957)*(x1969)))+(((cj11)*(x1967)))+(((cj6)*(x1964)))+(((IkReal(-1.00000000000000))*(x1958)*(x1970))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1957)*(x1958)))+(((IkReal(-1.00000000000000))*(x1967)*(x1970)))+(((sj11)*(x1969)))+(((r11)*(x1971))));
evalcond[4]=((IkReal(0.0515917000000000))+(((IkReal(-0.0620002000000000))*(cj11)*(x1967)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1962)))+(((IkReal(-1.00000000000000))*(py)*(x1961)))+(((IkReal(0.0620002000000000))*(cj6)*(x1963)))+(((x1958)*(x1962))));
evalcond[5]=((((x1964)*(x1965)))+(((x1959)*(x1960)))+(((IkReal(-1.00000000000000))*(r10)*(x1957)*(x1965)))+(((IkReal(-1.00000000000000))*(cj7)*(r20)*(x1957)))+(((IkReal(-1.00000000000000))*(r00)*(x1957)*(x1959)))+(((cj7)*(x1966))));
evalcond[6]=((((x1963)*(x1968)))+(((IkReal(-1.00000000000000))*(x1964)*(x1968)))+(((cj7)*(r00)*(x1971)))+(((IkReal(-1.00000000000000))*(cj7)*(x1960)*(x1961)))+(((IkReal(-1.00000000000000))*(r20)*(sj7)*(x1957)))+(((sj7)*(x1966))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x1972=((r20)*(sj11));
IkReal x1973=((sj6)*(sj7));
IkReal x1974=((IkReal(1.00000000000000))*(sj11));
IkReal x1975=((IkReal(1.00000000000000))*(sj10));
IkReal x1976=((cj11)*(r11));
IkReal x1977=((cj11)*(r21));
IkReal x1978=((IkReal(1.00000000000000))*(cj10));
IkReal x1979=((cj7)*(x1978));
IkReal x1980=((cj6)*(sj10)*(sj7));
IkReal x1981=((IkReal(1.00000000000000))*(cj11)*(r01));
IkReal x1982=((cj10)*(cj6)*(sj7));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1973)*(x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(cj7)*(x1972)*(x1975)))+(((IkReal(-1.00000000000000))*(r12)*(x1973)*(x1978)))+(((IkReal(-1.00000000000000))*(r10)*(sj10)*(x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(r00)*(x1974)*(x1980)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1975)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(sj7)*(x1978)))+(((IkReal(-1.00000000000000))*(cj7)*(x1975)*(x1977)))+(((IkReal(-1.00000000000000))*(r22)*(x1979))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1977)*(x1979)))+(((IkReal(-1.00000000000000))*(x1973)*(x1976)*(x1978)))+(((IkReal(-1.00000000000000))*(cj10)*(r10)*(x1973)*(x1974)))+(((r12)*(sj10)*(x1973)))+(((cj7)*(r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r00)*(x1974)*(x1982)))+(((r02)*(x1980)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1978)))+(((IkReal(-1.00000000000000))*(x1972)*(x1979))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(x1973)*(x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(cj7)*(x1972)*(x1975)))+(((IkReal(-1.00000000000000))*(r12)*(x1973)*(x1978)))+(((IkReal(-1.00000000000000))*(r10)*(sj10)*(x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(r00)*(x1974)*(x1980)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1975)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(sj7)*(x1978)))+(((IkReal(-1.00000000000000))*(cj7)*(x1975)*(x1977)))+(((IkReal(-1.00000000000000))*(r22)*(x1979)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(x1977)*(x1979)))+(((IkReal(-1.00000000000000))*(x1973)*(x1976)*(x1978)))+(((IkReal(-1.00000000000000))*(cj10)*(r10)*(x1973)*(x1974)))+(((r12)*(sj10)*(x1973)))+(((cj7)*(r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r00)*(x1974)*(x1982)))+(((r02)*(x1980)))+(((IkReal(-1.00000000000000))*(cj11)*(cj6)*(r01)*(sj7)*(x1978)))+(((IkReal(-1.00000000000000))*(x1972)*(x1979)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x1983=IKcos(j8);
IkReal x1984=IKsin(j8);
IkReal x1985=((cj7)*(sj11));
IkReal x1986=((IkReal(0.0620002000000000))*(r21));
IkReal x1987=((IkReal(1.00000000000000))*(sj6));
IkReal x1988=((cj6)*(sj7));
IkReal x1989=((IkReal(0.0620002000000000))*(cj11));
IkReal x1990=((IkReal(1.00000000000000))*(cj7));
IkReal x1991=((r20)*(sj7));
IkReal x1992=((IkReal(0.0620002000000000))*(r01));
IkReal x1993=((cj11)*(cj7));
IkReal x1994=((sj11)*(sj7));
IkReal x1995=((r10)*(sj6));
IkReal x1996=((cj11)*(r01));
IkReal x1997=((cj6)*(cj7));
IkReal x1998=((cj7)*(sj6));
IkReal x1999=((IkReal(1.00000000000000))*(cj10));
IkReal x2000=((IkReal(1.00000000000000))*(sj7));
IkReal x2001=((r11)*(sj6));
IkReal x2002=((cj11)*(sj7));
IkReal x2003=((sj10)*(x1983));
IkReal x2004=((sj10)*(x1984));
IkReal x2005=((x1984)*(x1999));
evalcond[0]=((((r02)*(x1997)))+(((IkReal(-1.00000000000000))*(x1983)*(x1999)))+(((IkReal(-1.00000000000000))*(r22)*(x2000)))+(((r12)*(x1998)))+(((IkReal(-1.00000000000000))*(x2004))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x1988)))+(((IkReal(-1.00000000000000))*(r22)*(x1990)))+(((IkReal(-1.00000000000000))*(x2005)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x1987)))+(x2003));
evalcond[2]=((((x2001)*(x2002)))+(((r21)*(x1993)))+(((cj10)*(x1983)))+(((r20)*(x1985)))+(((x1994)*(x1995)))+(x2004)+(((x1988)*(x1996)))+(((r00)*(sj11)*(x1988))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1987)*(x1993)))+(((sj11)*(x1991)))+(((IkReal(-1.00000000000000))*(x2005)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1985)))+(((r21)*(x2002)))+(x2003)+(((IkReal(-1.00000000000000))*(cj6)*(x1990)*(x1996)))+(((IkReal(-1.00000000000000))*(r10)*(x1985)*(x1987))));
evalcond[4]=((((px)*(x1997)))+(((IkReal(-1.00000000000000))*(cj7)*(x1989)*(x1995)))+(((IkReal(-1.00000000000000))*(r00)*(x1989)*(x1997)))+(((IkReal(0.0620002000000000))*(x1985)*(x2001)))+(((IkReal(-1.00000000000000))*(x1986)*(x1994)))+(((IkReal(-0.0686246300000000))*(x1984)))+(((x1989)*(x1991)))+(((IkReal(-1.00000000000000))*(pz)*(x2000)))+(((IkReal(-0.301997930000000))*(x1983)))+(((py)*(x1998)))+(((cj6)*(x1985)*(x1992))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x1987)))+(((IkReal(-1.00000000000000))*(pz)*(x1990)))+(((IkReal(0.0686246300000000))*(x1983)))+(((IkReal(-0.0620002000000000))*(x1994)*(x2001)))+(((IkReal(-1.00000000000000))*(sj11)*(x1988)*(x1992)))+(((IkReal(-1.00000000000000))*(px)*(x1988)))+(((IkReal(-0.301997930000000))*(x1984)))+(((cj7)*(r20)*(x1989)))+(((r00)*(x1988)*(x1989)))+(((sj7)*(x1989)*(x1995)))+(((IkReal(-1.00000000000000))*(x1985)*(x1986))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2006=((IkReal(1.00000000000000))*(r22));
IkReal x2007=((sj10)*(sj7));
IkReal x2008=((cj10)*(cj7));
IkReal x2009=((cj7)*(sj10));
IkReal x2010=((r12)*(sj6));
IkReal x2011=((cj6)*(r02));
IkReal x2012=((cj10)*(sj7));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(x2006)*(x2008)))+(((IkReal(-1.00000000000000))*(x2006)*(x2007)))+(((x2009)*(x2011)))+(((IkReal(-1.00000000000000))*(x2010)*(x2012)))+(((x2009)*(x2010))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((x2007)*(x2011)))+(((r22)*(x2009)))+(((x2007)*(x2010)))+(((x2008)*(x2010)))+(((x2008)*(x2011)))+(((IkReal(-1.00000000000000))*(x2006)*(x2012))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(x2006)*(x2008)))+(((IkReal(-1.00000000000000))*(x2006)*(x2007)))+(((x2009)*(x2011)))+(((IkReal(-1.00000000000000))*(x2010)*(x2012)))+(((x2009)*(x2010)))))), ((gconst16)*(((((x2007)*(x2011)))+(((r22)*(x2009)))+(((x2007)*(x2010)))+(((x2008)*(x2010)))+(((x2008)*(x2011)))+(((IkReal(-1.00000000000000))*(x2006)*(x2012)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[6];
IkReal x2013=IKcos(j8);
IkReal x2014=IKsin(j8);
IkReal x2015=((cj7)*(sj11));
IkReal x2016=((IkReal(0.0620002000000000))*(r21));
IkReal x2017=((IkReal(1.00000000000000))*(sj6));
IkReal x2018=((cj6)*(sj7));
IkReal x2019=((IkReal(0.0620002000000000))*(cj11));
IkReal x2020=((IkReal(1.00000000000000))*(cj7));
IkReal x2021=((r20)*(sj7));
IkReal x2022=((IkReal(0.0620002000000000))*(r01));
IkReal x2023=((cj11)*(cj7));
IkReal x2024=((sj11)*(sj7));
IkReal x2025=((r10)*(sj6));
IkReal x2026=((cj11)*(r01));
IkReal x2027=((cj6)*(cj7));
IkReal x2028=((cj7)*(sj6));
IkReal x2029=((IkReal(1.00000000000000))*(cj10));
IkReal x2030=((IkReal(1.00000000000000))*(sj7));
IkReal x2031=((r11)*(sj6));
IkReal x2032=((cj11)*(sj7));
IkReal x2033=((sj10)*(x2013));
IkReal x2034=((sj10)*(x2014));
IkReal x2035=((x2014)*(x2029));
evalcond[0]=((((r02)*(x2027)))+(((IkReal(-1.00000000000000))*(x2034)))+(((r12)*(x2028)))+(((IkReal(-1.00000000000000))*(r22)*(x2030)))+(((IkReal(-1.00000000000000))*(x2013)*(x2029))));
evalcond[1]=((x2033)+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2017)))+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(r22)*(x2020)))+(((IkReal(-1.00000000000000))*(r02)*(x2018))));
evalcond[2]=((x2034)+(((r20)*(x2015)))+(((x2031)*(x2032)))+(((x2018)*(x2026)))+(((r21)*(x2023)))+(((r00)*(sj11)*(x2018)))+(((cj10)*(x2013)))+(((x2024)*(x2025))));
evalcond[3]=((x2033)+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(r11)*(x2017)*(x2023)))+(((r21)*(x2032)))+(((IkReal(-1.00000000000000))*(r10)*(x2015)*(x2017)))+(((IkReal(-1.00000000000000))*(cj6)*(x2020)*(x2026)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2015)))+(((sj11)*(x2021))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2016)*(x2024)))+(((IkReal(-1.00000000000000))*(cj7)*(x2019)*(x2025)))+(((py)*(x2028)))+(((IkReal(0.0620002000000000))*(x2015)*(x2031)))+(((IkReal(-1.00000000000000))*(pz)*(x2030)))+(((IkReal(-1.00000000000000))*(r00)*(x2019)*(x2027)))+(((px)*(x2027)))+(((cj6)*(x2015)*(x2022)))+(((x2019)*(x2021)))+(((IkReal(-0.0686246300000000))*(x2014)))+(((IkReal(-0.301997930000000))*(x2013))));
evalcond[5]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2017)))+(((IkReal(0.0686246300000000))*(x2013)))+(((cj7)*(r20)*(x2019)))+(((IkReal(-0.301997930000000))*(x2014)))+(((IkReal(-1.00000000000000))*(sj11)*(x2018)*(x2022)))+(((r00)*(x2018)*(x2019)))+(((IkReal(-1.00000000000000))*(pz)*(x2020)))+(((IkReal(-1.00000000000000))*(px)*(x2018)))+(((IkReal(-1.00000000000000))*(x2015)*(x2016)))+(((sj7)*(x2019)*(x2025)))+(((IkReal(-0.0620002000000000))*(x2024)*(x2031))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2036=((cj6)*(r10));
IkReal x2037=((IkReal(1.00000000000000))*(cj6));
IkReal x2038=((cj6)*(r11));
IkReal x2039=((r01)*(sj6));
IkReal x2040=((IkReal(0.0620002000000000))*(sj11));
IkReal x2041=((IkReal(0.0620002000000000))*(cj11));
IkReal x2042=((IkReal(1.00000000000000))*(cj11));
IkReal x2043=((r00)*(sj6));
IkReal x2044=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x2037))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2039)*(x2044)))+(cj9)+(((IkReal(-1.00000000000000))*(x2036)*(x2042)))+(((cj11)*(x2043)))+(((sj11)*(x2038))));
evalcond[3]=((sj9)+(((cj11)*(x2038)))+(((IkReal(-1.00000000000000))*(x2039)*(x2042)))+(((IkReal(-1.00000000000000))*(x2043)*(x2044)))+(((sj11)*(x2036))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-1.00000000000000))*(x2038)*(x2040)))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x2041)*(x2043)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x2037)))+(((x2036)*(x2041)))+(((x2039)*(x2040))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2045=((IkReal(1.00000000000000))*(sj7));
IkReal x2046=((r12)*(sj6));
IkReal x2047=((cj6)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2045)*(x2047)))+(((IkReal(-1.00000000000000))*(cj7)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x2045)))+(((cj7)*(x2046)))+(((cj7)*(x2047))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2045)*(x2047)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x2045)))+(((cj7)*(x2046)))+(((cj7)*(x2047)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2045)*(x2047)))+(((IkReal(-1.00000000000000))*(cj7)*(r22)))), ((((IkReal(-1.00000000000000))*(r22)*(x2045)))+(((cj7)*(x2046)))+(((cj7)*(x2047)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2048=IKcos(j8);
IkReal x2049=IKsin(j8);
IkReal x2050=((cj7)*(sj11));
IkReal x2051=((IkReal(0.0620002000000000))*(r21));
IkReal x2052=((r10)*(sj6));
IkReal x2053=((cj11)*(sj7));
IkReal x2054=((IkReal(0.0620002000000000))*(cj6));
IkReal x2055=((IkReal(1.00000000000000))*(r20));
IkReal x2056=((IkReal(1.00000000000000))*(cj7));
IkReal x2057=((IkReal(0.0620002000000000))*(r20));
IkReal x2058=((cj11)*(cj7));
IkReal x2059=((IkReal(1.00000000000000))*(cj6));
IkReal x2060=((sj11)*(sj7));
IkReal x2061=((cj6)*(r01));
IkReal x2062=((py)*(sj6));
IkReal x2063=((r11)*(sj6));
IkReal x2064=((IkReal(1.00000000000000))*(sj7));
IkReal x2065=((r12)*(sj6));
IkReal x2066=((cj6)*(cj7));
IkReal x2067=((cj6)*(r00));
IkReal x2068=((IkReal(1.00000000000000))*(x2049));
IkReal x2069=((r01)*(x2060));
IkReal x2070=((cj9)*(x2049));
IkReal x2071=((sj9)*(x2048));
IkReal x2072=((cj9)*(x2048));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2048)))+(((r02)*(x2066)))+(((cj7)*(x2065)))+(((IkReal(-1.00000000000000))*(r22)*(x2064))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2056)))+(((IkReal(-1.00000000000000))*(x2068)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2059)))+(((IkReal(-1.00000000000000))*(x2064)*(x2065))));
evalcond[2]=((x2071)+(((x2060)*(x2061)))+(((IkReal(-1.00000000000000))*(r00)*(x2053)*(x2059)))+(((r21)*(x2050)))+(((IkReal(-1.00000000000000))*(x2055)*(x2058)))+(((x2060)*(x2063)))+(((IkReal(-1.00000000000000))*(x2052)*(x2053))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2050)*(x2063)))+(((x2052)*(x2058)))+(((x2058)*(x2067)))+(((IkReal(-1.00000000000000))*(sj9)*(x2068)))+(((IkReal(-1.00000000000000))*(x2053)*(x2055)))+(((IkReal(-1.00000000000000))*(r01)*(x2050)*(x2059)))+(((r21)*(x2060))));
evalcond[4]=((((r21)*(x2058)))+(((IkReal(-1.00000000000000))*(x2072)))+(((x2060)*(x2067)))+(((x2053)*(x2061)))+(((x2053)*(x2063)))+(((x2052)*(x2060)))+(((r20)*(x2050))));
evalcond[5]=((x2070)+(((IkReal(-1.00000000000000))*(x2050)*(x2052)))+(((IkReal(-1.00000000000000))*(cj11)*(x2056)*(x2061)))+(((IkReal(-1.00000000000000))*(r00)*(x2050)*(x2059)))+(((r21)*(x2053)))+(((r20)*(x2060)))+(((IkReal(-1.00000000000000))*(cj11)*(x2056)*(x2063))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r00)*(x2054)*(x2058)))+(((IkReal(-0.00151567000000000))*(x2070)))+(((IkReal(0.0620002000000000))*(x2050)*(x2063)))+(((IkReal(-1.00000000000000))*(x2051)*(x2060)))+(((IkReal(-0.301997930000000))*(x2048)))+(((px)*(x2066)))+(((r01)*(x2050)*(x2054)))+(((cj7)*(x2062)))+(((IkReal(-1.00000000000000))*(pz)*(x2064)))+(((IkReal(-0.0620002000000000))*(x2052)*(x2058)))+(((IkReal(-0.0701403000000000))*(x2049)))+(((IkReal(0.0616850000000000))*(sj9)*(x2049)))+(((x2053)*(x2057))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(x2050)*(x2051)))+(((IkReal(0.0701403000000000))*(x2048)))+(((IkReal(0.0620002000000000))*(x2052)*(x2053)))+(((IkReal(-0.0620002000000000))*(x2060)*(x2063)))+(((x2057)*(x2058)))+(((IkReal(-1.00000000000000))*(x2062)*(x2064)))+(((IkReal(-0.0616850000000000))*(x2071)))+(((IkReal(-1.00000000000000))*(pz)*(x2056)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x2059)))+(((IkReal(-0.301997930000000))*(x2049)))+(((IkReal(-1.00000000000000))*(x2054)*(x2069)))+(((r00)*(x2053)*(x2054)))+(((IkReal(0.00151567000000000))*(x2072))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2073=((cj6)*(r10));
IkReal x2074=((IkReal(1.00000000000000))*(cj6));
IkReal x2075=((cj6)*(r11));
IkReal x2076=((r01)*(sj6));
IkReal x2077=((IkReal(0.0620002000000000))*(sj11));
IkReal x2078=((IkReal(0.0620002000000000))*(cj11));
IkReal x2079=((IkReal(1.00000000000000))*(cj11));
IkReal x2080=((r00)*(sj6));
IkReal x2081=((IkReal(1.00000000000000))*(sj11));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(sj6)))+(((IkReal(-1.00000000000000))*(r12)*(x2074))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2073)*(x2079)))+(cj9)+(((IkReal(-1.00000000000000))*(x2076)*(x2081)))+(((sj11)*(x2075)))+(((cj11)*(x2080))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2080)*(x2081)))+(((sj11)*(x2073)))+(((cj11)*(x2075)))+(((IkReal(-1.00000000000000))*(sj9)))+(((IkReal(-1.00000000000000))*(x2076)*(x2079))));
evalcond[4]=((IkReal(-0.0100933000000000))+(((IkReal(-0.00151567000000000))*(sj9)))+(((IkReal(-0.0616850000000000))*(cj9)))+(((IkReal(-1.00000000000000))*(x2078)*(x2080)))+(((px)*(sj6)))+(((IkReal(-1.00000000000000))*(py)*(x2074)))+(((IkReal(-1.00000000000000))*(x2075)*(x2077)))+(((x2073)*(x2078)))+(((x2076)*(x2077))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2082=((r12)*(sj6));
IkReal x2083=((cj6)*(r02));
IkReal x2084=((IkReal(1.00000000000000))*(cj7));
if( IKabs(((((cj7)*(r22)))+(((sj7)*(x2083)))+(((sj7)*(x2082))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2082)*(x2084)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2083)*(x2084))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj7)*(r22)))+(((sj7)*(x2083)))+(((sj7)*(x2082)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2082)*(x2084)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2083)*(x2084)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((cj7)*(r22)))+(((sj7)*(x2083)))+(((sj7)*(x2082)))), ((((IkReal(-1.00000000000000))*(x2082)*(x2084)))+(((r22)*(sj7)))+(((IkReal(-1.00000000000000))*(x2083)*(x2084)))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2085=IKcos(j8);
IkReal x2086=IKsin(j8);
IkReal x2087=((cj7)*(sj11));
IkReal x2088=((IkReal(0.0620002000000000))*(r21));
IkReal x2089=((r10)*(sj6));
IkReal x2090=((cj11)*(sj7));
IkReal x2091=((IkReal(0.0620002000000000))*(cj6));
IkReal x2092=((IkReal(1.00000000000000))*(r20));
IkReal x2093=((IkReal(1.00000000000000))*(cj7));
IkReal x2094=((IkReal(0.0620002000000000))*(r20));
IkReal x2095=((cj11)*(cj7));
IkReal x2096=((IkReal(1.00000000000000))*(cj6));
IkReal x2097=((sj11)*(sj7));
IkReal x2098=((cj6)*(r01));
IkReal x2099=((py)*(sj6));
IkReal x2100=((r11)*(sj6));
IkReal x2101=((IkReal(1.00000000000000))*(sj7));
IkReal x2102=((r12)*(sj6));
IkReal x2103=((cj6)*(cj7));
IkReal x2104=((cj6)*(r00));
IkReal x2105=((r01)*(x2097));
IkReal x2106=((sj9)*(x2085));
IkReal x2107=((cj9)*(x2085));
IkReal x2108=((IkReal(1.00000000000000))*(x2086));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x2101)))+(((r02)*(x2103)))+(x2085)+(((cj7)*(x2102))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2101)*(x2102)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2096)))+(x2086)+(((IkReal(-1.00000000000000))*(r22)*(x2093))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x2090)*(x2096)))+(((IkReal(-1.00000000000000))*(x2092)*(x2095)))+(((x2097)*(x2098)))+(((x2097)*(x2100)))+(x2106)+(((r21)*(x2087)))+(((IkReal(-1.00000000000000))*(x2089)*(x2090))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2087)*(x2100)))+(((IkReal(-1.00000000000000))*(r01)*(x2087)*(x2096)))+(((IkReal(-1.00000000000000))*(x2090)*(x2092)))+(((IkReal(-1.00000000000000))*(sj9)*(x2108)))+(((x2095)*(x2104)))+(((x2089)*(x2095)))+(((r21)*(x2097))));
evalcond[4]=((((x2097)*(x2104)))+(((x2089)*(x2097)))+(((r21)*(x2095)))+(x2107)+(((x2090)*(x2100)))+(((x2090)*(x2098)))+(((r20)*(x2087))));
evalcond[5]=((((r20)*(x2097)))+(((r21)*(x2090)))+(((IkReal(-1.00000000000000))*(cj11)*(x2093)*(x2100)))+(((IkReal(-1.00000000000000))*(x2087)*(x2089)))+(((IkReal(-1.00000000000000))*(r00)*(x2087)*(x2096)))+(((IkReal(-1.00000000000000))*(cj11)*(x2093)*(x2098)))+(((IkReal(-1.00000000000000))*(cj9)*(x2108))));
evalcond[6]=((((cj7)*(x2099)))+(((IkReal(-1.00000000000000))*(x2088)*(x2097)))+(((IkReal(-0.0701403000000000))*(x2086)))+(((IkReal(-0.301997930000000))*(x2085)))+(((IkReal(-0.00151567000000000))*(cj9)*(x2086)))+(((IkReal(0.0616850000000000))*(sj9)*(x2086)))+(((IkReal(-1.00000000000000))*(pz)*(x2101)))+(((IkReal(-0.0620002000000000))*(x2089)*(x2095)))+(((px)*(x2103)))+(((IkReal(-1.00000000000000))*(r00)*(x2091)*(x2095)))+(((IkReal(0.0620002000000000))*(x2087)*(x2100)))+(((x2090)*(x2094)))+(((r01)*(x2087)*(x2091))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-0.0616850000000000))*(x2106)))+(((x2094)*(x2095)))+(((IkReal(-0.0620002000000000))*(x2097)*(x2100)))+(((IkReal(-1.00000000000000))*(x2099)*(x2101)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x2096)))+(((IkReal(-1.00000000000000))*(x2091)*(x2105)))+(((r00)*(x2090)*(x2091)))+(((IkReal(-1.00000000000000))*(x2087)*(x2088)))+(((IkReal(0.0701403000000000))*(x2085)))+(((IkReal(-1.00000000000000))*(pz)*(x2093)))+(((IkReal(0.0620002000000000))*(x2089)*(x2090)))+(((IkReal(0.00151567000000000))*(x2107)))+(((IkReal(-0.301997930000000))*(x2086))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2109=((IKabs(sj9) != 0)?((IkReal)1/(sj9)):(IkReal)1.0e30);
IkReal x2110=((cj6)*(cj7));
IkReal x2111=((IkReal(1.00000000000000))*(r01));
IkReal x2112=((r21)*(sj7));
IkReal x2113=((cj7)*(sj6));
IkReal x2114=((cj11)*(r10));
IkReal x2115=((cj11)*(r00));
IkReal x2116=((cj9)*(sj10));
IkReal x2117=((IkReal(1.00000000000000))*(sj7));
IkReal x2118=((cj11)*(r20));
IkReal x2119=((IkReal(1.00000000000000))*(r11));
IkReal x2120=((sj11)*(x2116));
if( IKabs(((x2109)*(((((sj11)*(x2112)))+(((IkReal(-1.00000000000000))*(sj11)*(x2113)*(x2119)))+(((IkReal(-1.00000000000000))*(sj11)*(x2110)*(x2111)))+(((x2113)*(x2114)))+(((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((x2110)*(x2115))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2109)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((x2110)*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(x2113)*(x2119)*(x2120)))+(((IkReal(-1.00000000000000))*(x2110)*(x2111)*(x2120)))+(((x2112)*(x2120)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2117)))+(((r12)*(sj9)*(x2113)))+(((r02)*(sj9)*(x2110)))+(((x2113)*(x2114)*(x2116)))+(((IkReal(-1.00000000000000))*(x2116)*(x2117)*(x2118))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2109)*(((((sj11)*(x2112)))+(((IkReal(-1.00000000000000))*(sj11)*(x2113)*(x2119)))+(((IkReal(-1.00000000000000))*(sj11)*(x2110)*(x2111)))+(((x2113)*(x2114)))+(((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((x2110)*(x2115)))))))+IKsqr(((x2109)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((x2110)*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(x2113)*(x2119)*(x2120)))+(((IkReal(-1.00000000000000))*(x2110)*(x2111)*(x2120)))+(((x2112)*(x2120)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2117)))+(((r12)*(sj9)*(x2113)))+(((r02)*(sj9)*(x2110)))+(((x2113)*(x2114)*(x2116)))+(((IkReal(-1.00000000000000))*(x2116)*(x2117)*(x2118)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((x2109)*(((((sj11)*(x2112)))+(((IkReal(-1.00000000000000))*(sj11)*(x2113)*(x2119)))+(((IkReal(-1.00000000000000))*(sj11)*(x2110)*(x2111)))+(((x2113)*(x2114)))+(((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((x2110)*(x2115)))))), ((x2109)*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((x2110)*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(x2113)*(x2119)*(x2120)))+(((IkReal(-1.00000000000000))*(x2110)*(x2111)*(x2120)))+(((x2112)*(x2120)))+(((IkReal(-1.00000000000000))*(r22)*(sj9)*(x2117)))+(((r12)*(sj9)*(x2113)))+(((r02)*(sj9)*(x2110)))+(((x2113)*(x2114)*(x2116)))+(((IkReal(-1.00000000000000))*(x2116)*(x2117)*(x2118)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2121=IKsin(j8);
IkReal x2122=IKcos(j8);
IkReal x2123=((cj7)*(sj11));
IkReal x2124=((IkReal(0.0620002000000000))*(r21));
IkReal x2125=((IkReal(1.00000000000000))*(sj6));
IkReal x2126=((cj11)*(sj7));
IkReal x2127=((IkReal(0.0620002000000000))*(cj6));
IkReal x2128=((IkReal(1.00000000000000))*(r20));
IkReal x2129=((IkReal(1.00000000000000))*(cj7));
IkReal x2130=((IkReal(0.0620002000000000))*(r20));
IkReal x2131=((cj11)*(cj7));
IkReal x2132=((IkReal(1.00000000000000))*(cj6));
IkReal x2133=((cj6)*(r01));
IkReal x2134=((cj7)*(sj6));
IkReal x2135=((IkReal(1.00000000000000))*(cj10));
IkReal x2136=((IkReal(1.00000000000000))*(sj7));
IkReal x2137=((r10)*(sj6));
IkReal x2138=((sj11)*(sj7));
IkReal x2139=((cj6)*(cj7));
IkReal x2140=((r11)*(sj6));
IkReal x2141=((cj6)*(r00));
IkReal x2142=((r01)*(x2138));
IkReal x2143=((sj9)*(x2122));
IkReal x2144=((cj9)*(x2122));
IkReal x2145=((sj6)*(x2138));
IkReal x2146=((cj9)*(x2121));
IkReal x2147=((sj9)*(x2121));
evalcond[0]=((((sj10)*(x2146)))+(((r02)*(x2139)))+(((IkReal(-1.00000000000000))*(x2122)*(x2135)))+(((IkReal(-1.00000000000000))*(r22)*(x2136)))+(((r12)*(x2134))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x2144)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2125)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2132)))+(((IkReal(-1.00000000000000))*(r22)*(x2129)))+(((IkReal(-1.00000000000000))*(x2121)*(x2135))));
evalcond[2]=((((r21)*(x2123)))+(((IkReal(-1.00000000000000))*(r00)*(x2126)*(x2132)))+(((IkReal(-1.00000000000000))*(x2128)*(x2131)))+(((IkReal(-1.00000000000000))*(r10)*(x2125)*(x2126)))+(x2143)+(((x2133)*(x2138)))+(((x2138)*(x2140))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2123)*(x2132)))+(((x2131)*(x2141)))+(((r21)*(x2138)))+(((x2131)*(x2137)))+(((IkReal(-1.00000000000000))*(x2147)))+(((IkReal(-1.00000000000000))*(r11)*(x2123)*(x2125)))+(((IkReal(-1.00000000000000))*(x2126)*(x2128))));
evalcond[4]=((((x2126)*(x2133)))+(((sj10)*(x2121)))+(((r21)*(x2131)))+(((x2138)*(x2141)))+(((r20)*(x2123)))+(((x2126)*(x2140)))+(((x2137)*(x2138)))+(((IkReal(-1.00000000000000))*(x2135)*(x2144))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2123)*(x2132)))+(((cj10)*(x2146)))+(((IkReal(-1.00000000000000))*(r10)*(x2123)*(x2125)))+(((sj10)*(x2122)))+(((r20)*(x2138)))+(((IkReal(-1.00000000000000))*(r11)*(x2125)*(x2131)))+(((IkReal(-1.00000000000000))*(cj11)*(x2129)*(x2133)))+(((r21)*(x2126))));
evalcond[6]=((((x2126)*(x2130)))+(((IkReal(0.0620002000000000))*(x2123)*(x2140)))+(((IkReal(-1.00000000000000))*(x2124)*(x2138)))+(((IkReal(-1.00000000000000))*(r00)*(x2127)*(x2131)))+(((IkReal(-1.00000000000000))*(pz)*(x2136)))+(((IkReal(-0.0620002000000000))*(x2131)*(x2137)))+(((r01)*(x2123)*(x2127)))+(((IkReal(0.0616850000000000))*(x2147)))+(((IkReal(-0.00151567000000000))*(x2146)))+(((px)*(x2139)))+(((py)*(x2134)))+(((IkReal(-0.301997930000000))*(x2122)))+(((IkReal(-0.0701403000000000))*(x2121))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-0.0620002000000000))*(x2138)*(x2140)))+(((IkReal(0.0701403000000000))*(x2122)))+(((IkReal(0.0620002000000000))*(x2126)*(x2137)))+(((IkReal(-1.00000000000000))*(x2127)*(x2142)))+(((IkReal(-1.00000000000000))*(pz)*(x2129)))+(((IkReal(0.00151567000000000))*(x2144)))+(((IkReal(-0.0616850000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2125)))+(((IkReal(-1.00000000000000))*(x2123)*(x2124)))+(((IkReal(-0.301997930000000))*(x2121)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x2132)))+(((r00)*(x2126)*(x2127)))+(((x2130)*(x2131))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2148=(cj9)*(cj9);
IkReal x2149=((r22)*(sj7));
IkReal x2150=((IkReal(1.00000000000000))*(cj7));
IkReal x2151=((r12)*(sj6));
IkReal x2152=((cj6)*(r01));
IkReal x2153=((r11)*(sj6));
IkReal x2154=((cj6)*(r02));
IkReal x2155=((cj11)*(sj7));
IkReal x2156=((cj7)*(r20)*(sj11));
IkReal x2157=((cj11)*(cj7)*(r21));
IkReal x2158=((cj9)*(x2155));
IkReal x2159=((r10)*(sj11)*(sj6)*(sj7));
IkReal x2160=((cj6)*(r00)*(sj11)*(sj7));
if( IKabs(((((IKabs(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((x2156)+(x2157)+(x2159)+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2154)))+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2151)))+(((x2152)*(x2155)))+(x2160)+(((cj9)*(x2149)))+(((x2153)*(x2155))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10))))) != 0)?((IkReal)1/(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10)))))):(IkReal)1.0e30))*(((((x2153)*(x2158)))+(((cj9)*(x2156)))+(((IkReal(-1.00000000000000))*(x2150)*(x2154)))+(((cj9)*(x2157)))+(((cj9)*(x2160)))+(x2149)+(((cj9)*(x2159)))+(((x2152)*(x2158)))+(((IkReal(-1.00000000000000))*(x2150)*(x2151))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((x2156)+(x2157)+(x2159)+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2154)))+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2151)))+(((x2152)*(x2155)))+(x2160)+(((cj9)*(x2149)))+(((x2153)*(x2155)))))))+IKsqr(((((IKabs(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10))))) != 0)?((IkReal)1/(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10)))))):(IkReal)1.0e30))*(((((x2153)*(x2158)))+(((cj9)*(x2156)))+(((IkReal(-1.00000000000000))*(x2150)*(x2154)))+(((cj9)*(x2157)))+(((cj9)*(x2160)))+(x2149)+(((cj9)*(x2159)))+(((x2152)*(x2158)))+(((IkReal(-1.00000000000000))*(x2150)*(x2151)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j8array[0]=IKatan2(((((IKabs(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10))))) != 0)?((IkReal)1/(((((sj10)*(x2148)))+(((IkReal(-1.00000000000000))*(sj10)))))):(IkReal)1.0e30))*(((x2156)+(x2157)+(x2159)+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2154)))+(((IkReal(-1.00000000000000))*(cj9)*(x2150)*(x2151)))+(((x2152)*(x2155)))+(x2160)+(((cj9)*(x2149)))+(((x2153)*(x2155)))))), ((((IKabs(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10))))) != 0)?((IkReal)1/(((((cj10)*(x2148)))+(((IkReal(-1.00000000000000))*(cj10)))))):(IkReal)1.0e30))*(((((x2153)*(x2158)))+(((cj9)*(x2156)))+(((IkReal(-1.00000000000000))*(x2150)*(x2154)))+(((cj9)*(x2157)))+(((cj9)*(x2160)))+(x2149)+(((cj9)*(x2159)))+(((x2152)*(x2158)))+(((IkReal(-1.00000000000000))*(x2150)*(x2151)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2161=IKsin(j8);
IkReal x2162=IKcos(j8);
IkReal x2163=((cj7)*(sj11));
IkReal x2164=((IkReal(0.0620002000000000))*(r21));
IkReal x2165=((IkReal(1.00000000000000))*(sj6));
IkReal x2166=((cj11)*(sj7));
IkReal x2167=((IkReal(0.0620002000000000))*(cj6));
IkReal x2168=((IkReal(1.00000000000000))*(r20));
IkReal x2169=((IkReal(1.00000000000000))*(cj7));
IkReal x2170=((IkReal(0.0620002000000000))*(r20));
IkReal x2171=((cj11)*(cj7));
IkReal x2172=((IkReal(1.00000000000000))*(cj6));
IkReal x2173=((cj6)*(r01));
IkReal x2174=((cj7)*(sj6));
IkReal x2175=((IkReal(1.00000000000000))*(cj10));
IkReal x2176=((IkReal(1.00000000000000))*(sj7));
IkReal x2177=((r10)*(sj6));
IkReal x2178=((sj11)*(sj7));
IkReal x2179=((cj6)*(cj7));
IkReal x2180=((r11)*(sj6));
IkReal x2181=((cj6)*(r00));
IkReal x2182=((r01)*(x2178));
IkReal x2183=((sj9)*(x2162));
IkReal x2184=((cj9)*(x2162));
IkReal x2185=((sj6)*(x2178));
IkReal x2186=((cj9)*(x2161));
IkReal x2187=((sj9)*(x2161));
evalcond[0]=((((r12)*(x2174)))+(((r02)*(x2179)))+(((sj10)*(x2186)))+(((IkReal(-1.00000000000000))*(x2162)*(x2175)))+(((IkReal(-1.00000000000000))*(r22)*(x2176))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2172)))+(((IkReal(-1.00000000000000))*(x2161)*(x2175)))+(((IkReal(-1.00000000000000))*(r22)*(x2169)))+(((IkReal(-1.00000000000000))*(sj10)*(x2184)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2165))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x2165)*(x2166)))+(((IkReal(-1.00000000000000))*(r00)*(x2166)*(x2172)))+(((IkReal(-1.00000000000000))*(x2168)*(x2171)))+(x2183)+(((r21)*(x2163)))+(((x2178)*(x2180)))+(((x2173)*(x2178))));
evalcond[3]=((((x2171)*(x2177)))+(((IkReal(-1.00000000000000))*(r11)*(x2163)*(x2165)))+(((x2171)*(x2181)))+(((IkReal(-1.00000000000000))*(x2166)*(x2168)))+(((r21)*(x2178)))+(((IkReal(-1.00000000000000))*(x2187)))+(((IkReal(-1.00000000000000))*(r01)*(x2163)*(x2172))));
evalcond[4]=((((x2166)*(x2180)))+(((IkReal(-1.00000000000000))*(x2175)*(x2184)))+(((x2177)*(x2178)))+(((r21)*(x2171)))+(((x2166)*(x2173)))+(((sj10)*(x2161)))+(((r20)*(x2163)))+(((x2178)*(x2181))));
evalcond[5]=((((cj10)*(x2186)))+(((IkReal(-1.00000000000000))*(r00)*(x2163)*(x2172)))+(((sj10)*(x2162)))+(((r20)*(x2178)))+(((IkReal(-1.00000000000000))*(r10)*(x2163)*(x2165)))+(((IkReal(-1.00000000000000))*(r11)*(x2165)*(x2171)))+(((IkReal(-1.00000000000000))*(cj11)*(x2169)*(x2173)))+(((r21)*(x2166))));
evalcond[6]=((((r01)*(x2163)*(x2167)))+(((IkReal(0.0616850000000000))*(x2187)))+(((IkReal(-1.00000000000000))*(x2164)*(x2178)))+(((IkReal(-0.0620002000000000))*(x2171)*(x2177)))+(((IkReal(-1.00000000000000))*(r00)*(x2167)*(x2171)))+(((IkReal(0.0620002000000000))*(x2163)*(x2180)))+(((py)*(x2174)))+(((px)*(x2179)))+(((IkReal(-0.0701403000000000))*(x2161)))+(((IkReal(-1.00000000000000))*(pz)*(x2176)))+(((IkReal(-0.00151567000000000))*(x2186)))+(((x2166)*(x2170)))+(((IkReal(-0.301997930000000))*(x2162))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(0.0620002000000000))*(x2166)*(x2177)))+(((IkReal(-1.00000000000000))*(x2167)*(x2182)))+(((IkReal(-1.00000000000000))*(x2163)*(x2164)))+(((r00)*(x2166)*(x2167)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2165)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x2172)))+(((IkReal(-0.301997930000000))*(x2161)))+(((IkReal(0.00151567000000000))*(x2184)))+(((IkReal(-0.0616850000000000))*(x2183)))+(((IkReal(0.0701403000000000))*(x2162)))+(((IkReal(-0.0620002000000000))*(x2178)*(x2180)))+(((x2170)*(x2171)))+(((IkReal(-1.00000000000000))*(pz)*(x2169))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j8array[1], cj8array[1], sj8array[1];
bool j8valid[1]={false};
_nj8 = 1;
IkReal x2188=((IkReal(1.00000000000000))*(cj10));
IkReal x2189=((cj6)*(r02));
IkReal x2190=((cj7)*(r22));
IkReal x2191=((r12)*(sj6));
IkReal x2192=((cj10)*(cj7));
IkReal x2193=((r22)*(sj7));
IkReal x2194=((IkReal(1.00000000000000))*(cj9)*(sj10));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(sj7)*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(cj7)*(x2189)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2188)*(x2191)))+(((IkReal(-1.00000000000000))*(x2188)*(x2190)))+(((cj9)*(sj10)*(x2193)))+(((IkReal(-1.00000000000000))*(cj7)*(x2191)*(x2194))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x2188)*(x2193)))+(((x2191)*(x2192)))+(((x2189)*(x2192)))+(((IkReal(-1.00000000000000))*(x2190)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2189)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2191)*(x2194))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j8array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(sj7)*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(cj7)*(x2189)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2188)*(x2191)))+(((IkReal(-1.00000000000000))*(x2188)*(x2190)))+(((cj9)*(sj10)*(x2193)))+(((IkReal(-1.00000000000000))*(cj7)*(x2191)*(x2194)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(x2188)*(x2193)))+(((x2191)*(x2192)))+(((x2189)*(x2192)))+(((IkReal(-1.00000000000000))*(x2190)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2189)*(x2194)))+(((IkReal(-1.00000000000000))*(sj7)*(x2191)*(x2194)))))));
sj8array[0]=IKsin(j8array[0]);
cj8array[0]=IKcos(j8array[0]);
if( j8array[0] > IKPI )
{
    j8array[0]-=IK2PI;
}
else if( j8array[0] < -IKPI )
{    j8array[0]+=IK2PI;
}
j8valid[0] = true;
for(int ij8 = 0; ij8 < 1; ++ij8)
{
if( !j8valid[ij8] )
{
    continue;
}
_ij8[0] = ij8; _ij8[1] = -1;
for(int iij8 = ij8+1; iij8 < 1; ++iij8)
{
if( j8valid[iij8] && IKabs(cj8array[ij8]-cj8array[iij8]) < IKFAST_SOLUTION_THRESH && IKabs(sj8array[ij8]-sj8array[iij8]) < IKFAST_SOLUTION_THRESH )
{
    j8valid[iij8]=false; _ij8[1] = iij8; break; 
}
}
j8 = j8array[ij8]; cj8 = cj8array[ij8]; sj8 = sj8array[ij8];
{
IkReal evalcond[8];
IkReal x2195=IKsin(j8);
IkReal x2196=IKcos(j8);
IkReal x2197=((cj7)*(sj11));
IkReal x2198=((IkReal(0.0620002000000000))*(r21));
IkReal x2199=((IkReal(1.00000000000000))*(sj6));
IkReal x2200=((cj11)*(sj7));
IkReal x2201=((IkReal(0.0620002000000000))*(cj6));
IkReal x2202=((IkReal(1.00000000000000))*(r20));
IkReal x2203=((IkReal(1.00000000000000))*(cj7));
IkReal x2204=((IkReal(0.0620002000000000))*(r20));
IkReal x2205=((cj11)*(cj7));
IkReal x2206=((IkReal(1.00000000000000))*(cj6));
IkReal x2207=((cj6)*(r01));
IkReal x2208=((cj7)*(sj6));
IkReal x2209=((IkReal(1.00000000000000))*(cj10));
IkReal x2210=((IkReal(1.00000000000000))*(sj7));
IkReal x2211=((r10)*(sj6));
IkReal x2212=((sj11)*(sj7));
IkReal x2213=((cj6)*(cj7));
IkReal x2214=((r11)*(sj6));
IkReal x2215=((cj6)*(r00));
IkReal x2216=((r01)*(x2212));
IkReal x2217=((sj9)*(x2196));
IkReal x2218=((cj9)*(x2196));
IkReal x2219=((sj6)*(x2212));
IkReal x2220=((cj9)*(x2195));
IkReal x2221=((sj9)*(x2195));
evalcond[0]=((((r12)*(x2208)))+(((sj10)*(x2220)))+(((r02)*(x2213)))+(((IkReal(-1.00000000000000))*(r22)*(x2210)))+(((IkReal(-1.00000000000000))*(x2196)*(x2209))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2203)))+(((IkReal(-1.00000000000000))*(r02)*(sj7)*(x2206)))+(((IkReal(-1.00000000000000))*(x2195)*(x2209)))+(((IkReal(-1.00000000000000))*(r12)*(sj7)*(x2199)))+(((IkReal(-1.00000000000000))*(sj10)*(x2218))));
evalcond[2]=((x2217)+(((IkReal(-1.00000000000000))*(r00)*(x2200)*(x2206)))+(((IkReal(-1.00000000000000))*(r10)*(x2199)*(x2200)))+(((IkReal(-1.00000000000000))*(x2202)*(x2205)))+(((x2212)*(x2214)))+(((x2207)*(x2212)))+(((r21)*(x2197))));
evalcond[3]=((((r21)*(x2212)))+(((IkReal(-1.00000000000000))*(x2221)))+(((x2205)*(x2211)))+(((IkReal(-1.00000000000000))*(r01)*(x2197)*(x2206)))+(((x2205)*(x2215)))+(((IkReal(-1.00000000000000))*(x2200)*(x2202)))+(((IkReal(-1.00000000000000))*(r11)*(x2197)*(x2199))));
evalcond[4]=((((x2211)*(x2212)))+(((x2200)*(x2214)))+(((sj10)*(x2195)))+(((r20)*(x2197)))+(((IkReal(-1.00000000000000))*(x2209)*(x2218)))+(((x2212)*(x2215)))+(((x2200)*(x2207)))+(((r21)*(x2205))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2197)*(x2206)))+(((sj10)*(x2196)))+(((IkReal(-1.00000000000000))*(cj11)*(x2203)*(x2207)))+(((IkReal(-1.00000000000000))*(r11)*(x2199)*(x2205)))+(((r20)*(x2212)))+(((r21)*(x2200)))+(((IkReal(-1.00000000000000))*(r10)*(x2197)*(x2199)))+(((cj10)*(x2220))));
evalcond[6]=((((px)*(x2213)))+(((IkReal(0.0620002000000000))*(x2197)*(x2214)))+(((IkReal(-0.0701403000000000))*(x2195)))+(((IkReal(-1.00000000000000))*(pz)*(x2210)))+(((py)*(x2208)))+(((IkReal(-1.00000000000000))*(x2198)*(x2212)))+(((IkReal(-0.00151567000000000))*(x2220)))+(((r01)*(x2197)*(x2201)))+(((IkReal(-0.301997930000000))*(x2196)))+(((IkReal(0.0616850000000000))*(x2221)))+(((IkReal(-1.00000000000000))*(r00)*(x2201)*(x2205)))+(((x2200)*(x2204)))+(((IkReal(-0.0620002000000000))*(x2205)*(x2211))));
evalcond[7]=((IkReal(0.270000000000000))+(((IkReal(-1.00000000000000))*(pz)*(x2203)))+(((IkReal(0.0620002000000000))*(x2200)*(x2211)))+(((IkReal(-0.0620002000000000))*(x2212)*(x2214)))+(((IkReal(-1.00000000000000))*(x2201)*(x2216)))+(((IkReal(-1.00000000000000))*(px)*(sj7)*(x2206)))+(((IkReal(0.00151567000000000))*(x2218)))+(((IkReal(-0.0616850000000000))*(x2217)))+(((IkReal(-1.00000000000000))*(x2197)*(x2198)))+(((r00)*(x2200)*(x2201)))+(((x2204)*(x2205)))+(((IkReal(-1.00000000000000))*(py)*(sj7)*(x2199)))+(((IkReal(0.0701403000000000))*(x2196)))+(((IkReal(-0.301997930000000))*(x2195))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j6;
vinfos[0].indices[0] = _ij6[0];
vinfos[0].indices[1] = _ij6[1];
vinfos[0].maxsolutions = _nj6;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j7;
vinfos[1].indices[0] = _ij7[0];
vinfos[1].indices[1] = _ij7[1];
vinfos[1].maxsolutions = _nj7;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j8;
vinfos[2].indices[0] = _ij8[0];
vinfos[2].indices[1] = _ij8[1];
vinfos[2].maxsolutions = _nj8;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j9;
vinfos[3].indices[0] = _ij9[0];
vinfos[3].indices[1] = _ij9[1];
vinfos[3].maxsolutions = _nj9;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j10;
vinfos[4].indices[0] = _ij10[0];
vinfos[4].indices[1] = _ij10[1];
vinfos[4].maxsolutions = _nj10;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j11;
vinfos[5].indices[0] = _ij11[0];
vinfos[5].indices[1] = _ij11[1];
vinfos[5].maxsolutions = _nj11;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - abby (3b5965e3efecb86d721e4f0c7fa253d8)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
